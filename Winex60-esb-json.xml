<channel version="4.4.0">
  <id>c4d4a61e-d131-4f45-b215-d4750740a579</id>
  <nextMetaDataId>91</nextMetaDataId>
  <name>Winex60-esb-json</name>
  <description></description>
  <revision>85</revision>
  <sourceConnector version="4.4.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="4.4.0">
      <pluginProperties>
        <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="4.4.0">
  <authType>NONE</authType>
        </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
      </pluginProperties>
      <listenerConnectorProperties version="4.4.0">
        <host>0.0.0.0</host>
        <port>18020</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="4.4.0">
        <responseVariable>ACK</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <xmlBody>false</xmlBody>
      <parseMultipart>true</parseMultipart>
      <includeMetadata>false</includeMetadata>
      <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
      <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
      <responseContentType>application/json</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode></responseStatusCode>
      <responseHeaders class="linked-hash-map"/>
      <responseHeadersVariable></responseHeadersVariable>
      <useResponseHeadersVariable>false</useResponseHeadersVariable>
      <charset>UTF-8</charset>
      <contextPath>/winex</contextPath>
      <timeout>300000</timeout>
      <staticResources/>
    </properties>
    <transformer version="4.4.0">
      <elements/>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>JSON</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="4.4.0">
      <elements/>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="4.4.0">
      <metaDataId>10</metaDataId>
      <name>InHospital.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


//获取原始请求数据
var originalRequestStr=connectorMessage.getRawData();
 

  
//logger.info(&apos;PVM0101 =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Request&quot;: {
        &quot;Body&quot;: {
          &quot;Event&quot;: {
            &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
            &quot;Operator&quot;: {
              &quot;IDNumber&quot;: &quot;operatorCode&quot;,
              &quot;Name&quot;: &quot;operatorCodeName&quot;
            }
          },
          &quot;Demography&quot;: {
            //性别
            &quot;Sex&quot;: {
              &quot;Identifier&quot;: &quot;patientSexDict&quot;,
              &quot;Text&quot;: &quot;patientSexName&quot;
            },
            &quot;Birthday&quot;: &quot;patientBirthday&quot;,
            &quot;PatientName&quot;: &quot;patientName&quot;,
            &quot;PatientIdentifierList&quot;: {
              &quot;*&quot;: {
                &quot;IDType&quot;: {
                  // 患者ID
                  &quot;PatientID&quot;: {
                    &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
                  },
                  // 病历号
                  &quot;MedicalRecordNo&quot;: {
                    &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
                  },
                  // 暂时不用
                  &quot;RoleNo&quot;: {
                    &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
                  }
                  //,
                  // 病人标识，是否是60的患者标识 patientId
                  //&quot;PersonID&quot;: {
                  // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
                  // }
                }
              }
            },
            //年龄
            &quot;Age&quot;: {
              &quot;0&quot;: {
                &quot;Identifier&quot;: &quot;age&quot;
              }
            },
            //身份证号码
            &quot;SSN&quot;: &quot;patientIdNo&quot;
          },
          //就诊记录
          &quot;PatientVisit&quot;: {
            &quot;PatientLocation&quot;: {
              //床号
              &quot;Bed&quot;: &quot;bedCode&quot;,
              &quot;Department&quot;: {
                //入院科室名称和编码
                &quot;Identifier&quot;: &quot;inpatientDeptCode&quot;,
                &quot;Text&quot;: &quot;inpatientDeptName&quot;
              },
              //入院病区名称和编码
              &quot;Ward&quot;: {
                &quot;Identifier&quot;: [&quot;inpatientWardCode&quot;, &quot;wardCode&quot;],
                &quot;Text&quot;: [&quot;inpatientWardName&quot;, &quot;wardName&quot;]
              },
              //房间号
              &quot;Room&quot;: &quot;sickroomCode&quot;
            },
            &quot;HandleList&quot;: {
              &quot;0&quot;: {
                // 入院日期
                &quot;HandleTime&quot;: &quot;inpatientInDate&quot;
              }
            },
            //就诊流水号,---首页序号&quot;inpatientNo&quot;
            &quot;VisitNumber&quot;: [&quot;inpatientNo&quot;, &quot;inHospitalEncounterId&quot;],
            //住院次数
            &quot;VisitCount&quot;: &quot;hospitalizationNumber&quot;,
            //患者当前就诊状态
            //0-入院登记
            //1-病区分床
            //2-病区出院
            //3-病人出院
            //4-取消结算
            //5-进入ICU
            //6-进入产房
            //7-转科状态
            //8-数据转出
            //9-作废记录 
            &quot;VisitStatus&quot;: {
              &quot;Identifier&quot;: &quot;VisitStatusCode&quot;
            }
          },
          &quot;Surgery&quot;: {
            &quot;DaySurgeryNo&quot;: &quot;daySurgeryId&quot;
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //入院登记
      &quot;businessType&quot;: &quot;1&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];




//通过规则转换进行请求参数的处理
var jsonData=WinningJoltUtil.transform2(originalRequestStr,spec);
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9qc29uIiwKICAgICAgICAgICAgIlRyYW5Db2RlIjoiUFZNMDUwMSIsCiAgICAgICAgICAgICJDb250ZW50RW5jb2RpbmciOiIiLAogICAgICAgICAgICAiVHJhbnNmZXJUeXBlIjoiIiwKICAgICAgICAgICAgIlRpbWVzdGFtcCI6IjIwMjMtMTEtMDcgMTY6MDc6MzAuNzA4IiwKICAgICAgICAgICAgIlNlY3VyaXR5Q29udGVudCI6IiIsCiAgICAgICAgICAgICJNYWMiOiIiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQ2FsbGJhY2siOiIiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VjdXJpdHlQb2xpY3kiOiIiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiIiLAogICAgICAgICAgICAiTWVzc2FnZUlkIjoiYzg3NTlhOTQtN2M3OS00MWVjLThkMzQtZTM5YjY1MTM3M2IwIgogICAgICAgIH0sCiAgICAgICAgIkJvZHkiOnsKICAgICAgICAgICAgIlBhdGllbnRWaXNpdCI6ewogICAgICAgICAgICAgICAgIlBhdGllbnRMb2NhdGlvbiI6ewogICAgICAgICAgICAgICAgICAgICJCZWQiOiIzMCIsCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5ZG85ZC45LiO5Y2x6YeN55eH5Yy75a2m56eR77yI5ZG85ZC45bq35aSN56eR77yJIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIldhcmQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzazkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IjIwOeeXheWMuiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJSb29tIjoiMjA5LTExIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJIYW5kbGVMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSGFuZGxlQnkiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJSb2xlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIyMzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6LSj5Lu75Yy755SfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJEZXBhcnRtZW50Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLlkbzlkLjkuI7ljbHph43nl4fljLvlrabnp5HvvIjlkbzlkLjlurflpI3np5HvvIkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiNTI5MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IueOi+e7tOebiiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZVRpbWUiOiIyMDIzLTExLTA3IDE2OjA3OjM3IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjg2MjYzNzc1MjE4NzkwNDEiLAogICAgICAgICAgICAgICAgIlRyZWF0bWVudEdyb3VwIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiR3JvdXAiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzA5MzQzMDA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiUGh5c2ljaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHcm91cERlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjMzODA5QSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmtKrovonljY7nu4QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlBhdGllbnRDbGFzcyI6IkkiLAogICAgICAgICAgICAgICAgIlZpc2l0U3RhdHVzIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueXheWMuuWIhuW6iiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRlbW9ncmFwaHkiOnsKICAgICAgICAgICAgICAgICJTZXgiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6Ik0iLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi55S35oCnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJCaXJ0aGRheSI6IjE5OTktMDgtMTkgMDA6MDA6MDAiLAogICAgICAgICAgICAgICAgIlBhdGllbnROYW1lIjoi5b6Q6K+X5paHIiwKICAgICAgICAgICAgICAgICJQYXRpZW50SWRlbnRpZmllckxpc3QiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGVTY29wZSI6IkkiLAogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUGF0aWVudElEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6Ik1lZGljYWxSZWNvcmRObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjkzNDI1OTM5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlJvbGVObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyODU5MDQ1NjU2Mjg1MTg0MCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkFnZSI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjI0LAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuWygSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlNTTiI6IjM0MjIyMjE5OTkwODE5MTIxNSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRpYWdub3Npc0xpc3QiOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGlhZ25vc2lzVHlwZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NvZGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzOTkzOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi56S+5Yy66I635b6X5oCn6IK654KO77yM6Z2e6YeN55eHIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NsYXNzIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6Zeo6K+K6K+K5patIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc1R5cGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzk5MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuekvuWMuuiOt+W+l+aAp+iCuueCju+8jOmdnumHjeeXhyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDbGFzcyI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjEiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IumXqOiviuiviuaWrSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxNjowNzozNyIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjYyNDUiLAogICAgICAgICAgICAgICAgICAgICJOYW1lIjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudEZhY2lsaXR5Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiI5OTE4MjciLAogICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudENvZGUiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IlBWTTA1MDEiLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5oKj6ICF5YWl5Yy6IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0101&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0101&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>17</metaDataId>
      <name>cancelOperationApply-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_esb_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
          <entry>
            <string>service_id</string>
            <list>
              <string>ORD0311</string>
            </list>
          </entry>
          <entry>
            <string>domain_id</string>
            <list>
              <string>02</string>
            </list>
          </entry>
          <entry>
            <string>apply_unit_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>exec_unit_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>hospital_id</string>
            <list>
              <string>991827</string>
            </list>
          </entry>
          <entry>
            <string>send_sys_id</string>
            <list>
              <string>HIS0137</string>
            </list>
          </entry>
          <entry>
            <string>order_exec_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>extend_sub_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
if(msg[&apos;patientBirthday&apos;]){
 msg[&apos;patientBirthday&apos;]=msg[&apos;patientBirthday&apos;]+&apos; 00:00:00&apos;;
}
 
//logger.info(&apos;winex 手术申请单取消=&apos;+JSON.stringify(msg));
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {

      &quot;inpatientHosAreaCode&quot;: &quot;Event.EventFacility.Identifier&quot;,
      &quot;inpatientHosAreaName&quot;: &quot;Event.EventFacility.Text&quot;,
      //人口学信息
      &quot;#PatientID&quot;: &quot;Demography.PatientIdentifierList[0].IDType&quot;,
      &quot;patientId&quot;: &quot;Demography.PatientIdentifierList[0].IDNumber&quot;,
      &quot;outpatientMedicalNo&quot;: &quot;Demography.PatientIdentifierList[1].IDNumber&quot;,
      &quot;#MedicalRecordNo&quot;: &quot;Demography.PatientIdentifierList[1].IDType&quot;,
      //角色ID ，先默认一个，后续根据医院进行修改
     // &quot;#1000009563554&quot;: &quot;Demography.PatientIdentifierList[2].IDNumber&quot;,
    //  &quot;#RoleNo&quot;: &quot;Demography.PatientIdentifierList[2].IDType&quot;,
      &quot;patientIdNo&quot;: &quot;Demography.SSN&quot;,
      &quot;patientName&quot;: &quot;Demography.PatientName&quot;,
      //1男 2 女 0 未知
      //0---&gt;1.2.156.112604.1.2.5.1
      // 1---&gt;M
      // 2---&gt;F
      &quot;patientSexDict&quot;: {
        &quot;1&quot;: {
          &quot;#M&quot;: &quot;Demography.Sex.Identifier&quot;,
          &quot;#男性&quot;: &quot;Demography.Sex.Text&quot;
        },
        &quot;2&quot;: {
          &quot;#F&quot;: &quot;Demography.Sex.Identifier&quot;,
          &quot;#女性&quot;: &quot;Demography.Sex.Text&quot;
        }
      },
      &quot;patientBirthday&quot;: &quot;Demography.Birthday&quot;,
      &quot;patientTel&quot;: &quot;Demography.PhoneList[0].PhoneNumberST&quot;,
      &quot;#CP&quot;: &quot;Demography.PhoneList[0].EquipmentType&quot;,
      //省市取县代码
      &quot;residentialAddress&quot;: {
	    &quot;#H&quot;:&quot;Demography.AddressList[0].Type&quot;,
        &quot;#165&quot;:&quot;Demography.AddressList[0].Country.Identifier&quot;,
        &quot;#中国&quot;:&quot;Demography.AddressList[0].Country.Text&quot;,
        &quot;provincialCode&quot;: &quot;Demography.AddressList[0].Province.Identifier&quot;,
        &quot;provincialName&quot;: &quot;Demography.AddressList[0].Province.Text&quot;,
        &quot;addressMeno&quot;: &quot;Demography.AddressList[0].StreetAddress&quot;,
        &quot;cityLevelCode&quot;: &quot;Demography.AddressList[0].City.Identifier&quot;,
        &quot;cityLevelName&quot;: &quot;Demography.AddressList[0].City.Text&quot;,
        &quot;countyLevelCode&quot;: &quot;Demography.AddressList[0].County.Identifier&quot;,
        &quot;countyLevelName&quot;: &quot;Demography.AddressList[0].County.Text&quot;,
        &quot;streetCode&quot;: &quot;Demography.AddressList[0].Town.Identifier&quot;,
        &quot;streetName&quot;: &quot;Demography.AddressList[0].Town.Text&quot;
      },
      //就诊记录
      //首页序号
      &quot;encounterId&quot;: &quot;PatientVisit.VisitNumber&quot;,
     
      &quot;bedCode&quot;: &quot;PatientVisit.PatientLocation.Bed&quot;,
      
      &quot;surgeryDeptCode&quot;: &quot;PatientVisit.HandleList[0].HandleBy.Department.Identifier&quot;,
      &quot;surgeryDeptName&quot;: [&quot;PatientVisit.HandleList[0].HandleBy.Department.Text&quot;, &quot;PatientVisit.PatientLocation.Room&quot;],
      //手术申请医生和工号
      &quot;surgerySurgeonCode&quot;: &quot;PatientVisit.HandleList[0].HandleBy.IDNumber&quot;,
      &quot;surgerySurgeonName&quot;: &quot;PatientVisit.HandleList[0].HandleBy.Name&quot;,
      //手术申请单数据
      //手术申请单号
      &quot;daySurgeryId&quot;: [&quot;Surgery.DaySurgeryNo&quot;, &quot;OrderGroupList[0].Surgery.DaySurgeryNo&quot;],
      //申请时间(拟手术时间)
      &quot;surgeryPlanDate&quot;: [&quot;PatientVisit.HandleList[0].HandleTime&quot;,&quot;Surgery.ApplyTime&quot;, &quot;OrderGroupList[0].Surgery.ApplyTime&quot;],
      //隔离标志
      // &quot;&quot;:&quot;Surgery.IsolationIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.IsolationIndicator.Text&quot;,
      //感染标致
      //&quot;&quot;:&quot;Surgery.SpecialInfect.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.SpecialInfect.Text&quot;,
      // //HepatitisAnt 肝炎相关抗原
      //&quot;&quot;:&quot;Surgery.HepatitisAnt.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HepatitisAnt.Text&quot;,
      //HBV 乙肝
      // &quot;&quot;:&quot;Surgery.HBV.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HBV.Text&quot;,
      //Syphilis 梅毒
      // &quot;&quot;:&quot;Surgery.Syphilis.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.Syphilis.Text&quot;,
      //HIV 艾滋
      // &quot;&quot;:&quot;Surgery.HIV.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HIV.Text&quot;,
      //ReadyBloodIndicator   备血标致
      //  &quot;&quot;:&quot;Surgery.ReadyBloodIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.ReadyBloodIndicator.Text&quot;,
      //自体血回输
      //  &quot;&quot;:&quot;Surgery.SelfBloodIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.SelfBloodIndicator.Text&quot;
      //操作人工号和名称
	        //事件信息
     
      &quot;operatorCode&quot;: [&quot;Event.Operator.IDNumber&quot;,&quot;Surgery.HandleList[0].HandleBy.IDNumber&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleBy.IDNumber&quot;],
      &quot;operatorName&quot;: [&quot;Event.Operator.Name&quot;,&quot;Surgery.HandleList[0].HandleBy.Name&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleBy.Name&quot;],
      
	  &quot;wardCode&quot;: [&quot;PatientVisit.PatientLocation.Ward.Identifier&quot;,&quot;Surgery.HandleList[0].Ward.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Ward.Identifier&quot;],
      &quot;wardName&quot;: [&quot;PatientVisit.PatientLocation.Ward.Text&quot;,&quot;Surgery.HandleList[0].Ward.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Ward.Text&quot;],
      &quot;deptCode&quot;: [&quot;Surgery.HandleList[0].Department.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Department.Identifier&quot;,&quot;PatientVisit.PatientLocation.Department.Identifier&quot;],
      &quot;deptName&quot;: [&quot;Surgery.HandleList[0].Department.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Department.Text&quot;,&quot;PatientVisit.PatientLocation.Department.Text&quot;],
      //操作时间
      &quot;operatorDate&quot;: [ &quot;Event.RecordDatetime&quot;,&quot;Surgery.HandleList[0].HandleTime&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleTime&quot;],
      &quot;#Undo&quot;: [&quot;Surgery.HandleList[0].Type.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Type.Identifier&quot;],
      &quot;#撤销&quot;: [&quot;Surgery.HandleList[0].Type.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Type.Text&quot;],


      //申请单明细
      &quot;surgeryEntityList&quot;: {
        &quot;*&quot;: {
          // simple match.  Put the value &apos;4&apos; in the output under the &quot;Rating&quot; field
          &quot;surgeryCode&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Identifier&quot;],
          &quot;surgeryName&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Text&quot;],
          //手术等级
          &quot;surgeryScaleDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationScale.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationScale.Identifier&quot;],
          //手术部位
          &quot;surgerySiteDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalSite.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalSite.Identifier&quot;],
          //切口等级
          &quot;surgeryCutLevelDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].CutsRating.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].CutsRating.Identifier&quot;],
          //手术体位
          &quot;surgeryPositionDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].Position.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].Position.Identifier&quot;],
          //手术侧别
          &quot;surgerySideDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationSite.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationSite.Identifier&quot;],
          &quot;#手术室取消&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Text&quot;],
           &quot;#Cancelled&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Identifier&quot;],
          &quot;@(2,surgeryDeptName)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Text&quot;],
          &quot;@(2,surgeryDeptCode)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Identifier&quot;],

           //&quot;#&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationType.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Text&quot;],
          //&quot;@(2,surgeryDeptCode)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationType.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Identifier&quot;],
			//主刀医生
           &quot;@(2,surgerySurgeonCode)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.IDNumber&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.IDNumber&quot;],
          &quot;@(2,surgerySurgeonName)&quot;:  [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Name&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Name&quot;],
          &quot;#Surgeon&quot;:  [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person..Role.Identifier&quot;],
          &quot;#主刀医生&quot;:  [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person..Role.Text&quot;],
                         
           &quot;@(2,planAnesthesiaMethodName)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Text&quot;],
           &quot;@(2,planAnesthesiaMethodNo)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Identifier&quot;]
        }
      },
      //预估手术时长
      &quot;estimateSurgeryDuration&quot;: [&quot;Surgery.SurgeryDuration.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgeryDuration.Identifier&quot;],
      &quot;#小时&quot;: [&quot;Surgery.SurgeryDuration.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgeryDuration.Text&quot;],
  
      &quot;#日间手术&quot;: [&quot;OrderGroupList[0].Surgery.Type.Text&quot;],
      &quot;#Surgical&quot;: [&quot;OrderGroupList[0].Surgery.Type.Identifier&quot;],
      &quot;#日间手术申请&quot;: [&quot;OrderGroupList[0].Surgery.ApplyReason&quot;,&quot;OrderGroupList[0].Surgery.ApplyName&quot;,&quot;OrderGroupList[0].Surgery.ApplyStudy&quot;],
      &quot;#0&quot;: [&quot;OrderGroupList[0].Surgery.ApplyStatus&quot;,&quot;OrderGroupList[0].Surgery.Priority&quot;],
      
      &quot;diagnosisList&quot;: {
        &quot;*&quot;: {
          &quot;diagnosisCode&quot;: &quot;DiagnosisList[&amp;1].DiagnosisCode.Identifier&quot;,
          &quot;diagnosisName&quot;: &quot;DiagnosisList[&amp;1].DiagnosisCode.Text&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;EventCode&quot;: {
          &quot;Identifier&quot;: &quot;SGR0202&quot;,
          &quot;Text&quot;: &quot;住院手术申请单作废服务&quot;
        }
      },
      &quot;PatientVisit&quot;: {
        // 患者类型 O-门诊 E-急诊 I-住院
        &quot;PatientClass&quot;: &quot;I&quot;,
        &quot;BabyVisitNumber&quot;: &quot;&quot;
      },
      &quot;Surgery&quot;: {
        &quot;ApplyName&quot;: &quot;日间手术申请&quot;,
        //申请单类别，固定为手术
        &quot;Type&quot;: {
          &quot;Identifier&quot;: &quot;Surgical&quot;,
          &quot;Text&quot;: &quot;日间手术&quot;
        },
        //申请单目的
        &quot;ApplyStudy&quot;: &quot;日间手术申请&quot;,
        //原因
        &quot;ApplyReason&quot;: &quot;&quot;,
        //医生建议
        &quot;DocAdvice&quot;: &quot;&quot;,
        //申请单状态：0 未确认 1 已确认
        &quot;ApplyStatus&quot;: 0,
        //单个申请单优先级： 0-普通 1-择期 2-加急
        &quot;Priority&quot;: 0,
        //描述
        &quot;ApplyDescription&quot;: &quot;&quot;
      }
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;SGR0202&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;991827&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; 991827&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;SGR0202&apos;,&apos;HIS0137&apos;,jsonData);
//logger.info(&apos;手术申请单取消 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);

  //院区编码
var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;手术申请调用winex接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}
 

try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
     if(&apos;100&apos;==ackCode||&apos;100.2&apos;==ackCode||&apos;100.1&apos;==ackCode){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;手术申请成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
      //logger.error(&apos;手术申请异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;cancelOperationApply&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelOperationApply&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>18</metaDataId>
      <name>outHospital.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者出院PVM0201的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              } 
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 出院日期
            &quot;HandleTime&quot;: &quot;inpatientOutDate&quot;
          }
        },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: &quot;inHospitalEncounterId&quot;
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //患者出院
      &quot;businessType&quot;: &quot;2&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出院PVM0201的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0201&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0201&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>19</metaDataId>
      <name>OPSCompleteService.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackOperatingRoomInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;手术完成状态更新的的请求jsonMessage =&apos;+jsonMessage);
 
// 需要转换的格式要求
//writeBackType	1、手术安排 2、手术完成,3 手术安排取消，4 手术完成取消
var spec=  [
   {
     &quot;operation&quot;: &quot;shift&quot;,
     &quot;spec&quot;: {
       &quot;Demography&quot;: {
         &quot;PatientName&quot;: &quot;patientName&quot;,
         &quot;PatientIdentifierList&quot;: {
           &quot;*&quot;: {
             &quot;IDType&quot;: {
               // 患者ID
               &quot;PatientID&quot;: {
                 &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
               },
               // 病历号
               &quot;MedicalRecordNo&quot;: {
                 &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;
               }
               //,
               // 病人标识，是否是60的患者标识？
               // &quot;PersonID&quot;: {
               //    &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
               //   }
             }
           }
         }
       },
       &quot;Event&quot;: {
         &quot;Operator&quot;: {
           &quot;IDNumber&quot;: &quot;operatorCode&quot;,
           &quot;Name&quot;: &quot;operatorName&quot;
         }
       },
       //就诊记录
       //  &quot;PatientVisit&quot;: {
       //就诊流水号,---首页序号
       //卫宁系统:门诊挂号序号、住院病人首页序号
       //   &quot;VisitNumber&quot;: &quot;inpatientNo&quot;
       //  },
       &quot;OrderGroupList&quot;: {
         &quot;0&quot;: {
           &quot;Surgery&quot;: {
             &quot;DaySurgeryNo&quot;: &quot;daySurgeryId&quot;,
             &quot;ApplyNo&quot;: &quot;surgicalNerialNumber&quot;,
             &quot;SurgicalDetailList&quot;: {
               &quot;0&quot;: {
                 &quot;SurgicalDateRangeList&quot;: {
                   &quot;*&quot;: {
                     &quot;Type&quot;: {
                       //手术开始时间
                       &quot;InOperationRoomDT&quot;: {
                         &quot;@(2,RangeStartDT)&quot;: &quot;surgeryStartTime&quot;
                       },
                       //手术结束时间
                       &quot;OutOperationRoomDT&quot;: {
                         &quot;@(2,RangeStartDT)&quot;: &quot;surgeryEndTime&quot;
                       }
                     }
                   }
                 },
                 &quot;SurgicalStatus&quot;: {
                   &quot;Identifier&quot;: {
                     &quot;Complete&quot;: {
                       //手术完成
                       &quot;#2&quot;: &quot;writeBackType&quot;
                     },
                     &quot;Cancelled&quot;: {
                       //取消手术 回退到未发送手术室
                       &quot;#5&quot;: &quot;writeBackType&quot;
                     },
                     &quot;Deleted&quot;: {
                       //取消手术 回退到未发送手术室
                       &quot;#5&quot;: &quot;writeBackType&quot;
                     },
                     &quot;Waitlist&quot;: {
                       //取消手术安排
                       &quot;#3&quot;: &quot;writeBackType&quot;
                     }
                   }
                 }
               }
             }
           }
         }
       }
     }
  },
   {
     &quot;operation&quot;: &quot;default&quot;,
     &quot;spec&quot;: {
       //标记是winex 60的接口对接
       &quot;companyIdentifier&quot;: &quot;winex&quot;,
       //需要添加日间序号进行定位判断
       &quot;daySurgeryId&quot;: &quot;&quot;
     }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;手术完成后的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICJSZXF1ZXN0IiA6IHsKICAgICJIZWFkIiA6IHsKICAgICAgIlZlcnNpb24iIDogIjEuMSIsCiAgICAgICJUcmFuc2ZlclR5cGUiIDogIiIsCiAgICAgICJTZXJ2aWNlVmVyc2lvbiIgOiAiMS4xIiwKICAgICAgIkNhbGxiYWNrIiA6ICIiLAogICAgICAiVHJhbkNvZGUiIDogIjQxOTktMjAzMy0wMiIsCiAgICAgICJMaWNJZCIgOiAick5xYWdwUGRmcG8vRGsvN1h4aUx5Zz09IiwKICAgICAgIkNvbnRlbnRUeXBlIiA6ICJ0ZXh0L2pzb24iLAogICAgICAiQ29udGVudEVuY29kaW5nIiA6ICJVVEYtOCIsCiAgICAgICJPcmdJZCIgOiAiSDAwMDEiLAogICAgICAiQXBwSWQiIDogIlMwMTIiLAogICAgICAiUmVjT3JnSWQiIDogIkgwMDAxIiwKICAgICAgIlJlY0FwcElkIiA6ICJTMTEwIiwKICAgICAgIk1hYyIgOiAiMTAuMTEuMTEuMTAiLAogICAgICAiSVBBZGRyZXNzIiA6ICIxMC44LjE2LjE0MyIsCiAgICAgICJNZXNzYWdlSWQiIDogIjlkMGIyNDVmLWMyM2MtNGY2YS1iNmU1LTBlNmFmYTBkOTBhMiIsCiAgICAgICJBcHBUeXBlIiA6ICJQQyIsCiAgICAgICJTZWN1cml0eVBvbGljeSIgOiAiIiwKICAgICAgIlNlY3VyaXR5Q29udGVudCIgOiAiIiwKICAgICAgIlRpbWVzdGFtcCIgOiAiMjAyMy0xMC0yMCAyMTowNjozOS42MTQiCiAgICB9LAogICAgIkJvZHkiIDogewogICAgICAiaG9zcGl0YWxTT0lEIiA6ICI5OTM4NDAiLAogICAgICAiY2xpT3JkZXJJdGVtSWQiIDogIjMyNTI5NzQwODUwMDA2MjIwOCIsCiAgICAgICJvcGVyYXRpb25Db3VudCIgOiBudWxsLAogICAgICAic3VyZ2VyeVN0YXJ0QXQiIDogIjIwMjMtMTAtMjAgMTg6MzI6MDAiLAogICAgICAic3VyZ2VyeUVuZEF0IiA6ICIyMDIzLTEwLTIwIDE4OjMyOjAwIiwKICAgICAgInN1cmdpY2FsQW5lc3RoZXNpYVBsYW5MaXN0IiA6IFsKICAgICAgICB7CiAgICAgICAgICAic3VyZ2ljYWxBbmVzdGhlc2lhQ29kZSIgOiBudWxsCiAgICAgICAgfQogICAgICBdLAogICAgICAic3VyZ2ljYWxQbGFuQ2hhbmdlTGlzdCIgOiBbCiAgICAgICAgewogICAgICAgICAgInN1cmdpY2FsQ2hhbmdlVHlwZUNvZGUiIDogIjEuMi4xNTYuMTEyNjA0LjEuMi4xMDQ4NTguMyIsCiAgICAgICAgICAic3VyZ2ljYWxDaGFuZ2VSZWNvcmRDb250ZW50IiA6ICLDpsKJwovDpsKcwq/Dp8K7wpPDpsKdwp8iLAogICAgICAgICAgIm9wZXJhdGVkQnkiIDogIjA1MTMzIiwKICAgICAgICAgICJzdXJnZXJ5U3RhdHVzIiA6ICIxLjIuMTU2LjExMjYwNC4xLjIuMTA0ODgzLjE3IiwKICAgICAgICAgICJvcGVyYXRlZEF0IiA6ICIyMDIzLTEwLTIwIDE4OjMyOjAwIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInN1cmdlcnlTdGF0dXMiIDogIjEuMi4xNTYuMTEyNjA0LjEuMi4xMDQ4ODMuMTciLAogICAgICAiZW1wbG95ZWVObyIgOiAiMSIsCiAgICAgICJjbGlPcmRlclJlcXVpc2l0aW9uTk8iIDogIjMyNTI5NzQwODUwMDA2MjIwOCIKICAgIH0KICB9Cn0=</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;SGR0104&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;SGR0104&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>21</metaDataId>
      <name>addAdmissionCertificate-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 入院证新增=&apos;+msg[&apos;surgeryPlanDate&apos;]);

var plannedAdmAt= msg[&apos;surgeryPlanDate&apos;];
if(plannedAdmAt!=null){
	var tempPlannedAdmAt=  WinningDateUtils.strToStr(plannedAdmAt,&apos;yyyy-MM-dd HH:mm:ss&apos;,&apos;yyyy-MM-dd&apos;);
	msg[&apos;surgeryPlanDate&apos;]=tempPlannedAdmAt;
}

var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;inpatientHosAreaCode&quot;: [&quot;hospitalAreaId&quot;, &quot;soid[]&quot;],
      &quot;outpatientCardNo&quot;: &quot;outpatCert.patientCardNo&quot;,
      &quot;outpatientDate&quot;: &quot;outpatCert.scheduledDate&quot;,
      &quot;operatorDate&quot;: &quot;outpatCert.fillInAt&quot;,
      &quot;operatorId&quot;: [&quot;outpatCert.outpCertActionBy&quot;, &quot;outpatCert.visitedDoctorId&quot;,&quot;outpatCert.issuedDoctorId&quot;],
      &quot;patientIdNo&quot;: &quot;outpatCert.idcardNo&quot;,
      &quot;encounterId&quot;: &quot;outpatCert.encounterId&quot;,
      &quot;residentialAddress&quot;: {
        &quot;countyLevelCodeOid&quot;: [&quot;outpatCert.addrCountyCode&quot;, &quot;inpatCert.addrCountyCode&quot;],
        &quot;provincialCodeOid&quot;: [&quot;outpatCert.addrProvinceCode&quot;, &quot;inpatCert.addrProvinceCode&quot;],
        &quot;cityLevelCodeOid&quot;: [&quot;outpatCert.addrCityCode&quot;, &quot;inpatCert.addrCityCode&quot;],
        &quot;streetCodeOid&quot;: [&quot;outpatCert.addrTownCode&quot;, &quot;inpatCert.addrTownCode&quot;]
      },
      &quot;patientName&quot;: &quot;outpatCert.fullName&quot;,
      //1男 2 女 0 未知
      //0---&gt;1.2.156.112604.1.2.5.1
      // 1---&gt;1.2.156.112604.1.2.5.2
      // 2---&gt;1.2.156.112604.1.2.5.3
      &quot;patientSexDict&quot;: {
        &quot;0&quot;: {
          &quot;#1.2.156.112604.1.2.5.1&quot;: &quot;outpatCert.genderCode&quot;
        },
        &quot;1&quot;: {
          &quot;#1.2.156.112604.1.2.5.2&quot;: &quot;outpatCert.genderCode&quot;
        },
        &quot;2&quot;: {
          &quot;#1.2.156.112604.1.2.5.3&quot;: &quot;outpatCert.genderCode&quot;
        }
      },
      &quot;patientTel&quot;: &quot;outpatCert.telephoneNo&quot;,
      &quot;patientAccountAddress&quot;: [&quot;outpatCert.addrDetail&quot;, &quot;inpatCert.addrDetail&quot;],
      &quot;age&quot;: &quot;outpatCert.age&quot;,
      &quot;diagnosisList&quot;: {
        &quot;*&quot;: {
          &quot;diagnosisTypeDict&quot;: {
            // 001 门诊诊断 002 术前诊断 003 入院诊断 999 其他诊断
            &quot;002&quot;: {
              // &quot;certDiagList[&amp;3].[0].diagnosisCode&quot;
              &quot;@(2,diagnosisId)&quot;: &quot;certDiagList[&amp;3].diagnosisCode&quot;,
              &quot;@(2,diagnosisCode)&quot;: &quot;certDiagList[&amp;3].diagnosticNo&quot;,
              &quot;@(2,diagnosisName)&quot;: &quot;certDiagList[&amp;3].diagnosticName&quot;
            }
          }
        }
      },
      &quot;daySurgeryId&quot;: &quot;inpatCert.daySurgeryRegExtNo&quot;,
    //  &quot;medicalInsuranceCodeDict&quot;: &quot;inpatCert.medInstiInsurId&quot;,
      &quot;inpatientDeptCode&quot;: &quot;inpatCert.plannedAdmDeptId&quot;,
      &quot;&quot;: &quot;inpatCert.bedAppointmentId&quot;,
      //主管医生编码
      &quot;chargeDoctorId&quot;: &quot;inpatCert.admissionDoctorId&quot;,
      &quot;patientContactName1&quot;: &quot;inpatCert.contactName&quot;,
      &quot;outpatientAdvancePayment&quot;: &quot;inpatCert.prepaidAmount&quot;,
      &quot;inpatientWardCode&quot;: &quot;inpatCert.plannedAdmWardId&quot;,
       &quot;medicalInsuranceCodeDict&quot;: &quot;inpatCert.medInstiInsurId&quot;,
       //拟手术日期，入院证为拟手术日期
        &quot;surgeryPlanDate&quot;: &quot;inpatCert.plannedAdmAt&quot;,
      &quot;bedCode&quot;: &quot;inpatCert.plannedAdmBedspaceNo&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //医疗机构编码
      &quot;hospitalSOID&quot;: &quot;994217&quot;,
      &quot;inpatCert&quot;: {
        //日间标识
        &quot;daySurgeryFlag&quot;: &quot;1.2.156.112604.1.2.750.1&quot;,
        //住院目的编码：（日间手术）
        &quot;inHospitalTargetCode&quot;: &quot;1.2.156.112604.1.2.105642.7&quot;,
        //入院途径代码（门诊）
        &quot;inpatAdmissionTypeCode&quot;: &quot;1.2.156.112604.1.2.284.1&quot;
          //住院目的编码：门诊 浙江省中不用
          //  &quot;inHospitalTargetCode&quot;: &quot;1.2.156.112604.1.2.105642.1&quot;
          //  &quot;daySurgeryFlag&quot;: &quot;1&quot;
      },
      &quot;outpatCert&quot;: {
        &quot;genderCode&quot;: &quot;1.2.156.112604.1.2.5.1&quot;,
        &quot;idcardTypeCode&quot;: &quot;1.2.156.112604.1.2.648.1&quot;
      }
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var jsonDataObj= JSON.parse(jsonData);
var tempDiagArr=jsonDataObj[&apos;certDiagList&apos;];
var newarr = tempDiagArr.filter(item=&gt;![&quot;&quot;,null,undefined].includes(item));
jsonDataObj[&apos;certDiagList&apos;]=newarr;


 //logger.info(&apos;winex向入院证新增口 ===newarr=&apos;+newarr);

 //var aa=JSON.parse(jsonData);
// aa[&apos;outpatCert&apos;][&apos;encounterId&apos;]=&apos;324763786730883073&apos;;
 //aa[&apos;outpatCert&apos;][&apos;fillInAt&apos;]=&apos;2023-10-17 21:07:22&apos;;
 //aa[&apos;outpatCert&apos;][&apos;outpCertActionBy&apos;]=&apos;01267&apos;;
 //aa[&apos;inpatCert&apos;][&apos;plannedAdmDeptId&apos;]=&apos;900000000000000489&apos;;
 
//var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//logger.info(&apos;winex向手术系统回写住院号信息接口 ===jsonData=&apos;+jsonData);
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4198-2153-02&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4198-2153-02&apos;,&apos;HIS0137&apos;,JSON.stringify(jsonDataObj));
//logger.info(&apos;winex向入院证新增口 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);

 //院区编码
var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;

 //logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

//logger.info(resposeInfo);
var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}


 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
     	var outpCertId=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;outpCertId&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;入院证新增成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,outpCertId);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
        var traceid= tempRespose[&apos;traceid&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode+&quot;,traceid=:&quot;+traceid;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
     //  logger.error(&apos;入院证新增异常====&apos;+AckMessage);
         var traceid= tempRespose[&apos;traceid&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;入院证新增异常&apos;+AckMessage+&quot;,traceid=&quot;+traceid);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;addAdmissionCertificate&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;addAdmissionCertificate&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>two</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <script>var arr = [&apos;Winning&apos;, &apos;winex_his&apos;]

if (arr.indexOf(msg[&apos;apiInterfaceProviderCode&apos;]) != -1) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>22</metaDataId>
      <name>cancelAdmissionCertificate-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 入院证作废=&apos;+JSON.stringify(msg));
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;inpatientHosAreaCode&quot;: &quot;hospitalAreaId&quot;,   
      &quot;outpCertId&quot;: &quot;outpCertId&quot;,
      &quot;operatorCode&quot;:&quot;outpCertActionBy&quot;,
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;hospitalSOID&quot;: &quot;994217&quot;,
      &quot;outpCertActionBy&quot;: &quot;&quot;
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);
 
// var aa=JSON.parse(jsonData);
 
 //aa[&apos;outpCertActionBy&apos;] =&apos;01267&apos;;
 
 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4198-2154-02&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4198-2154-02&apos;,&apos;HIS0137&apos;,jsonData);
//logger.info(&apos;winex向入院证入院证作废 ===esbRequest=&apos;+esbRequest);
 
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);
 //logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
 //院区编码
var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;入院证新增winex接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}
 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
     if(&apos;100&apos;==ackCode){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;入院证新增成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
    //   logger.info(&apos;入1111o=&apos;+msgCode);
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
           var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+msgInfo);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;cancelAdmissionCertificate&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelAdmissionCertificate&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>two</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <script>var arr = [&apos;Winning&apos;, &apos;winex_his&apos;]

if (arr.indexOf(msg[&apos;apiInterfaceProviderCode&apos;]) != -1) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>24</metaDataId>
      <name>OPSUpdateBackService.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackOperatingRoomInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;手术安排接口的请求jsonMessage =&apos;+jsonMessage);
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识？
              /// &quot;PersonID&quot;: {
              //   &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              //  }
            }
          }
        }
      },
      &quot;Event&quot;: {
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorName&quot;
        }
      },
      //就诊记录
      // &quot;PatientVisit&quot;: {
      //就诊流水号,---首页序号
      //卫宁系统:门诊挂号序号、住院病人首页序号
      //  &quot;VisitNumber&quot;: &quot;inpatientNo&quot;
      //   },
      &quot;OrderGroupList&quot;: {
        &quot;0&quot;: {
          &quot;Surgery&quot;: {
            &quot;DaySurgeryNo&quot;: &quot;daySurgeryId&quot;,
            &quot;ApplyNo&quot;: &quot;surgicalNerialNumber&quot;,
            &quot;SurgicalDetailList&quot;: {
              &quot;*&quot;: {
                &quot;SurgicalDateRangeList&quot;: {
                  &quot;*&quot;: {
                    &quot;Type&quot;: {
                      //手术安排时间
                      &quot;BookDT&quot;: {
                        &quot;@(2,RangeStartDT)&quot;: &quot;surgeryArrangeDate[]&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //标记是winex 60的接口对接
      &quot;companyIdentifier&quot;: &quot;winex&quot;,
      &quot;writeBackType&quot;: &quot;1&quot;,
      //需要添加日间序号进行定位判断
      &quot;daySurgeryId&quot;: &quot;&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;cardinality&quot;,
    &quot;spec&quot;: {
      &quot;surgeryArrangeDate&quot;: &quot;ONE&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//调用日间手术管理系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
//channelMap.put(&apos;jsonData&apos;,convertedStr);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var tranCode =msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]);

if(tranCode== &apos;SGR0101&apos;){

   return true;
    
}

return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>26</metaDataId>
      <name>InWard.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
    	   &quot;Event&quot; : {
        &quot;RecordDatetime&quot; : &quot;operatorDate&quot;,
        &quot;Operator&quot; : {
         
          &quot;IDNumber&quot; : &quot;operatorCode&quot;,
          &quot;Name&quot; : &quot;operatorCodeName&quot;
        }
         
      },
      &quot;Demography&quot;: {
        //性别
        &quot;Sex&quot;: {
          &quot;Identifier&quot;: &quot;patientSexDict&quot;,
          &quot;Text&quot;: &quot;patientSexName&quot;
        },
        &quot;Birthday&quot;: &quot;patientBirthday&quot;,
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
               // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
             // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientLocation&quot;: {
          //床号
          &quot;Bed&quot;: &quot;bedCode&quot;,
          &quot;Department&quot;: {
            //入院科室名称和编码
            &quot;Identifier&quot;: &quot;inpatientDeptCode&quot;,
            &quot;Text&quot;: &quot;inpatientDeptName&quot;
          },
          //入院病区名称和编码
          &quot;Ward&quot;: {
            &quot;Identifier&quot;: [&quot;inpatientWardCode&quot;, &quot;wardCode&quot;],
            &quot;Text&quot;: [&quot;inpatientWardName&quot;, &quot;wardName&quot;]
          },
          //房间号
          &quot;Room&quot;: &quot;sickroomCode&quot;
        },
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 入区日期
            &quot;HandleTime&quot;: &quot;inpatientWardInDate&quot;
          }
        },
        //就诊流水号,---首页序号&quot;inpatientNo&quot;
        &quot;VisitNumber&quot;: &quot;inHospitalEncounterId&quot;,
        //住院次数
        &quot;VisitCount&quot;: &quot;hospitalizationNumber&quot;,
        //患者当前就诊状态
        //0-入院登记
        //1-病区分床
        //2-病区出院
        //3-病人出院
        //4-取消结算
        //5-进入ICU
        //6-进入产房
        //7-转科状态
        //8-数据转出
        //9-作废记录 
        &quot;VisitStatus&quot;: {
          &quot;Identifier&quot;: &quot;VisitStatusCode&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //入区
      &quot;businessType&quot;: &quot;3&quot;,
      &quot;operationOrdersFlag&quot;:true,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0501&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0501&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>27</metaDataId>
      <name>notInWard-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者取消入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
       
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              } 
            }
          }
        } 
        
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
   
     //   &quot;HandleList&quot;: {
      //    &quot;0&quot;: {
      //      // 出区日期
      //      &quot;HandleTime&quot;: &quot;inpatientWardOutDate&quot;
      //    }
     //   },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: &quot;inHospitalEncounterId&quot;
       
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //入区
      &quot;businessType&quot;: &quot;3&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者取消入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0502&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0502&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>28</metaDataId>
      <name>OutWard.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者出区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              //住院病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;,
              } 
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 出区日期
            &quot;HandleTime&quot;: [&quot;inpatientWardOutDate&quot;,&quot;operatorDate&quot;],
          }
        },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: [&quot;inHospitalEncounterId&quot;],
        //住院次数
        &quot;VisitCount&quot;: &quot;hospitalizationNumber&quot;,
        &quot;VisitStatus&quot;: {
          &quot;Identifier&quot;: &quot;VisitStatusCode&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //出区
      &quot;businessType&quot;: &quot;4&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0601&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0601&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>29</metaDataId>
      <name>notOutWard-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者出区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              //住院病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;,
              } 
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 出区日期
            &quot;HandleTime&quot;: [&quot;inpatientWardOutDate&quot;,&quot;operatorDate&quot;],
          }
        },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: [&quot;inHospitalEncounterId&quot;],
        //住院次数
        &quot;VisitCount&quot;: &quot;hospitalizationNumber&quot;,
        &quot;VisitStatus&quot;: {
          &quot;Identifier&quot;: &quot;VisitStatusCode&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //出区
      &quot;businessType&quot;: &quot;4&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0602&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0602&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>32</metaDataId>
      <name>notInHospital-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者取消入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
       
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              } 
            }
          }
        } 
        
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
   
     //   &quot;HandleList&quot;: {
      //    &quot;0&quot;: {
      //      // 出区日期
      //      &quot;HandleTime&quot;: &quot;inpatientWardOutDate&quot;
      //    }
     //   },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: &quot;inHospitalEncounterId&quot;
       
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //取消入院
      &quot;businessType&quot;: &quot;1&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者取消入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9qc29uIiwKICAgICAgICAgICAgIlRyYW5Db2RlIjoiUFZNMDUwMSIsCiAgICAgICAgICAgICJDb250ZW50RW5jb2RpbmciOiIiLAogICAgICAgICAgICAiVHJhbnNmZXJUeXBlIjoiIiwKICAgICAgICAgICAgIlRpbWVzdGFtcCI6IjIwMjMtMTEtMDcgMTY6MDc6MzAuNzA4IiwKICAgICAgICAgICAgIlNlY3VyaXR5Q29udGVudCI6IiIsCiAgICAgICAgICAgICJNYWMiOiIiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQ2FsbGJhY2siOiIiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VjdXJpdHlQb2xpY3kiOiIiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiIiLAogICAgICAgICAgICAiTWVzc2FnZUlkIjoiYzg3NTlhOTQtN2M3OS00MWVjLThkMzQtZTM5YjY1MTM3M2IwIgogICAgICAgIH0sCiAgICAgICAgIkJvZHkiOnsKICAgICAgICAgICAgIlBhdGllbnRWaXNpdCI6ewogICAgICAgICAgICAgICAgIlBhdGllbnRMb2NhdGlvbiI6ewogICAgICAgICAgICAgICAgICAgICJCZWQiOiIzMCIsCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5ZG85ZC45LiO5Y2x6YeN55eH5Yy75a2m56eR77yI5ZG85ZC45bq35aSN56eR77yJIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIldhcmQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzazkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IjIwOeeXheWMuiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJSb29tIjoiMjA5LTExIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJIYW5kbGVMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSGFuZGxlQnkiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJSb2xlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIyMzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6LSj5Lu75Yy755SfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJEZXBhcnRtZW50Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLlkbzlkLjkuI7ljbHph43nl4fljLvlrabnp5HvvIjlkbzlkLjlurflpI3np5HvvIkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiNTI5MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IueOi+e7tOebiiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZVRpbWUiOiIyMDIzLTExLTA3IDE2OjA3OjM3IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjg2MjYzNzc1MjE4NzkwNDEiLAogICAgICAgICAgICAgICAgIlRyZWF0bWVudEdyb3VwIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiR3JvdXAiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzA5MzQzMDA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiUGh5c2ljaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHcm91cERlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjMzODA5QSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmtKrovonljY7nu4QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlBhdGllbnRDbGFzcyI6IkkiLAogICAgICAgICAgICAgICAgIlZpc2l0U3RhdHVzIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueXheWMuuWIhuW6iiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRlbW9ncmFwaHkiOnsKICAgICAgICAgICAgICAgICJTZXgiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6Ik0iLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi55S35oCnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJCaXJ0aGRheSI6IjE5OTktMDgtMTkgMDA6MDA6MDAiLAogICAgICAgICAgICAgICAgIlBhdGllbnROYW1lIjoi5b6Q6K+X5paHIiwKICAgICAgICAgICAgICAgICJQYXRpZW50SWRlbnRpZmllckxpc3QiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGVTY29wZSI6IkkiLAogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUGF0aWVudElEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6Ik1lZGljYWxSZWNvcmRObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjkzNDI1OTM5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlJvbGVObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyODU5MDQ1NjU2Mjg1MTg0MCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkFnZSI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjI0LAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuWygSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlNTTiI6IjM0MjIyMjE5OTkwODE5MTIxNSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRpYWdub3Npc0xpc3QiOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGlhZ25vc2lzVHlwZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NvZGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzOTkzOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi56S+5Yy66I635b6X5oCn6IK654KO77yM6Z2e6YeN55eHIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NsYXNzIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6Zeo6K+K6K+K5patIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc1R5cGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzk5MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuekvuWMuuiOt+W+l+aAp+iCuueCju+8jOmdnumHjeeXhyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDbGFzcyI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjEiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IumXqOiviuiviuaWrSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxNjowNzozNyIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjYyNDUiLAogICAgICAgICAgICAgICAgICAgICJOYW1lIjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudEZhY2lsaXR5Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiI5OTE4MjciLAogICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudENvZGUiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IlBWTTA1MDEiLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5oKj6ICF5YWl5Yy6IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0103&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0103&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>33</metaDataId>
      <name>notOutHospital-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者出区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              //住院病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;,
              } 
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 出区日期
            &quot;HandleTime&quot;: [&quot;inpatientWardOutDate&quot;,&quot;operatorDate&quot;],
          }
        },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: [&quot;inHospitalEncounterId&quot;],
        //住院次数
        &quot;VisitCount&quot;: &quot;hospitalizationNumber&quot;,
        &quot;VisitStatus&quot;: {
          &quot;Identifier&quot;: &quot;VisitStatusCode&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //出区
      &quot;businessType&quot;: &quot;4&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;PVM0202&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;PVM0202&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>34</metaDataId>
      <name>addLisDetail-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/addLisDetail</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;
          },
          &quot;OrderDetailGroupList&quot;: {
            &quot;*&quot;: {
               
                &quot;ObservationResultList&quot;: {
                  &quot;*&quot;: {
                    &quot;ObservationIdentifier&quot;: {
                      &quot;Identifier&quot;: &quot;lisItems[&amp;2].projectCode&quot;,
                      &quot;Text&quot;: &quot;lisItems[&amp;2].projectName&quot;
                    },
                    //参考范围
                   // &quot;ReferencesRange&quot;: &quot;lisItems[&amp;1].referenceResult&quot;,
                    //异常标志
                    &quot;AbnormalFlags&quot;: &quot;lisItems[&amp;1].abnormalIndicator&quot;,
                    &quot;DTOfTheObservation&quot;: &quot;lisItems[&amp;1].entryDate&quot;,
                    &quot;Units&quot;: {
                      &quot;Text&quot;: &quot;lisItems[&amp;2].unit&quot;
                    },
                    &quot;ObservationValue&quot;: &quot;lisItems[&amp;1].result&quot;,
                    &quot;ReferencesRange_v2&quot; : {					 
					&quot;ReferencesRangeST&quot; :&quot;lisItems[&amp;2].referenceResult&quot;
       		 	  }
                  }
                }
               
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检验
      &quot;businessType&quot;: &quot;2&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9qc29uIiwKICAgICAgICAgICAgIlRyYW5Db2RlIjoiUFZNMDUwMSIsCiAgICAgICAgICAgICJDb250ZW50RW5jb2RpbmciOiIiLAogICAgICAgICAgICAiVHJhbnNmZXJUeXBlIjoiIiwKICAgICAgICAgICAgIlRpbWVzdGFtcCI6IjIwMjMtMTEtMDcgMTY6MDc6MzAuNzA4IiwKICAgICAgICAgICAgIlNlY3VyaXR5Q29udGVudCI6IiIsCiAgICAgICAgICAgICJNYWMiOiIiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQ2FsbGJhY2siOiIiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VjdXJpdHlQb2xpY3kiOiIiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiIiLAogICAgICAgICAgICAiTWVzc2FnZUlkIjoiYzg3NTlhOTQtN2M3OS00MWVjLThkMzQtZTM5YjY1MTM3M2IwIgogICAgICAgIH0sCiAgICAgICAgIkJvZHkiOnsKICAgICAgICAgICAgIlBhdGllbnRWaXNpdCI6ewogICAgICAgICAgICAgICAgIlBhdGllbnRMb2NhdGlvbiI6ewogICAgICAgICAgICAgICAgICAgICJCZWQiOiIzMCIsCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5ZG85ZC45LiO5Y2x6YeN55eH5Yy75a2m56eR77yI5ZG85ZC45bq35aSN56eR77yJIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIldhcmQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzazkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IjIwOeeXheWMuiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJSb29tIjoiMjA5LTExIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJIYW5kbGVMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSGFuZGxlQnkiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJSb2xlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIyMzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6LSj5Lu75Yy755SfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJEZXBhcnRtZW50Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLlkbzlkLjkuI7ljbHph43nl4fljLvlrabnp5HvvIjlkbzlkLjlurflpI3np5HvvIkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiNTI5MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IueOi+e7tOebiiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZVRpbWUiOiIyMDIzLTExLTA3IDE2OjA3OjM3IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjg2MjYzNzc1MjE4NzkwNDEiLAogICAgICAgICAgICAgICAgIlRyZWF0bWVudEdyb3VwIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiR3JvdXAiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzA5MzQzMDA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiUGh5c2ljaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHcm91cERlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjMzODA5QSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmtKrovonljY7nu4QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlBhdGllbnRDbGFzcyI6IkkiLAogICAgICAgICAgICAgICAgIlZpc2l0U3RhdHVzIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueXheWMuuWIhuW6iiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRlbW9ncmFwaHkiOnsKICAgICAgICAgICAgICAgICJTZXgiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6Ik0iLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi55S35oCnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJCaXJ0aGRheSI6IjE5OTktMDgtMTkgMDA6MDA6MDAiLAogICAgICAgICAgICAgICAgIlBhdGllbnROYW1lIjoi5b6Q6K+X5paHIiwKICAgICAgICAgICAgICAgICJQYXRpZW50SWRlbnRpZmllckxpc3QiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGVTY29wZSI6IkkiLAogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUGF0aWVudElEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6Ik1lZGljYWxSZWNvcmRObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjkzNDI1OTM5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlJvbGVObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyODU5MDQ1NjU2Mjg1MTg0MCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkFnZSI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjI0LAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuWygSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlNTTiI6IjM0MjIyMjE5OTkwODE5MTIxNSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRpYWdub3Npc0xpc3QiOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGlhZ25vc2lzVHlwZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NvZGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzOTkzOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi56S+5Yy66I635b6X5oCn6IK654KO77yM6Z2e6YeN55eHIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NsYXNzIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6Zeo6K+K6K+K5patIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc1R5cGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzk5MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuekvuWMuuiOt+W+l+aAp+iCuueCju+8jOmdnumHjeeXhyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDbGFzcyI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjEiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IumXqOiviuiviuaWrSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxNjowNzozNyIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjYyNDUiLAogICAgICAgICAgICAgICAgICAgICJOYW1lIjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudEZhY2lsaXR5Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiI5OTE4MjciLAogICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudENvZGUiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IlBWTTA1MDEiLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5oKj6ICF5YWl5Yy6IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;LAB0103&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;LAB0103&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>35</metaDataId>
      <name>addRisDetail-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/addRisDetail</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;
          },
          &quot;OrderDetailGroupList&quot;: {
            &quot;*&quot;: {
              &quot;OrderDetail&quot;: {
                &quot;ObservationResultList&quot;: {
                  &quot;*&quot;: {
                    &quot;ObservationIdentifier&quot;: {
                      &quot;Identifier&quot;: &quot;risItems[&amp;2].inspectionCode&quot;,
                      &quot;Text&quot;: &quot;risItems[&amp;2].inspectionName&quot;
                    },
                    //参考范围
                    //&quot;ReferencesRange&quot;: &quot;risItems[&amp;1].referenceResult&quot;,
                    //异常标志
                    &quot;AbnormalFlags&quot;: &quot;risItems[&amp;1].abnormalIndicator&quot;,
                    &quot;DTOfTheObservation&quot;: &quot;risItems[&amp;1].entryDate&quot;,
                    // &quot;Units&quot;: {
                    //    &quot;Text&quot;: &quot;risItems[&amp;1].unit&quot;
                    //  },
                    &quot;ObservationValue&quot;: &quot;risItems[&amp;1].inspectionConclusion&quot;
                  }
                }
              },

                &quot;ObservationResultList&quot;: {
                &quot;*&quot;: {
                  &quot;ObservationIdentifier&quot;: {
                    &quot;Identifier&quot;: &quot;risItems[&amp;2].inspectionCode&quot;,
                    &quot;Text&quot;: &quot;risItems[&amp;2].inspectionName&quot;
                  },
                  //参考范围
                  //&quot;ReferencesRange&quot;: &quot;risItems[&amp;1].referenceResult&quot;,
                  //异常标志
                  &quot;AbnormalFlags&quot;: &quot;risItems[&amp;1].abnormalIndicator&quot;,
                  &quot;DTOfTheObservation&quot;: &quot;risItems[&amp;1].entryDate&quot;,
                  // &quot;Units&quot;: {
                  //    &quot;Text&quot;: &quot;risItems[&amp;1].unit&quot;
                  //  },
                  &quot;ObservationValue&quot;: &quot;risItems[&amp;1].inspectionConclusion&quot;
                }
              }


              
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检查
      &quot;businessType&quot;: &quot;1&quot;
    }
  }
];




//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;RAD0106&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;RAD0106&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>36</metaDataId>
      <name>addRisList-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeRisLisTableData</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            //申请单号
            //  &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;,
            &quot;ApplyDetailList&quot;: {
              &quot;*&quot;: {
                &quot;@(2,ApplyNo)&quot;: &quot;risLisList[&amp;4].reportApplicationNumber&quot;,
                &quot;@(2,ApplyTime)&quot;: &quot;risLisList[&amp;4].surveyingEndTime&quot;,
                &quot;#1&quot;: [&quot;risLisList[&amp;4].surveyingTypeCode&quot;],
			 //未发布
			 &quot;#2&quot;: [&quot;risLisList[&amp;4].surveyingReportStatusDict&quot;],
                &quot;#检查&quot;: &quot;risLisList[&amp;4].surveyingTypeName&quot;,             
                &quot;ServiceInfo&quot;: {
                  &quot;ItemInfo&quot;: {
                    &quot;Identifier&quot;: &quot;risLisList[&amp;6].surveyingItemCode&quot;,
                    &quot;Text&quot;: &quot;risLisList[&amp;6].surveyingItemName&quot;
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检查
      &quot;businessType&quot;: &quot;1&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;ORD0301&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;ORD0301&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>37</metaDataId>
      <name>delLisDetail-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelLisRisPublish</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检验
      &quot;businessType&quot;: &quot;2&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;LAB0104&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;LAB0104&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>38</metaDataId>
      <name>delRisDetail-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelLisRisPublish</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检查
      &quot;businessType&quot;: &quot;1&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9qc29uIiwKICAgICAgICAgICAgIlRyYW5Db2RlIjoiUFZNMDUwMSIsCiAgICAgICAgICAgICJDb250ZW50RW5jb2RpbmciOiIiLAogICAgICAgICAgICAiVHJhbnNmZXJUeXBlIjoiIiwKICAgICAgICAgICAgIlRpbWVzdGFtcCI6IjIwMjMtMTEtMDcgMTY6MDc6MzAuNzA4IiwKICAgICAgICAgICAgIlNlY3VyaXR5Q29udGVudCI6IiIsCiAgICAgICAgICAgICJNYWMiOiIiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQ2FsbGJhY2siOiIiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VjdXJpdHlQb2xpY3kiOiIiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiIiLAogICAgICAgICAgICAiTWVzc2FnZUlkIjoiYzg3NTlhOTQtN2M3OS00MWVjLThkMzQtZTM5YjY1MTM3M2IwIgogICAgICAgIH0sCiAgICAgICAgIkJvZHkiOnsKICAgICAgICAgICAgIlBhdGllbnRWaXNpdCI6ewogICAgICAgICAgICAgICAgIlBhdGllbnRMb2NhdGlvbiI6ewogICAgICAgICAgICAgICAgICAgICJCZWQiOiIzMCIsCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5ZG85ZC45LiO5Y2x6YeN55eH5Yy75a2m56eR77yI5ZG85ZC45bq35aSN56eR77yJIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIldhcmQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzazkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IjIwOeeXheWMuiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJSb29tIjoiMjA5LTExIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJIYW5kbGVMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSGFuZGxlQnkiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJSb2xlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIyMzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6LSj5Lu75Yy755SfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJEZXBhcnRtZW50Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLlkbzlkLjkuI7ljbHph43nl4fljLvlrabnp5HvvIjlkbzlkLjlurflpI3np5HvvIkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiNTI5MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IueOi+e7tOebiiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZVRpbWUiOiIyMDIzLTExLTA3IDE2OjA3OjM3IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjg2MjYzNzc1MjE4NzkwNDEiLAogICAgICAgICAgICAgICAgIlRyZWF0bWVudEdyb3VwIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiR3JvdXAiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzA5MzQzMDA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiUGh5c2ljaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHcm91cERlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjMzODA5QSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmtKrovonljY7nu4QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlBhdGllbnRDbGFzcyI6IkkiLAogICAgICAgICAgICAgICAgIlZpc2l0U3RhdHVzIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueXheWMuuWIhuW6iiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRlbW9ncmFwaHkiOnsKICAgICAgICAgICAgICAgICJTZXgiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6Ik0iLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi55S35oCnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJCaXJ0aGRheSI6IjE5OTktMDgtMTkgMDA6MDA6MDAiLAogICAgICAgICAgICAgICAgIlBhdGllbnROYW1lIjoi5b6Q6K+X5paHIiwKICAgICAgICAgICAgICAgICJQYXRpZW50SWRlbnRpZmllckxpc3QiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGVTY29wZSI6IkkiLAogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUGF0aWVudElEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6Ik1lZGljYWxSZWNvcmRObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjkzNDI1OTM5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlJvbGVObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyODU5MDQ1NjU2Mjg1MTg0MCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkFnZSI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjI0LAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuWygSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlNTTiI6IjM0MjIyMjE5OTkwODE5MTIxNSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRpYWdub3Npc0xpc3QiOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGlhZ25vc2lzVHlwZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NvZGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzOTkzOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi56S+5Yy66I635b6X5oCn6IK654KO77yM6Z2e6YeN55eHIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NsYXNzIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6Zeo6K+K6K+K5patIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc1R5cGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzk5MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuekvuWMuuiOt+W+l+aAp+iCuueCju+8jOmdnumHjeeXhyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDbGFzcyI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjEiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IumXqOiviuiviuaWrSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxNjowNzozNyIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjYyNDUiLAogICAgICAgICAgICAgICAgICAgICJOYW1lIjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudEZhY2lsaXR5Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiI5OTE4MjciLAogICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudENvZGUiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IlBWTTA1MDEiLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5oKj6ICF5YWl5Yy6IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;RAD0107&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;RAD0107&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>39</metaDataId>
      <name>updateLisStatus-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/updateRisLisTableData</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;检查状态信息更新服报告状态修改RAD0109  =&apos;+jsonMessage);


// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              }
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 就诊日期
            &quot;HandleTime&quot;: &quot;outpatientDate&quot;
          }
        },
        //就诊流水号
        &quot;VisitNumber&quot;: &quot;encounterId&quot;
      },
      //医嘱组报告列表
      &quot;OrderGroupReportList&quot;: {
        &quot;*&quot;: {
          &quot;Report&quot;: {
            &quot;ApplyNo&quot;: &quot;checkSurveyingList[&amp;2].reportApplicationNumber&quot;,
            //报告发布状态
            &quot;ReportStatus&quot;: {
              &quot;Identifier&quot;: {
                &quot;0&quot;: {
                  &quot;#2&quot;: &quot;checkSurveyingList[&amp;5].surveyingReportStatusDict&quot;
                },
                &quot;1&quot;: {
                  &quot;#1&quot;: &quot;checkSurveyingList[&amp;5].surveyingReportStatusDict&quot;
                }
              }
            },
     //检查状态：
//预约-Appointment
//登记-Register
//开始检查-CheckStart
//完成检查-CheckComplete
//审核-Audit
//发布-Release
//回收-Reclaim
            &quot;InspectiveStatus&quot;: {
              &quot;Identifier&quot;: &quot;checkSurveyingList[&amp;3].recordStatus&quot;
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;checkSurveyingList[]&quot;: {
        &quot;*&quot;: {
          //默认未发布
          &quot;surveyingReportStatusDict&quot;: &quot;2&quot;
        }
      },
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];
 

//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));

//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;LAB0106&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;LAB0106&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>two</name>
            <sequenceNumber>2</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Body&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Body&apos;][&apos;PatientVisit&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Body&apos;][&apos;PatientVisit&apos;][&apos;PatientClass&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Body&apos;][&apos;PatientVisit&apos;][&apos;PatientClass&apos;]&quot; equals &apos;O&apos;</name>
            <sequenceNumber>3</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Body&apos;][&apos;PatientVisit&apos;][&apos;PatientClass&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;O&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>40</metaDataId>
      <name>updateRisStatus-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/updateRisLisTableData</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;检查状态信息更新服报告状态修改RAD0109  =&apos;+jsonMessage);


// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              }
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 就诊日期
            &quot;HandleTime&quot;: &quot;outpatientDate&quot;
          }
        },
        //就诊流水号
        &quot;VisitNumber&quot;: &quot;encounterId&quot;
      },
      //医嘱组报告列表
      &quot;OrderGroupReportList&quot;: {
        &quot;*&quot;: {
          &quot;Report&quot;: {
            &quot;ApplyNo&quot;: &quot;checkSurveyingList[&amp;2].reportApplicationNumber&quot;,
            //报告发布状态
            &quot;ReportStatus&quot;: {
              &quot;Identifier&quot;: {
                &quot;0&quot;: {
                  &quot;#2&quot;: &quot;checkSurveyingList[&amp;5].surveyingReportStatusDict&quot;
                },
                &quot;1&quot;: {
                  &quot;#1&quot;: &quot;checkSurveyingList[&amp;5].surveyingReportStatusDict&quot;
                }
              }
            },
     //检查状态：
//预约-Appointment
//登记-Register
//开始检查-CheckStart
//完成检查-CheckComplete
//审核-Audit
//发布-Release
//回收-Reclaim
            &quot;InspectiveStatus&quot;: {
              &quot;Identifier&quot;: &quot;checkSurveyingList[&amp;3].recordStatus&quot;
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;checkSurveyingList[]&quot;: {
        &quot;*&quot;: {
          //默认未发布
          &quot;surveyingReportStatusDict&quot;: &quot;2&quot;
        }
      },
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];
 

//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));

//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
if(originalJsonObj.Request.Body){
	delete originalJsonObj.Request.Body;
}

delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;RAD0109&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;RAD0109&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>two</name>
            <sequenceNumber>2</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <script>if (msg&amp;&amp; (msg[&apos;PatientVisit&apos;])&amp;&amp;(msg[&apos;PatientVisit&apos;][&apos;PatientClass&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;PatientVisit&apos;][&apos;PatientClass&apos;]&quot; equals &apos;O&apos;</name>
            <sequenceNumber>3</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;PatientVisit&apos;][&apos;PatientClass&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;O&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>41</metaDataId>
      <name>sendMessage-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://129.10.27.41:16001/winningInnerStandard</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>300000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;消息平台发送短信=&apos;+JSON.stringify(msg));
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;telephoneNumberList&quot;: {
        &quot;*&quot;: &quot;phoneList[]&quot;
      },
      &quot;smsContent&quot;: &quot;smsContent&quot;,
      &quot;#MSG-MULTI-0112&quot;: &quot;msgCode&quot;
    }
    },
  {
    &quot;operation&quot;: &quot;modify-overwrite-beta&quot;,
    &quot;spec&quot;: {
      &quot;phoneList&quot;: &quot;=join(&apos;,&apos;, @(1,phoneList))&quot;
    }
    },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;msgCode&quot;: &quot;[0].msgCode&quot;,
      &quot;smsContent&quot;: &quot;[0].smsBo.params.content&quot;,
      &quot;phoneList&quot;: &quot;[0].smsBo.phone&quot;
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;ESB0007&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot;&quot;,&quot;RecAppId&quot;:&quot;&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;129.10.26.77&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;ESB0007&apos;,&apos;HIS0137&apos;,jsonData);
//logger.info(&apos;winex向发送手术申请单请求的 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);

var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);


 //院区编码
//var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
//esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
//esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;
//logger.info(&apos;消息平台发送短信 ====&apos;+JSON.stringify(esbObj));
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;手术申请调用winex接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}
 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
     if(&apos;100&apos;==ackCode){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;手术申请成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
      logger.error(&apos;手术申请异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;sendMessage&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;sendMessage&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>43</metaDataId>
      <name>updateAcisMedicalOrder-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${acis_url}/hlht/updateAsmcPatientInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;调用网关生成4199-2104-02=&apos;+JSON.stringify(msg));
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      //  日间序号短码
      &quot;daySurgeryId&quot;: &quot;daySurgeryNo&quot;,
      //医嘱号
      &quot;medicalOrderNumber&quot;: &quot;orderNo&quot; ,
      &quot;cisOrderNo&quot;:&quot;cisOrderNo&quot;,
      &quot;cisOrderDetailNo&quot;:&quot;cisOrderDetailNo&quot;,
      &quot;inHospitalEncounterId&quot;:&quot;inPatientNo&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
     
      //医嘱出处系统代码OID-日间手术系统
      &quot;businessType&quot;: &quot;2&quot;
    }
  } 
];


 var jsonData=WinningJoltUtil.transform(msg,spec);


//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

var tempRespose=JSON.parse(resposeInfo);
//{&#xd;
//  &quot;Code&quot; : 0,&#xd;
//  &quot;Message&quot; : &quot;更新日间患者医嘱号成功&quot;&#xd;
//}


 
try{
      var ackCode= tempRespose[&apos;Code&apos;]; 
 

     if(&apos;0&apos;==ackCode||ackCode==0){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;住院手术医嘱(日间手术)回写接口[住院网关]成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
    
          
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);  
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;updateAcisMedicalOrder&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;updateAcisMedicalOrder&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>44</metaDataId>
      <name>getInHospitalInfoByOutpatientId-5xhis</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://10.10.12.199:8082/fhir/his/esb/$process-message</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 根据门诊挂号序号查询患者住院信息入参=&apos;+JSON.stringify(msg));

 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
     // &quot;inpatientHosAreaCode&quot;: [&quot;hospitalAreaId&quot;, &quot;soid[]&quot;],
      &quot;outpatientId&quot;: &quot;outpatientId&quot;,
      &quot;patientId&quot;: &quot;patientId&quot; 
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //医疗机构编码
      &quot;hospitalSOID&quot;: &quot;994035&quot; 
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

   
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;399673772&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;399673772&apos;,&apos;HIS0137&apos;,null);
//var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;399673772&apos;,&apos;HIS0137&apos;,jsonData);
//logger.info(&apos;winex向入院证新增口 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
//var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
//esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);

esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(jsonData);
 //院区编码
//var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
//esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
//esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;

  
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

var tempRespose=JSON.parse(resposeInfo);
 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
      var data=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;data&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;根据门诊挂号序号查询患者住院信息成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,data);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
        var traceid= tempRespose[&apos;traceid&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode+&quot;,traceid=:&quot;+traceid;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
     //  logger.error(&apos;入院证新增异常====&apos;+AckMessage);
         var traceid= tempRespose[&apos;traceid&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;根据门诊挂号序号查询患者住院信息异常&apos;+AckMessage+&quot;,traceid=&quot;+traceid);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;getInHospitalInfoByOutpatientId&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getInHospitalInfoByOutpatientId&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>47</metaDataId>
      <name>cancelDaytimeSurgeryOrders-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/patientOut</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;daySurgeryNo&quot;: &quot;daySurgeryId&quot;,
      &quot;inPatientNo&quot;: &quot;inPatientNo&quot;,
      &quot;outpatientId&quot;: &quot;outpatientId&quot;,
      &quot;patientExitFactorDict&quot;: &quot;patientExitFactorDict&quot;,
      &quot;patientExitFactorNote&quot;: &quot;patientExitFactorNote&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;patientExitFactorDict&quot;: &quot;14&quot;,
      &quot;patientExitFactorNote&quot;: &quot;医生站取消&quot;
    }
  }
];

 &#xd; var jsonData=WinningJoltUtil.transform(msg,spec);&#xd;

 
//调用日间手术管理系统的json字符串,JSON.stringify(jsonData)
channelMap.put(&apos;jsonData&apos;,jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9ITDciLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMTAxIiwKICAgICAgICAgICAgIlRyYW5zZmVyVHlwZSI6IlN5bmMiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxNjoyNS41MzgiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiJQQyIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJmMzNmZWRkOS1mYWIzLTQ0NTUtOGU1OS04MDIxNmNhNGFlNjEiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6Ik1TSHxeflxcJnxISVN8OTkzODk4fENJU3w5OTM4OTh8MjAyMzExMDcxNjI1Mjd8fEFEVF5BMjheQURUX0EwNXwyOWFlM2YxNS1kMWQ4LTQyOWQtYWVjNS1jNzliOTYwYWZhMDZ8UHwyLjUuMXx8fHx8Q0hOXHJFVk58QTI4fDIwMjMxMTA3MTYyNTI3fHx8fHxeXjk5Mzg5OFxyUElEfHx8MzI4NjI4NTcwMTAyNjM2NTQ1Xl5eXlBhdGllbnRJRH45MzQyNjg2NV5eXl5NZWRpY2FsUmVjb3JkTm9+Xl5eXkNhcmROb34zMzA2ODEyMDExMDMyNTcwNlheXl5eU05+MzI4NjI4NTcwMTAyNjM2NTQ1Xl5eXlJvbGVOb34zMjg2Mjg1NzAxMDI2MzY1NDVeXl5eUGVyc29uSUR8fOS9leaWh+eDqHx8MjAxMTAzMjUwMDAwfEZ8fHzkuI3or6bkuaHplYde5Yek5qGlXue7jeWFtOW4gl7mtZnmsZ/nnIFeXl5IXl7or7jmmqjluIJ8fDEzNDg0MzE0ODYwXl5DUHx8fFVe5pyq55+lfHx8MzMwNjgxMjAxMTAzMjU3MDZYfHx8MDFe5rGJ5pePfHx8fHx8MS4yLjE1Ni4xMTI2MDQuMS4yLjguNDRe5Lit5Zu9XHJQVjF8fEl8fFJ8fHx8fHx8fHx8fHx8fHwzMjg2MzAxNDIwNjA3MTM5ODR8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8MjAyMzExMDcxNjI1MTJcclBWMnx8fHx8fHx8fHx8fHwwXlByZUFkbWlzc2lvblxySU4xfHx8fHx8fHx8fHx8fHx8MS4yLjE1Ni4xMTI2MDQuMS43LjExNi4yLjExMjQuOTkxODM3MDAwMTNcciIKICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);




 var resp=response.getMessage(); 
  
    try{

        // 转换日间系统返回的json对象
      //  var repJson=JSON.parse(resp);
	
         responseMap.put(&apos;ACK&apos;,resp);
        
      }catch(e){
	      //日间处理报错
	   responseMap.put(&apos;ACK&apos;,resp);       
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;cancelDaytimeSurgeryOrders&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelDaytimeSurgeryOrders&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>50</metaDataId>
      <name>viewPatient360-synyi</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://111.111.111.30:37727/connect/token</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/x-www-form-urlencoded</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map">
          <entry>
            <string>client_id</string>
            <list>
              <string>emr</string>
            </list>
          </entry>
          <entry>
            <string>client_secret</string>
            <list>
              <string>secret</string>
            </list>
          </entry>
          <entry>
            <string>grant_type</string>
            <list>
              <string>aes_hint</string>
            </list>
          </entry>
          <entry>
            <string>hint</string>
            <list>
              <string>${hint}</string>
            </list>
          </entry>
        </parameters>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>false</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content></content>
        <contentType>${contentType}</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>300000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

var operatorCode=msg[&apos;operatorCode&apos;];

// string aesEncryptResult = AESEncrypt(&quot;mqm-admin,1704038400&quot;, &quot;synyi123synyi123&quot;);

//第三方提供的加密key
var aesKey=&apos;synyi123synyi123&apos;;

//时间戳（秒)
var nowtimestamp=WinningDateUtils.currentSeconds();
//需要加密的数据
var aesdata=operatorCode+&apos;,&apos;+nowtimestamp;

var hint=WinningAESUtils.AESEncrypt(aesdata,aesKey);
  	
var abc=&apos;client_id=emr&amp;client_secret=secret&amp;grant_type=aes_hint&amp;hint=&apos;+hint;

var bbb=WinningCommonUtil.encode(hint);

//logger.info(&apos;aesdata====&apos;+aesdata);

//logger.info(&apos;bbb====&apos;+bbb);
 
//channelMap.put(&apos;jsonData&apos;,abc);
channelMap.put(&apos;hint&apos;,hint);
channelMap.put(&apos;contentType&apos;,&apos;application/x-www-form-urlencoded&apos;);
//channelMap.put(&apos;contentType&apos;,&apos;application/octet-stream&apos;);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>hanleResponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //返回的json数据
var resposeInfo=response.getMessage(); 

 

//获取日间请求的参数，用于后面的参数拼接
var originalRequestStr=connectorMessage.getRawData();
var originalJsonObj=JSON.parse(originalRequestStr);



var tempRespose=JSON.parse(resposeInfo);
 
 
try{
            
    if(tempRespose){      
 
    var tempMap=WinningCommonUtil.getWinexMap();
    tempMap[&apos;patient_no&apos;]=&apos;mz_&apos;+originalJsonObj[&apos;patientId&apos;];
    //调用第三方的token数据
    tempMap[&apos;third_token&apos;]=tempRespose[&apos;access_token&apos;];
	//token类型
     tempMap[&apos;third_token_type&apos;]=&apos;Bearer&apos;;
    //patient_source_type	患者来源类型	否	1：住院类型 2：门诊类型 3：急诊类型
     tempMap[&apos;patient_source_type&apos;]=&apos;2&apos;;
    //clientId	第三方的clientId	是	第三方应用标识 
     tempMap[&apos;clientId&apos;]=&apos;emr&apos;;
 	//就诊类型		1：住院 2：门诊 3：急诊
     tempMap[&apos;visit_type&apos;]=&apos;2&apos;;
     //就诊号
      tempMap[&apos;source_no&apos;]=&apos;&apos;;
     //机构号
     tempMap[&apos;org_code&apos;]=&apos;&apos;;
    //跳转360的初始地址
    var tempUrl=&quot;http://111.111.111.30:33600/view/subjects/${patient_no}/records?third_token=${third_token}&amp;third_token_type=${third_token_type}&amp;patient_source_type=${patient_source_type}&amp;clientId=${clientId}&amp;visit_type=${visit_type}&amp;source_no=${source_no}&amp;org_code=${org_code}&quot;;

    var jump360url=WinexEsbUtils.getEsbXml(tempUrl,tempMap);

     	
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,jump360url);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     } 
	      
}catch(e){
      logger.error(&apos;获取360token异常====&apos;+e);
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;viewPatient360&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;viewPatient360&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;synyi&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;synyi&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>51</metaDataId>
      <name>viewPatient360-winex</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>&apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>hanleResponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取日间请求的参数，用于后面的参数拼接
var originalRequestStr=connectorMessage.getRawData();
 

var requestObj=JSON.parse(originalRequestStr);


 
try{
var patient360url=configurationMap.get(&apos;patient.360.url&apos;);&#xd;
    
    if(requestObj){ 

    	  requestObj[&apos;userCode&apos;]=requestObj[&apos;operatorCode&apos;];
    	  
    	  var tempUrl=patient360url+&quot;/portal/getClientRequestUrl?enuserid=${userCode}&amp;enzjh=${patientIdNo}&amp;enjzlb=4&amp;enpatid=${patientId}&amp;enjzlsh=0&amp;enybkh=0&amp;enynkh=0&amp;enzyh=${outpatientMedicalNo}&amp;enmoduleCode=-1&amp;enyljgdm=${inpatientHosAreaCode}&amp;enyexh=0&amp;enksdm=${outpatientDeptCode}&amp;enclientInfo=zyysclient&quot;;

       var jump360url=  WinningCommonUtil.replace(requestObj,tempUrl);
    
     	
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,jump360url);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     } 
	      
}catch(e){
      logger.error(&apos;获取360token异常====&apos;+e);
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;viewPatient360&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;viewPatient360&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>53</metaDataId>
      <name>FHIR-InWard.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;手术安排接口的请求jsonMessage =&apos;+jsonMessage);
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识？
              /// &quot;PersonID&quot;: {
              //   &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              //  }
            }
          }
        }
      },
      &quot;Event&quot;: {
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorName&quot;
        }
      },
      //就诊记录
      // &quot;PatientVisit&quot;: {
      //就诊流水号,---首页序号
      //卫宁系统:门诊挂号序号、住院病人首页序号
      //  &quot;VisitNumber&quot;: &quot;inpatientNo&quot;
      //   },
      &quot;OrderGroupList&quot;: {
        &quot;0&quot;: {
          &quot;Surgery&quot;: {
            &quot;DaySurgeryNo&quot;: &quot;daySurgeryId&quot;,
            &quot;ApplyNo&quot;: &quot;surgicalNerialNumber&quot;,
            &quot;SurgicalDetailList&quot;: {
              &quot;*&quot;: {
                &quot;SurgicalDateRangeList&quot;: {
                  &quot;*&quot;: {
                    &quot;Type&quot;: {
                      //手术安排时间
                      &quot;BookDT&quot;: {
                        &quot;@(2,RangeStartDT)&quot;: &quot;surgeryArrangeDate[]&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //标记是winex 60的接口对接
      &quot;companyIdentifier&quot;: &quot;winex&quot;,
      &quot;writeBackType&quot;: &quot;1&quot;,
      //需要添加日间序号进行定位判断
      &quot;daySurgeryId&quot;: &quot;&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;cardinality&quot;,
    &quot;spec&quot;: {
      &quot;surgeryArrangeDate&quot;: &quot;ONE&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//调用日间手术管理系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
//channelMap.put(&apos;jsonData&apos;,convertedStr);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
 
 //日间返回的json数据
var resp=response.getMessage(); 
   
try{

	var esbResponseStr={
    		 &quot;ackCode&quot;: &quot;100&quot;,
    		 &quot;flag&quot;: true,
 		  &quot;message&quot;: &quot;入区成功&quot;
      }


// 转换日间系统返回的json对象
var repJson=JSON.parse(resp);
//获取日间系统返回的状态码 0为成功  其他是失败
var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
 if(retCode==0||retCode==&apos;0&apos;){		
   
      responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else {
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
		
		}
        
 }catch(e){
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));             
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;entry&apos;])&amp;&amp;(msg[&apos;entry&apos;][0])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]&quot; equals &apos;InpatientWardAdmitted&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;InpatientWardAdmitted&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>54</metaDataId>
      <name>FHIR-notInWard-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者取消入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;entry&quot;: {
        &quot;*&quot;: {
          &quot;resource&quot;: {
            &quot;identifier&quot;: {
              &quot;*&quot;: {
                &quot;system&quot;: {
                  // 5xhis的首页序号
                  &quot;urn:oid:1.2.156.112604.1.1.3765&quot;: {
                    &quot;@(2,value)&quot;: &quot;inpatientNo&quot;
                  },
                  // 住院号
                  &quot;urn:oid:1.2.156.112604.1.1.320&quot;: {
                    &quot;@(2,value)&quot;: &quot;inHospitalMedicalNo&quot;
                  }
                  //,
                  // 身份证号码
             //     &quot;urn:oid:1.2.156.112604.1.1.2575&quot;: {
               //     &quot;@(2,value)&quot;: &quot;inHospitalEncounterId&quot;
               //   }
                }
              }
            }
          }
        }
      }
    }
  },

  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //入区
      &quot;businessType&quot;: &quot;3&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(msg,spec));
 

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICJyZXNvdXJjZVR5cGUiOiAiQnVuZGxlIiwKICAibWV0YSI6IHsKICAgICJleHRlbnNpb24iOiBbCiAgICAgIHsKICAgICAgICAidXJsIjogImh0dHBzOi8vc2ltcGxpZmllci5uZXQvd2lubmluZ3Rlc3QvZXh0ZW5zaW9uLXRlbmFudGlkIiwKICAgICAgICAidmFsdWVJZCI6ICI5OTM3MTgiCiAgICAgIH0KICAgIF0KICB9LAogICJ0eXBlIjogIm1lc3NhZ2UiLAogICJlbnRyeSI6IFsKICAgIHsKICAgICAgInJlc291cmNlIjogewogICAgICAgICJyZXNvdXJjZVR5cGUiOiAiTWVzc2FnZUhlYWRlciIsCiAgICAgICAgImNvbnRhaW5lZCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInJlc291cmNlVHlwZSI6ICJQcmFjdGl0aW9uZXJSb2xlIiwKICAgICAgICAgICAgImlkIjogIjEiLAogICAgICAgICAgICAicHJhY3RpdGlvbmVyIjogewogICAgICAgICAgICAgICJpZGVudGlmaWVyIjogewogICAgICAgICAgICAgICAgInN5c3RlbSI6ICJ1cm46b2lkOjEuMi4xNTYuMTEyNjA0LjEuMS4yNDcyIiwKICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICIwNTYxIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImV4dGVuc2lvbiI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL3NpbXBsaWZpZXIubmV0L3dpbm5pbmd0ZXN0L2V4dGVuc2lvbi1ldmVudC10aW1lIiwKICAgICAgICAgICAgInZhbHVlRGF0ZVRpbWUiOiAiMjAyMy0wMi0xMFQxNzozNTo1MSswODowMCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJldmVudENvZGluZyI6IHsKICAgICAgICAgICJjb2RlIjogIklucGF0aWVudFdhcmRBZG1pc3Npb25DYW5jZWxlZCIKICAgICAgICB9LAogICAgICAgICJkZXN0aW5hdGlvbiI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiSElTIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInNvdXJjZSI6IHsKICAgICAgICAgICJuYW1lIjogIkNJUyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJyZXNvdXJjZSI6IHsKICAgICAgICAicmVzb3VyY2VUeXBlIjogIkVuY291bnRlciIsCiAgICAgICAgImlkIjogIjM0NDZjMDkzLTE0MGItNGUwZC1iZjVmLTE1Mzk1Y2ExMWUwYSIsCiAgICAgICAgIm1ldGEiOiB7CiAgICAgICAgICAicHJvZmlsZSI6IFsKICAgICAgICAgICAgImh0dHBzOi8vc2ltcGxpZmllci5uZXQvd2lubmluZ3Rlc3QvaW5wYXRpZW50LWVuY291bnRlci1wcm9maWxlIgogICAgICAgICAgXQogICAgICAgIH0sCiJleHRlbnNpb24iOiBbCgkJCXsKCQkJCSJ1cmwiOiAiaHR0cHM6Ly9zaW1wbGlmaWVyLm5ldC93aW5uaW5ndGVzdC9leHRlbnNpb24tbW90aGVyLW5ld2Jvcm4tYmVkLXNoYXJpbmciLAoJCQkJInZhbHVlQm9vbGVhbiI6IHRydWUKCQkJfQoJCV0sCiAgICAgICAgImlkZW50aWZpZXIiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJzeXN0ZW0iOiAidXJuOm9pZDoxLjIuMTU2LjExMjYwNC4xLjEuMjU3NSIsCiAgICAgICAgICAgICJ2YWx1ZSI6ICIyNDQ1MzMzMzc5OTAxOTkyOTciCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAic3lzdGVtIjogInVybjpvaWQ6MS4yLjE1Ni4xMTI2MDQuMS4xLjMyMCIsCiAgICAgICAgICAgICJ2YWx1ZSI6ICI2MTQwNjMwMDAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAiY2xhc3MiOiB7CiAgICAgICAgICAiY29kZSI6ICJ1cm46b2lkOjEuMi4xNTYuMTEyNjA0LjEuMi40MzMuNSIsCiAgICAgICAgICAiZGlzcGxheSI6ICLkvY/pmaIiCiAgICAgICAgfSwKICAgICAgICAiYXBwb2ludG1lbnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJyZWZlcmVuY2UiOiAiQXBwb2ludG1lbnQvN2UyZWNkZmQtODYzOC00ZWVkLWI0ZTEtMGRjMDE4MDIxYzgxIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImxvY2F0aW9uIjogWwogICAgICAgICAgewogICAgICAgICAgICAic3RhdHVzIjogImFjdGl2ZSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJzdGF0dXMiOiAiYWN0aXZlIgogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgfSwKICAgIHsKICAgICAgInJlc291cmNlIjogewogICAgICAgICJyZXNvdXJjZVR5cGUiOiAiQXBwb2ludG1lbnQiLAogICAgICAgICJpZCI6ICI3ZTJlY2RmZC04NjM4LTRlZWQtYjRlMS0wZGMwMTgwMjFjODEiLAogICAgICAgICJtZXRhIjogewogICAgICAgICAgInByb2ZpbGUiOiBbCiAgICAgICAgICAgICJodHRwczovL3NpbXBsaWZpZXIubmV0L3dpbm5pbmd0ZXN0L2lucGF0aWVudC1hcHBvaW50bWVudC1wcm9maWxlIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgImlkZW50aWZpZXIiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJpZCI6ICJyZWdpc3RlclNlcU5vIiwKICAgICAgICAgICAgInN5c3RlbSI6ICJ1cm46b2lkOjEuMi4xNTYuMTEyNjA0LjEuMS4zNzY1IiwKICAgICAgICAgICAgInZhbHVlIjogIjIwMjIwODExMDAwMDA1MzM2NiIKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0KICBdCn0=</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
 
 //日间返回的json数据
var resp=response.getMessage(); 
   
try{

	var esbResponseStr={
    		 &quot;ackCode&quot;: &quot;100&quot;,
    		 &quot;flag&quot;: true,
 		  &quot;message&quot;: &quot;入区取消成功&quot;
      }


// 转换日间系统返回的json对象
var repJson=JSON.parse(resp);
//获取日间系统返回的状态码 0为成功  其他是失败
var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
 if(retCode==0||retCode==&apos;0&apos;){		
   
      responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else {
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
		
		}
        
 }catch(e){
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));             
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;entry&apos;])&amp;&amp;(msg[&apos;entry&apos;][0])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]&quot; equals &apos;InpatientWardAdmissionCanceled&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;InpatientWardAdmissionCanceled&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>55</metaDataId>
      <name>FHIR-notOutWard-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/cancelHospitalizationInfoStatus</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者出院PVM0201的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              } 
            }
          }
        }
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;HandleList&quot;: {
          &quot;0&quot;: {
            // 出院日期
            &quot;HandleTime&quot;: &quot;inpatientOutDate&quot;
          }
        },
        //就诊流水号,---首页序号
        &quot;VisitNumber&quot;: &quot;inHospitalEncounterId&quot;
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //患者出院
      &quot;businessType&quot;: &quot;2&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出院PVM0201的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
 
 //日间返回的json数据
var resp=response.getMessage(); 
   
try{

	var esbResponseStr={
    		 &quot;ackCode&quot;: &quot;100&quot;,
    		 &quot;flag&quot;: true,
 		  &quot;message&quot;: &quot;出区召回成功&quot;
      }


// 转换日间系统返回的json对象
var repJson=JSON.parse(resp);
//获取日间系统返回的状态码 0为成功  其他是失败
var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
 if(retCode==0||retCode==&apos;0&apos;){		
   
      responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else {
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
		
		}
        
 }catch(e){
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));             
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;entry&apos;])&amp;&amp;(msg[&apos;entry&apos;][0])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]&quot; equals &apos;InpatientWardDischargeCancelled&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;InpatientWardDischargeCancelled&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>56</metaDataId>
      <name>FHIR-OutWard.Write-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackHospitalizationInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
 
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;entry&quot;: {
        &quot;*&quot;: {
          &quot;resource&quot;: {
            &quot;extension&quot;: {
              &quot;*&quot;: {
                &quot;url&quot;: {
                  // 患者的出区日期，后期进行格式化
                  //2023-02-10T19:15:10+08:00
                  &quot;https://simplifier.net/winningtest/extension-event-time&quot;: {
                    &quot;@(2,valueDateTime)&quot;: &quot;inpatientWardOutDate&quot;
                  }
                }
              }
            },
            &quot;identifier&quot;: {
              &quot;*&quot;: {
                &quot;system&quot;: {
                  // 5xhis的首页序号
                  &quot;urn:oid:1.2.156.112604.1.1.3765&quot;: {
                    &quot;@(2,value)&quot;: &quot;inpatientNo&quot;
                  },
                  // 住院病历号
                  &quot;urn:oid:1.2.156.112604.1.1.318&quot;: {
                    &quot;@(2,value)&quot;: &quot;inHospitalMedicalNo&quot;
                  },
                    // 科室编码
                  &quot;urn:oid:1.2.156.112604.1.1.1836&quot;: {
                    &quot;@(2,value)&quot;: &quot;inpatientDeptCode&quot;
                  },
                    // 病区编码
                  &quot;urn:oid:1.2.156.112604.1.1.233&quot;: {
                    &quot;@(2,value)&quot;: &quot;inpatientWardCode&quot;
                  }

                  
                  //,
                  // winex 60的住院就诊唯一标识
                 // &quot;urn:oid:1.2.156.112604.1.1.2575&quot;: {
                 //   &quot;@(2,value)&quot;: &quot;inHospitalEncounterId&quot;
                //  }
                }
              }
            },
            &quot;resourceType&quot;: {
              //患者姓名
              &quot;Patient&quot;: {
                &quot;@(2,name.text)&quot;: &quot;patientName&quot;
              },
          //    &quot;Location&quot;: {
                //病区名称
          //      &quot;@(2,name)&quot;: &quot;wardName&quot;
          //    },
              &quot;Organization&quot;: {
                //入院科室名称
                &quot;@(2,name)&quot;: &quot;inpatientDeptName&quot;
              }
            }
          }
        }
      }
    }
  },

  {
    &quot;operation&quot;: &quot;com.winning.mirth.jolt.CustomModifier$Overwrite&quot;,
    &quot;spec&quot;: {
      //入区时间格式转换
      &quot;inpatientWardOutDate&quot;: &quot;=toTimeFormatString(@(0), &apos;yyyy-MM-dd HH:mm:ss&apos;)&quot;
    }
},
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //出区
      &quot;businessType&quot;: &quot;4&quot;,
      &quot;companyIdentifier&quot;: &quot;winex&quot;
    }
  }
];

//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(msg,spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者出区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
 
 //日间返回的json数据
var resp=response.getMessage(); 
   
try{

	var esbResponseStr={
    		 &quot;ackCode&quot;: &quot;100&quot;,
    		 &quot;flag&quot;: true,
 		  &quot;message&quot;: &quot;出区成功&quot;
      }


// 转换日间系统返回的json对象
var repJson=JSON.parse(resp);
//获取日间系统返回的状态码 0为成功  其他是失败
var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
 if(retCode==0||retCode==&apos;0&apos;){		
   
      responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
 
	}else {
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));
		
		}
        
 }catch(e){
		//日间处理报错
		var errMsg=repJson[&apos;message&apos;];
		esbResponseStr[&apos;message&apos;]=errMsg;
		esbResponseStr[&apos;flag&apos;]=true;
		responseMap.put(&apos;ACK&apos;,JSON.stringify(esbResponseStr));             
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;entry&apos;])&amp;&amp;(msg[&apos;entry&apos;][0])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;])&amp;&amp;(msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]&quot; equals &apos;InpatientWardDischarged&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;eventCoding&apos;][&apos;code&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;InpatientWardDischarged&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>57</metaDataId>
      <name>cancelOperationApply-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.text);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


 //请求的参数字符串
var requestStr= connectorMessage.getRawData();
//打印日志
//logger.info(&apos;取消发送手术室调用请求的参数是====&apos;+requestStr);


// 需要转换的格式要求,把日间手术的字段转换成存储过程的字段
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;asmcNumber&quot;: &quot;rjxh&quot;,
      &quot;operatorCode&quot;: &quot;czyh&quot;,
      &quot;inpatientNo&quot;: &quot;syxh&quot;,
      &quot;patientId&quot;: &quot;patid&quot;,
      &quot;outpatientMedicalNo&quot;: &quot;blh&quot;,
      &quot;patientName&quot;: &quot;hzxm&quot;,
      &quot;patientSexDict&quot;: &quot;sex&quot;,
      &quot;age&quot;: &quot;age&quot;,
      &quot;wardCode&quot;: &quot;bqdm&quot;,
      &quot;deptCode&quot;: &quot;ksdm&quot;,
      &quot;bedCode&quot;: &quot;cwdm&quot;,
      &quot;planAnesthesiaMethodCode&quot;: &quot;mzdm&quot;,
      &quot;applyDate&quot;: &quot;sqrq&quot;,
      &quot;surgeryArrangeDate&quot;: &quot;aprq&quot;,
      &quot;surgeryStartTime&quot;: &quot;kssj&quot;,
      &quot;surgeryEndTime&quot;: &quot;jssj&quot;,
      &quot;surgeryDeptCode&quot;: &quot;ssksdm&quot;,
      &quot;operatingRoomCode&quot;: &quot;roomno&quot;,
      &quot;surgicalProceduresNumber&quot;: &quot;sstc&quot;,
      &quot;diseaseDescribe&quot;: &quot;bqsm&quot;,
      &quot;specialInfection&quot;: &quot;tsgr&quot;,
      &quot;hbvDict&quot;: &quot;ygbz&quot;,
      &quot;hcvDict&quot;: &quot;bgbz&quot;,
      &quot;syphilisDict&quot;: &quot;mdbz&quot;,
      &quot;hivDict&quot;: &quot;hivbz&quot;,
      &quot;surgeryAssistantCode1&quot;: &quot;sszsdm1&quot;,
      &quot;surgeryAssistantName1&quot;: &quot;sszsmc1&quot;,
      &quot;surgeryAssistantCode2&quot;: &quot;sszsdm2&quot;,
      &quot;surgeryAssistantName2&quot;: &quot;sszsmc2&quot;,
      &quot;surgeryAssistantCode3&quot;: &quot;sszsdm3&quot;,
      &quot;surgeryAssistantName3&quot;: &quot;sszsmc3&quot;,
      &quot;surgerySurgeonCode&quot;: &quot;zdysdm&quot;,
      &quot;diagnosisList&quot;: {
        &quot;0&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd&quot;
        },
        &quot;1&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd1&quot;
        },
        &quot;2&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd2&quot;
        },
        &quot;3&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd3&quot;
        }
      },
      &quot;surgeryEntityList&quot;: {
        &quot;0&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm&quot;,
          &quot;surgeryName&quot;: &quot;ssmc&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid&quot;,
          &quot;surgerySiteDict&quot;: &quot;ssbw&quot;,
          &quot;surgeryScaleDict&quot;: &quot;ssdj&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid&quot;
        },
        &quot;1&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm2&quot;,
          &quot;surgeryName&quot;: &quot;ssmc2&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj2&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid2&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid2&quot;
        },
        &quot;2&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm3&quot;,
          &quot;surgeryName&quot;: &quot;ssmc3&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj3&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid3&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid3&quot;
        },
        &quot;3&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm4&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid4&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid4&quot;
        },
        &quot;4&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm5&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid5&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid5&quot;
        },
        &quot;5&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm6&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid6&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid6&quot;
        }
      }
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;czbz&quot;: 1,
      &quot;rjxh&quot;: &quot;&quot;,
      &quot;czyh&quot;: &quot;&quot;,
      &quot;qxssyy&quot;: &quot;&quot;,
      &quot;syxh&quot;: 0,
      &quot;patid&quot;: &quot;&quot;,
      &quot;blh&quot;: &quot;&quot;,
      &quot;hzxm&quot;: &quot;&quot;,
      &quot;bqdm&quot;: &quot;&quot;,
      &quot;ksdm&quot;: &quot;&quot;,
      &quot;cwdm&quot;: &quot;&quot;,
      &quot;ssdm&quot;: &quot;&quot;,
      &quot;ssmc&quot;: &quot;&quot;,
      &quot;mzdm&quot;: &quot;&quot;,
      &quot;sqrq&quot;: null,
      &quot;aprq&quot;: null,
      &quot;kssj&quot;: null,
      &quot;jssj&quot;: null,
      &quot;ssksdm&quot;: &quot;&quot;,
      &quot;roomno&quot;: &quot;&quot;,
      &quot;sstc&quot;: &quot;&quot;,
      &quot;bqsm&quot;: &quot;&quot;,
      &quot;sqzd&quot;: &quot;&quot;,
      &quot;sqzd1&quot;: &quot;&quot;,
      &quot;sqzd2&quot;: &quot;&quot;,
      &quot;sqzd3&quot;: &quot;&quot;,
      &quot;ssdm2&quot;: &quot;&quot;,
      &quot;ssmc2&quot;: &quot;&quot;,
      &quot;ssdm3&quot;: &quot;&quot;,
      &quot;ssmc3&quot;: &quot;&quot;,
      &quot;qkid&quot;: &quot;&quot;,
      &quot;qkdj&quot;: &quot;&quot;,
      &quot;qkid2&quot;: &quot;&quot;,
      &quot;qkdj2&quot;: &quot;&quot;,
      &quot;qkid3&quot;: &quot;&quot;,
      &quot;qkdj3&quot;: &quot;&quot;,
      &quot;sscbid&quot;: &quot;&quot;,
      &quot;sscbid2&quot;: &quot;&quot;,
      &quot;sscbid3&quot;: &quot;&quot;,
      &quot;bwid&quot;: &quot;&quot;,
      &quot;twmc&quot;: &quot;&quot;,
      &quot;memo&quot;: &quot;&quot;,
      &quot;tsqx&quot;: &quot;&quot;,
      &quot;zdysdm&quot;: &quot;&quot;,
      &quot;sex&quot;: &quot;&quot;,
      &quot;age&quot;: &quot;&quot;,
      &quot;tsgr&quot;: &quot;&quot;,
      &quot;ssbw&quot;: &quot;&quot;,
      &quot;ygbz&quot;: &quot;&quot;,
      &quot;bgbz&quot;: &quot;&quot;,
      &quot;hivbz&quot;: &quot;&quot;,
      &quot;mdbz&quot;: &quot;&quot;,
      &quot;bwid2&quot;: &quot;&quot;,
      &quot;sszsdm1&quot;: &quot;&quot;,
      &quot;sszsmc1&quot;: &quot;&quot;,
      &quot;sszsdm2&quot;: &quot;&quot;,
      &quot;sszsmc2&quot;: &quot;&quot;,
      &quot;sszsdm3&quot;: &quot;&quot;,
      &quot;sszsmc3&quot;: &quot;&quot;,
      &quot;ssdm4&quot;: &quot;&quot;,
      &quot;ssdm5&quot;: &quot;&quot;,
      &quot;ssdm6&quot;: &quot;&quot;,
      &quot;bwid3&quot;: &quot;&quot;,
      &quot;bwid4&quot;: &quot;&quot;,
      &quot;bwid5&quot;: &quot;&quot;,
      &quot;bwid6&quot;: &quot;&quot;,
      &quot;sscbid4&quot;: &quot;&quot;,
      &quot;sscbid5&quot;: &quot;&quot;,
      &quot;sscbid6&quot;: &quot;&quot;,
      &quot;ssdj&quot;: &quot;&quot;
    }
}
]


  
var dbConn;
var result;

try {

      //通过规则转换进行请求参数的处理
    var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr),spec));
	 // 获取全局的数据库配置参数
    var hisApiConfig=configurationMap.get(&apos;winning.his.sqlserver.api.config&apos;);
    
	//存储过程名称
    var procName=&apos;usp_rjjk_sssq&apos;; 
     
     var outArgInfo=new HashMap();
     outArgInfo[&apos;result&apos;]=&apos;VARCHAR&apos;;
     outArgInfo[&apos;msg&apos;]=&apos;VARCHAR&apos;;



     var inArgInfo= WinningCommonUtil.toMap(JSON.stringify(jsonData));
	var syxh=inArgInfo[&apos;syxh&apos;];

	if(syxh==null||syxh==&apos;&apos;){
		inArgInfo[&apos;syxh&apos;]=0;
		
		}

	var sqrq=inArgInfo[&apos;sqrq&apos;];	

    if(sqrq!=null){
   // 	 logger.info(&apos;12321321======sqrq&apos;+sqrq);
      var format2 =sqrq.replace(&apos;-&apos;,&apos;&apos;);
      inArgInfo[&apos;sqrq&apos;]=format2.replace(&apos; &apos;,&apos;&apos;);
    	// logger.info(&apos;12321321&apos;+str2);
    	}

     
    // logger.error(&apos;取消发送手术室调用请求的参数是inArgInfo====&apos;+inArgInfo);
    /// logger.error(&apos;取消发送手术室调用请求的参数是hisApiConfig====&apos;+hisApiConfig);
    // logger.error(&apos;取消发送手术室调用请求的参数是outArgInfo====&apos;+outArgInfo);
     WinningSpUtils.callSpsHasOutParameter(hisApiConfig, procName, outArgInfo, inArgInfo) 
     var result= outArgInfo[&apos;result&apos;];
 
     if(&apos;T&apos;==result){
      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,true);	
       msg= JsonUtils.toJsonString(output); 
        responseMap.put(&apos;ACK&apos;,msg);
     }else{
     	      
            var errMsg= outArgInfo[&apos;msg&apos;];
            var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;操作失败&apos;+errMsg).add(&apos;count&apos;,1).add(&apos;data&apos;,false);	
         msg= JsonUtils.toJsonString(output); 
          responseMap.put(&apos;ACK&apos;,msg);
    }
	  
   
      
      

}catch(e){

      logger.error(&apos;取消发送手术室调用存储过程usp_rjjk_sssq异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e).add(&apos;data&apos;,false);	        
      var msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
      
	
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;cancelOperationApply&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelOperationApply&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>58</metaDataId>
      <name>generateOperationOrders-5xhis</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_cis_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;保存医嘱传入CIS系统请求参数=&apos;+JSON.stringify(msg));

// 需要转换的格式要求
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;beid&quot;: &quot;YLJGDM&quot;,
      &quot;inpatientNo&quot;: &quot;SYXH&quot;,
      &quot;patientName&quot;: &quot;HZXM&quot;,
      &quot;wardCode&quot;: &quot;BQDM&quot;,
      &quot;wardName&quot;: &quot;BQMC&quot;,
      &quot;deptCode&quot;: &quot;KSDM&quot;,
      &quot;deptName&quot;: &quot;KSMC&quot;,
	   &quot;surgerySurgeonCode&quot;: [&quot;YSDM&quot;, &quot;YZDATA[0].LRCZYH&quot;, &quot;YZDATA[0].SHCZYH&quot;, &quot;YZDATA[0].ZXCZYH&quot;],
      &quot;surgerySurgeonName&quot;: [&quot;YSMC&quot;, &quot;YZDATA[0].LRCZYMC&quot;, &quot;YZDATA[0].SHCZYMC&quot;, &quot;YZDATA[0].ZXCZYMC&quot;],
      &quot;asmcNumber&quot;: [&quot;YZDATA[0].WBYZXH&quot;, &quot;YZDATA[0].FZXH&quot;],
      &quot;#3&quot;: &quot;YZDATA[0].WBXT&quot;,
      &quot;# &quot;: [ &quot;YZDATA[0].SSKSDM&quot;, &quot;YZDATA[0].PCMC&quot;, &quot;YZDATA[0].JLDW&quot;, &quot;YZDATA[0].YPGG&quot;, &quot;YZDATA[0].ZDM&quot;, &quot;YZDATA[0].ZTNR&quot;, &quot;YZDATA[0].YPYF&quot;, &quot;YZDATA[0].YPYFMC&quot;, &quot;YZDATA[0].ZXKSDM&quot;, &quot;YZDATA[0].ZXKSMC&quot;],
      &quot;#0&quot;: [&quot;YZDATA[0].SSXH&quot;,&quot;YZDATA[0].LZBZ&quot;, &quot;YZDATA[0].ZBZ&quot;, &quot;YZDATA[0].IDM&quot;, &quot;YZDATA[0].GG_IDM&quot;, &quot;YZDATA[0].LC_IDM&quot;, &quot;YZDATA[0].LCXMDM&quot;, &quot;YZDATA[0].DWLB&quot;,  &quot;YZDATA[0].ZXZQDW&quot;, &quot;YZDATA[0].CGYZBZ&quot;, &quot;YZDATA[0].YJQRBZ&quot;, &quot;YZDATA[0].ZBYBZ&quot;, &quot;YZDATA[0].DYBZ&quot;],
      &quot;#1&quot;: [&quot;YZDATA[0].YZLB&quot;,&quot;YZDATA[0].ZXCS&quot;, &quot;YZDATA[0].ZXZQ&quot;],
      &quot;#1.00&quot;: &quot;YZDATA[0].YPSL&quot;,
      &quot;#0.00&quot;: &quot;YZDATA[0].ZDYDJ&quot;,
      &quot;#2&quot;: [ &quot;YZDATA[0].YZZT&quot;],
      &quot;#1.0000&quot;: &quot;YZDATA[0].YPJL&quot;,
      &quot;#97&quot;: &quot;YZDATA[0].PCDM&quot;,
      &quot;#XXXXX&quot;: &quot;YZDATA[0].YPDM&quot;,
      &quot;#08&quot;: &quot;YZDATA[0].ZXSJ&quot;,
      &quot;#90&quot;: &quot;YZDATA[0].DJFL&quot;
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;YLJGDM&quot;: &quot;&quot;,
      &quot;YEXH&quot;: &quot;0&quot;
    }
    }
];

//通过规则转换进行请求参数的处理
//var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(msg),spec));
var jsonData=JSON.parse(WinningJoltUtil.transform(msg,spec));

var nowStr=WinningDateUtils.getNowStr(&apos;yyyyMMddHH:mm:ss&apos;);
 
jsonData[&apos;YZDATA&apos;][0].LRRQ=nowStr;
jsonData[&apos;YZDATA&apos;][0].KSRQ=nowStr;
jsonData[&apos;YZDATA&apos;][0].SHRQ=nowStr;
jsonData[&apos;YZDATA&apos;][0].ZXRQ=nowStr;
//拟行手术日期
var surgeryPlanDate=msg[&apos;surgeryPlanDate&apos;];
//麻醉方式名称
var planAnesthesiaMethodName=msg[&apos;planAnesthesiaMethodName&apos;];
//手术名称拼接
var surgeryNameStr=msg[&apos;surgeryNameStr&apos;];
// 拟行手术中文日期
var ssrqcnstr= WinningDateUtils.getChinaTimeStr(&apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;MM月dd日&apos;, surgeryPlanDate)
//拟于+拟行手术日期+在+麻醉方式名称+下行+手术名称
jsonData[&apos;YZDATA&apos;][0].YPMC=&apos;拟于&apos;+ssrqcnstr+&apos;在&apos;+planAnesthesiaMethodName+&apos;下行&apos;+surgeryNameStr;

//logger.info(&apos;保存医嘱传入CIS系统请求参数=&apos;+JSON.stringify(jsonData));
//调用住院医生站系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

/*
*
{
&quot;MSG_TYPE&quot;:&quot;SUCCESS&quot;,
&quot;MSG_CODE&quot;:&quot;&quot;,
&quot;MSG&quot;:&quot;成功&quot;,
&quot;MSG_AT&quot;:&quot;2020/5/13 15:50:19&quot;
}
*/

 //调用CIS的接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;调用CIS的接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//logger.info(&apos;tempRespose=&apos;+tempRespose);
//var spec=&apos;&apos;

try{
	 var msgType= tempRespose[&apos;MSG_TYPE&apos;]; 
	  if(&apos;SUCCESS&apos;==msgType){      
	
		var spec=[
		  {
		    &quot;operation&quot;: &quot;shift&quot;,
		    &quot;spec&quot;: {
		      &quot;FHDATA&quot;: {
		        &quot;0&quot;: {
		        	//医嘱序号
		          &quot;HISYZXH&quot;: &quot;medicalOrderNumber&quot;
		        }
		      }
		    }
		  }
		];

	//通过规则转换进行请求参数的处理
	var jsonData=JSON.parse(WinningJoltUtil.transform(tempRespose,spec));
     	
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;CIS回写操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,jsonData);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;MSG_CODE&apos;];
       var msgInfo= tempRespose[&apos;MSG&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){

      logger.error(&apos;C001保存医嘱信息异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;generateOperationOrders&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;generateOperationOrders&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>59</metaDataId>
      <name>getLisReportDetail-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.org.apache.commons.lang3);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


try {

    // 获取全局的数据库配置参数，存储过程在日间手术
    var hisApiConfig = configurationMap.get(&apos;winning.asmc.sqlserver.api.config&apos;);


    //var dbconfig=hisApiConfig[&apos;dbconfig&apos;];

    //请求的参数字符串
    var requestStr = connectorMessage.getRawData();
    //打印日志
    // logger.info(&apos;获取检查检验报告申请单信息调用请求的参数是====&apos;+requestStr);
    // 转换格式，目前不转换，备用
    var spec = [{
            &quot;operation&quot;: &quot;shift&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;patientId&quot;,
                &quot;outpatientId&quot;: &quot;outpatientId&quot;,
                &quot;outpatientMedicalNo&quot;: &quot;outpatientMedicalNo&quot;,
                &quot;inHospitalMedicalNo&quot;: &quot;inHospitalMedicalNo&quot;,
                &quot;startTime&quot;: &quot;startTime&quot;,
                &quot;endTime&quot;: &quot;endTime&quot;
            }
        },
        {
            &quot;operation&quot;: &quot;default&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;&quot;,
                &quot;outpatientId&quot;: &quot;&quot;,
                &quot;outpatientMedicalNo&quot;: &quot;&quot;,
                &quot;inHospitalMedicalNo&quot;: &quot;&quot;,
                &quot;startTime&quot;: &quot;&quot;,
                &quot;endTime&quot;: &quot;&quot;
            }
        }
    ]

    //通过规则转换进行请求参数的处理
    var jsonData = JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr), spec));

    //存储过程名称[usp_asmc_getReportByPatid]
    var procName = &apos;usp_asmc_getReportByPatid&apos;;
    //存储过程的参数拼接
    var inArgInfo = WinningCommonUtil.toMap(JSON.stringify(jsonData));


    var patientId = inArgInfo[&apos;patientId&apos;];

    if (StringUtils.isEmpty(patientId)) {

        var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;患者[patientId]不能为空&apos;);
        var msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    } else {

        //    logger.info(&apos;获取检查检验报告申请单信息调用请求的参数是 inArgInfo====&apos;+inArgInfo);
        var list = WinningSpUtils.callSpsGetList(hisApiConfig, procName, inArgInfo);

        //list json字符串
        var retJsonStr = WinningCommonUtil.listToJsonStr(list);
        //logger.info(&apos;获取检查检验报告申请单存储过程usp_asmc_getReportByPatid信息返回数据是retJsonStr====&apos;+retJsonStr);     
        var output = Maps.map().add(&apos;status&apos;, true).add(&apos;data&apos;, JSON.parse(retJsonStr));

        //若需要把数据库字段转换字段，执行下面代码,
        var repsoneSpec = [{
                &quot;operation&quot;: &quot;shift&quot;,
                &quot;spec&quot;: {
                    &quot;data&quot;: {
                        &quot;*&quot;: {
                            &quot;patientId&quot;: &quot;data[&amp;1].patientId&quot;,
                            &quot;surveyingItemCode&quot;: &quot;data[&amp;1].surveyingItemCode&quot;,
                            &quot;surveyingItemName&quot;: &quot;data[&amp;1].surveyingItemName&quot;,
                            &quot;surveyingTypeCode&quot;: &quot;data[&amp;1].surveyingTypeCode&quot;,
                            &quot;surveyingReportStatusDict&quot;: &quot;data[&amp;1].surveyingReportStatusDict&quot;,
                            &quot;surveyingReportTime&quot;: &quot;data[&amp;1].surveyingReportTime&quot;,
                            &quot;surveyingEndTime&quot;: &quot;data[&amp;1].surveyingEndTime&quot;,
                            &quot;reportApplicationNumber&quot;: &quot;data[&amp;1].reportApplicationNumber&quot;,
                            &quot;patientName&quot;: &quot;data[&amp;1].patientName&quot;,
                            &quot;applyOpeningTime&quot;: &quot;data[&amp;1].applyOpeningTime&quot;,
                            &quot;reportUrl&quot;: &quot;data[&amp;1].reportUrl&quot;
                        }
                    }
                }
            },
            {
                &quot;operation&quot;: &quot;default&quot;,
                &quot;spec&quot;: {
                    &quot;data[]&quot;: {
                        &quot;*&quot;: {
                            &quot;patientId&quot;: &quot;&quot;,
                            &quot;surveyingItemCode&quot;: &quot;&quot;,
                            &quot;surveyingItemName&quot;: &quot;&quot;,
                            &quot;surveyingTypeCode&quot;: &quot;&quot;,
                            &quot;surveyingReportStatusDict&quot;: &quot;&quot;,
                            &quot;surveyingReportTime&quot;: &quot;&quot;,
                            &quot;surveyingEndTime&quot;: &quot;&quot;,
                            &quot;reportApplicationNumber&quot;: &quot;&quot;,
                            &quot;patientName&quot;: &quot;&quot;,
                            &quot;applyOpeningTime&quot;: &quot;&quot;,
                            &quot;reportUrl&quot;: &quot;&quot;,
                            &quot;statusDict&quot;: &quot;1&quot;
                        }
                    }
                }
            }
        ];

        // 如果需要转换则使用固定格式处理
        var retOutput = JSON.parse(WinningJoltUtil.transform(output, repsoneSpec));
        //logger.info(&apos;获取检查检验报告申请单信息返回数据是retOutput====&apos;+retOutput);  
        retOutput.count = retOutput.data.length;
        retOutput.status = true;
        retOutput.msg = &apos;数据获取成功&apos;;

        msg = JsonUtils.toJsonString(retOutput);
        responseMap.put(&apos;ACK&apos;, msg);
    }

} catch (e) {

    // logger.error(&apos;调用存储过程usp_asmc_getReportByPatid异常====&apos;+e);
    var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;查询异常&apos; + e);
    var msg = JsonUtils.toJsonString(output);
    responseMap.put(&apos;ACK&apos;, msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;getLisReportDetail&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getLisReportDetail&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>61</metaDataId>
      <name>getRisReportDetail-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.org.apache.commons.lang3);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


try {

  // 获取全局的数据库配置参数，存储过程在日间手术
 var hisApiConfig=configurationMap.get(&apos;winning.asmc.sqlserver.api.config&apos;);


 //请求的参数字符串
var requestStr= connectorMessage.getRawData();
//打印日志
 //logger.info(&apos;获取检查RIS报告明细调用请求的参数是====&apos;+requestStr);
 // 转换格式，目前不转换，备用
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;patientId&quot;: &quot;patientId&quot;,
      &quot;reportApplicationNumber&quot;: &quot;reportApplicationNumber&quot;
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;patientId&quot;: &quot;&quot;,
      &quot;reportApplicationNumber&quot;: &quot;&quot;
    }
    }
]
  
      //通过规则转换进行请求参数的处理
    var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr),spec));

	//存储过程名称
    var procName=&apos;usp_asmc_getRisReportDetail&apos;;     
    //存储过程的参数拼接
    var inArgInfo= WinningCommonUtil.toMap(JSON.stringify(jsonData));

    var reportApplicationNumber=inArgInfo[&apos;reportApplicationNumber&apos;];

    if(StringUtils.isEmpty(reportApplicationNumber)){      
         var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;报告申请单号[reportApplicationNumber]不能为空&apos;);	        
         var msg= JsonUtils.toJsonString(output); 
         responseMap.put(&apos;ACK&apos;,msg);   
         
	}else{
		
		
		
    
    var list= WinningSpUtils.callSpsGetList(hisApiConfig, procName, inArgInfo);
     //list json字符串
    var retJsonStr=WinningCommonUtil.listToJsonStr(list);
   //  logger.info(&apos;获取检查检验报告申请单存储过程usp_asmc_getReportByPatid信息返回数据是retJsonStr====&apos;+retJsonStr);     
    var output=Maps.map().add(&apos;status&apos;,true).add(&apos;data&apos;,JSON.parse(retJsonStr));     

	//若需要把数据库字段转换字段，执行下面代码,
	var repsoneSpec= [
	  {
	    &quot;operation&quot;: &quot;shift&quot;,
	    &quot;spec&quot;: {
	      &quot;data&quot;: {
	        &quot;*&quot;: {
	          &quot;patientId&quot;: &quot;data[&amp;1].patientId&quot;,
	          &quot;reportApplicationNumber&quot;: &quot;data[&amp;1].reportApplicationNumber&quot;,
	          &quot;inspectionName&quot;: &quot;data[&amp;1].inspectionName&quot;,
	          &quot;inspectionCode&quot;: &quot;data[&amp;1].inspectionCode&quot;,
	          &quot;abnormalIndicator&quot;: &quot;data[&amp;1].abnormalIndicator&quot;,
	          &quot;inspectionDiagnosis&quot;: &quot;data[&amp;1].inspectionDiagnosis&quot;,
	          &quot;referenceResult&quot;: &quot;data[&amp;1].referenceResult&quot;,
	          &quot;inspectionConclusion&quot;: &quot;data[&amp;1].inspectionConclusion&quot;,
	          &quot;entryDate&quot;: &quot;data[&amp;1].entryDate&quot; 
	        }
	      }
	    }
	    },
	  {
	    &quot;operation&quot;: &quot;default&quot;,
	    &quot;spec&quot;: {
	      &quot;data[]&quot;: {
	        &quot;*&quot;: {
	          &quot;patientId&quot;: &quot;&quot;,
	          &quot;reportApplicationNumber&quot;: &quot;&quot;,
	           &quot;inspectionName&quot;: &quot;&quot;,
	          &quot;inspectionCode&quot;: &quot;&quot;,
	          &quot;abnormalIndicator&quot;: &quot;&quot;,
	          &quot;inspectionDiagnosis&quot;: &quot;&quot;,
	          &quot;referenceResult&quot;: &quot;&quot;,
	          &quot;inspectionConclusion&quot;: &quot;&quot;,
	          &quot;entryDate&quot;: &quot;&quot;
	        }
	      }
	    }
	    }
	];

	// 如果需要转换则使用固定格式处理
	 var retOutput=JSON.parse(WinningJoltUtil.transform(output,repsoneSpec));
	// logger.info(&apos;获取检查检验报告申请单信息返回数据是retOutput====&apos;+retOutput);  
	 retOutput.count=retOutput.data.length;
	 retOutput.status=true;
	 retOutput.msg=&apos;数据获取成功&apos;;
	 
	msg= JsonUtils.toJsonString(retOutput);
	responseMap.put(&apos;ACK&apos;,msg);
		
		
		
}



}catch(e){

   //   logger.error(&apos;调用存储过程usp_asmc_getRisReportDetail异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);   	
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;getRisReportDetail&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getRisReportDetail&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>62</metaDataId>
      <name>sendOperationApply-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.text);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


 //请求的参数字符串
var requestStr= connectorMessage.getRawData();
//打印日志
//logger.info(&apos;发送手术室调用请求的参数是====&apos;+requestStr);


// 需要转换的格式要求,把日间手术的字段转换成存储过程的字段
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;asmcNumber&quot;: &quot;rjxh&quot;,
      &quot;operatorCode&quot;: &quot;czyh&quot;,
      &quot;inpatientNo&quot;: &quot;syxh&quot;,
      &quot;patientId&quot;: &quot;patid&quot;,
      &quot;outpatientMedicalNo&quot;: &quot;blh&quot;,
      &quot;patientName&quot;: &quot;hzxm&quot;,
      &quot;patientSexDict&quot;: &quot;sex&quot;,
      &quot;age&quot;: &quot;age&quot;,
      &quot;wardCode&quot;: &quot;bqdm&quot;,
      &quot;deptCode&quot;: &quot;ksdm&quot;,
      &quot;bedCode&quot;: &quot;cwdm&quot;,
      &quot;planAnesthesiaMethodCode&quot;: &quot;mzdm&quot;,
      &quot;applyDate&quot;: &quot;sqrq&quot;,
      &quot;surgeryArrangeDate&quot;: &quot;aprq&quot;,
      &quot;surgeryStartTime&quot;: &quot;kssj&quot;,
      &quot;surgeryEndTime&quot;: &quot;jssj&quot;,
      &quot;surgeryDeptCode&quot;: &quot;ssksdm&quot;,
      &quot;operatingRoomCode&quot;: &quot;roomno&quot;,
      &quot;surgicalProceduresNumber&quot;: &quot;sstc&quot;,
      &quot;diseaseDescribe&quot;: &quot;bqsm&quot;,
      &quot;specialInfection&quot;: &quot;tsgr&quot;,
      &quot;hbvDict&quot;: &quot;ygbz&quot;,
      &quot;hcvDict&quot;: &quot;bgbz&quot;,
      &quot;syphilisDict&quot;: &quot;mdbz&quot;,
      &quot;hivDict&quot;: &quot;hivbz&quot;,
     // &quot;highValueConsumables&quot;:&quot;ssbzsm&quot;,
      &quot;surgeryAssistantCode1&quot;: &quot;sszsdm1&quot;,
      &quot;surgeryAssistantName1&quot;: &quot;sszsmc1&quot;,
      &quot;surgeryAssistantCode2&quot;: &quot;sszsdm2&quot;,
      &quot;surgeryAssistantName2&quot;: &quot;sszsmc2&quot;,
      &quot;surgeryAssistantCode3&quot;: &quot;sszsdm3&quot;,
      &quot;surgeryAssistantName3&quot;: &quot;sszsmc3&quot;,
      &quot;surgerySurgeonCode&quot;: &quot;zdysdm&quot;,
      &quot;diagnosisList&quot;: {
        &quot;0&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd&quot;
        },
        &quot;1&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd1&quot;
        },
        &quot;2&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd2&quot;
        },
        &quot;3&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd3&quot;
        }
      },
      &quot;surgeryEntityList&quot;: {
        &quot;0&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm&quot;,
          &quot;surgeryName&quot;: &quot;ssmc&quot;,
          //切口
          &quot;surgeryCutLevelDict&quot;: &quot;qkid&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid&quot;,
          //手术部位
          &quot;surgerySiteDict&quot;: &quot;bwid&quot;,
          //手术等级
          &quot;surgeryScaleDict&quot;: &quot;ssdj&quot;,
          //手术体位
          &quot;surgeryPositionDictStr&quot;: &quot;twmc&quot;
        },
        &quot;1&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm2&quot;,
          &quot;surgeryName&quot;: &quot;ssmc2&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkid2&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid2&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid2&quot;
        },
        &quot;2&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm3&quot;,
          &quot;surgeryName&quot;: &quot;ssmc3&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkid3&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid3&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid3&quot;
        },
        &quot;3&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm4&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid4&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid4&quot;
        },
        &quot;4&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm5&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid5&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid5&quot;
        },
        &quot;5&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm6&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid6&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid6&quot;
        }
      }
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;czbz&quot;: 0,
      &quot;rjxh&quot;: &quot;&quot;,
      &quot;czyh&quot;: &quot;&quot;,
      &quot;qxssyy&quot;: &quot;&quot;,
      &quot;syxh&quot;: 0,
      &quot;patid&quot;: &quot;&quot;,
      &quot;blh&quot;: &quot;&quot;,
      &quot;hzxm&quot;: &quot;&quot;,
      &quot;bqdm&quot;: &quot;&quot;,
      &quot;ksdm&quot;: &quot;&quot;,
      &quot;cwdm&quot;: &quot;&quot;,
      &quot;ssdm&quot;: &quot;&quot;,
      &quot;ssmc&quot;: &quot;&quot;,
      &quot;mzdm&quot;: &quot;&quot;,
      &quot;sqrq&quot;: null,
      &quot;aprq&quot;: null,
      &quot;kssj&quot;: null,
      &quot;jssj&quot;: null,
      &quot;ssksdm&quot;: &quot;&quot;,
      &quot;roomno&quot;: &quot;&quot;,
      &quot;sstc&quot;: &quot;&quot;,
      &quot;bqsm&quot;: &quot;&quot;,
      &quot;sqzd&quot;: &quot;&quot;,
      &quot;sqzd1&quot;: &quot;&quot;,
      &quot;sqzd2&quot;: &quot;&quot;,
      &quot;sqzd3&quot;: &quot;&quot;,
      &quot;ssdm2&quot;: &quot;&quot;,
      &quot;ssmc2&quot;: &quot;&quot;,
      &quot;ssdm3&quot;: &quot;&quot;,
      &quot;ssmc3&quot;: &quot;&quot;,
      &quot;qkid&quot;: &quot;&quot;,
      &quot;qkdj&quot;: &quot;&quot;,
      &quot;qkid2&quot;: &quot;&quot;,
      &quot;qkdj2&quot;: &quot;&quot;,
      &quot;qkid3&quot;: &quot;&quot;,
      &quot;qkdj3&quot;: &quot;&quot;,
      &quot;sscbid&quot;: &quot;&quot;,
      &quot;sscbid2&quot;: &quot;&quot;,
      &quot;sscbid3&quot;: &quot;&quot;,
      &quot;bwid&quot;: &quot;&quot;,
      &quot;twmc&quot;: &quot;&quot;,
      &quot;memo&quot;: &quot;&quot;,
      &quot;tsqx&quot;: &quot;&quot;,
      &quot;zdysdm&quot;: &quot;&quot;,
      &quot;sex&quot;: &quot;&quot;,
      &quot;age&quot;: &quot;&quot;,
      &quot;tsgr&quot;: &quot;&quot;,
      &quot;ssbw&quot;: &quot;&quot;,
      &quot;ygbz&quot;: &quot;&quot;,
      &quot;bgbz&quot;: &quot;&quot;,
      &quot;hivbz&quot;: &quot;&quot;,
      &quot;mdbz&quot;: &quot;&quot;,
      &quot;bwid2&quot;: &quot;&quot;,
      &quot;sszsdm1&quot;: &quot;&quot;,
      &quot;sszsmc1&quot;: &quot;&quot;,
      &quot;sszsdm2&quot;: &quot;&quot;,
      &quot;sszsmc2&quot;: &quot;&quot;,
      &quot;sszsdm3&quot;: &quot;&quot;,
      &quot;sszsmc3&quot;: &quot;&quot;,
      &quot;ssdm4&quot;: &quot;&quot;,
      &quot;ssdm5&quot;: &quot;&quot;,
      &quot;ssdm6&quot;: &quot;&quot;,
      &quot;bwid3&quot;: &quot;&quot;,
      &quot;bwid4&quot;: &quot;&quot;,
      &quot;bwid5&quot;: &quot;&quot;,
      &quot;bwid6&quot;: &quot;&quot;,
      &quot;sscbid4&quot;: &quot;&quot;,
      &quot;sscbid5&quot;: &quot;&quot;,
      &quot;sscbid6&quot;: &quot;&quot;,
      &quot;ssdj&quot;: &quot;&quot;
    //  ,     &quot;ssbzsm&quot;:&quot;&quot;
    }
}
]


  
var dbConn;
var result;

try {

      //通过规则转换进行请求参数的处理
    var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr),spec));
	 // 获取全局的数据库配置参数
    var hisApiConfig=configurationMap.get(&apos;winning.his.sqlserver.api.config&apos;);
    
	//存储过程名称
    var procName=&apos;usp_rjjk_sssq&apos;; 
     
     var outArgInfo=new HashMap();
     outArgInfo[&apos;result&apos;]=&apos;VARCHAR&apos;;
     outArgInfo[&apos;msg&apos;]=&apos;VARCHAR&apos;;



     var inArgInfo= WinningCommonUtil.toMap(JSON.stringify(jsonData));


	var sqrq=inArgInfo[&apos;sqrq&apos;];	
	var syxh=inArgInfo[&apos;syxh&apos;];

	if(syxh==null||syxh==&apos;&apos;){
		inArgInfo[&apos;syxh&apos;]=0;
		
		}
		

    if(sqrq!=null){
    	// logger.info(&apos;12321321======sqrq&apos;+sqrq);
      var format2 =sqrq.replace(&apos;-&apos;,&apos;&apos;);
      inArgInfo[&apos;sqrq&apos;]=format2.replace(&apos; &apos;,&apos;&apos;);
    	// logger.info(&apos;12321321&apos;+str2);
    	}

     
   //  logger.error(&apos;发送手术室调用请求的参数是inArgInfo====&apos;+inArgInfo);
     //logger.error(&apos;发送手术室调用请求的参数是hisApiConfig====&apos;+hisApiConfig);
   
     WinningSpUtils.callSpsHasOutParameter(hisApiConfig, procName, outArgInfo, inArgInfo) 
     var result= outArgInfo[&apos;result&apos;];
   //logger.error(&apos;发送手术室调用请求的参数是outArgInfo====&apos;+outArgInfo);
     if(&apos;T&apos;==result){
      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,true);	
       msg= JsonUtils.toJsonString(output); 
        responseMap.put(&apos;ACK&apos;,msg);
     }else{
     	      
            var errMsg= outArgInfo[&apos;msg&apos;];
            var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;操作失败&apos;+errMsg).add(&apos;count&apos;,1).add(&apos;data&apos;,false);	
         msg= JsonUtils.toJsonString(output); 
          responseMap.put(&apos;ACK&apos;,msg);
    }
	  
   
      
      

}catch(e){

      logger.error(&apos;调用存储过程usp_rjjk_sssq异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e).add(&apos;data&apos;,false);	        
      var msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
      
	
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;sendOperationApply&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;sendOperationApply&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>71</metaDataId>
      <name>generateOperationOrders-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;调用网关生成4199-2104-02=&apos;+JSON.stringify(msg));
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;inpatientHosAreaCode&quot;: [&quot;hospitalSOID&quot;],
      &quot;surgerySurgeonCode&quot;: [&quot;prescribingDoctorNo&quot;],
      &quot;inHospitalEncounterId&quot;: &quot;encounterId&quot;,
      &quot;deptNo&quot;: &quot;prescribingDeptNo&quot;,
      &quot;wardNo&quot;: &quot;prescribingWardNo&quot;,
      &quot;daySurgeryId&quot;: &quot;externalSystemOrderNo&quot;,
      &quot;operatorCode&quot;: [&quot;prescriptionAcceptedByNo&quot;, &quot;applyByNo&quot;, &quot;executeByNo&quot;],
      &quot;operatorDate&quot;: [&quot;applyAt&quot;, &quot;executeAt&quot;],
      &quot;surgeryEntityList&quot;: {
        &quot;*&quot;: {
          //手术等级
          &quot;surgeryScaleDict&quot;: [&quot;orderItemList[&amp;1].surgeryLevelCode&quot;,
         &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgeryLevelCode&quot;],
          //切口等级
          &quot;surgeryCutLevelDict&quot;: [&quot;orderItemList[&amp;1].surgicalIncisionLevelCode&quot;,
          &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgicalIncisionLevelCode&quot;],
          //手术分类代码OID，卫宁标准值域:DHCV00048手术分类代码
          //麻醉方式编码 
          &quot;@(2,planAnesthesiaMethodCode)&quot;: &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgicalAnesthesiaCode&quot;,
          &quot;@(2,surgeryPlanDate)&quot;: &quot;orderItemList[&amp;1].plannedSurgeryDate&quot;,
          //拟手术时间，格式:HH:mm:ss
          &quot;#00:00:00&quot;: &quot;orderItemList[&amp;1].plannedSurgeryTime&quot;,
          &quot;#1.2.156.112604.1.2.558.35&quot;: &quot;orderItemList[&amp;1].csTypeCode&quot;,
          &quot;#1.2.156.112604.1.2.1051.7&quot;: &quot;orderItemList[&amp;1].orderTypeCode&quot;,
          //手术室   
          &quot;@(2,surgeryDeptCode)&quot;: &quot;orderItemList[&amp;1].operatingRoomNo&quot;,
          //手术入路代码
          &quot;#1.2.156.112604.1.2.9716.1&quot;: &quot;orderItemList[&amp;1].surgicalApproachCode&quot;,
          &quot;@(2,surgerySurgeonCode)&quot;: &quot;orderItemList[&amp;1].surgicalOperatorList[0].surgeonNo&quot;,
          &quot;#1.2.156.112604.1.2.8622.10&quot;: &quot;orderItemList[&amp;1].surgicalOperatorList[0].surgicalOperatorRoleCode&quot;,
          //固定日间
          &quot;#1.2.156.112604.1.2.463.5&quot;: [&quot;orderItemList[&amp;1].surgeryClassCode&quot;,&quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgeryClassCode&quot;],
          &quot;#98176&quot;: [
		   &quot;orderItemList[&amp;1].surgicalOperatorList[0].externalExpertFlag&quot;,
            ////计划再手术标志
            &quot;orderItemList[&amp;1].plannedReoperationFlag&quot;,
//需备血标志
           &quot;orderItemList[&amp;1].bloodPreparationFlag&quot;,
//是否自体血回输标志
           &quot;orderItemList[&amp;1].autologousBloodTransFlag&quot;,
//感染标志
           &quot;orderItemList[&amp;1].infectedFlag&quot;,
//非计划再次手术标志
           &quot;orderItemList[&amp;1].unplannedReoperationFlag&quot;,
//重大手术标志
           &quot;orderItemList[&amp;1].majorSurgeryFlag&quot;,
//疑难手术标志
           &quot;orderItemList[&amp;1].difficultSurgeryFlag&quot;,
//使用抗生素标志
           &quot;orderItemList[&amp;1].useAntibioticFlag&quot;,
//需隔离标志
           &quot;orderItemList[&amp;1].isolatedFlag&quot;,
//是否合并内科疾病标志
           &quot;orderItemList[&amp;1].complicatedMedDiseaseFlag&quot;,
//检查中标志
           &quot;orderItemList[&amp;1].examinatingFlag&quot;,
//未发现异常标志
           &quot;orderItemList[&amp;1].noAbnormalityFlag&quot;],
          &quot;surgeryCode&quot;: &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgeryNo&quot;,
          &quot;surgeryName&quot;: [&quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgeryName&quot;,
         &quot;orderItemList[&amp;1].orderItemContent&quot;],
          &quot;surgerySiteDict&quot;: &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgicalSiteCode&quot;,
          &quot;surgeryPositionDict&quot;: &quot;orderItemList[&amp;1].surgicalAnesthesiaList[0].surgicalPositionCode&quot;,
          &quot;csId&quot;: [&quot;orderItemList[&amp;1].csId&quot;]
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //医疗机构编码
      &quot;hospitalSOID&quot;: &quot;994035&quot;,
      //HIS版本，值域:5、6
      &quot;hisVersion&quot;: 6,
      //医嘱出处系统代码OID-日间手术系统
      &quot;orderProvenanceCode&quot;: &quot;1.2.156.112604.1.2.106188.5&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;modify-overwrite-beta&quot;,
    &quot;spec&quot;: {
      &quot;orderItemList&quot;: {
        &quot;*&quot;: { // data array
          &quot;orderItemContent&quot;: &quot;=concat(&apos;[日间]&apos;,@(1,orderItemContent))&quot;
        }
      }
    }
  }
];

//改成日期
var surgeryPlanDate=msg[&apos;surgeryPlanDate&apos;];
if(surgeryPlanDate!=null){
msg[&apos;surgeryPlanDate&apos;]=surgeryPlanDate.substring(0 ,10);
}



 var jsonData=WinningJoltUtil.transform(msg,spec);

 
 //var jsonDataObj= JSON.parse(jsonData);
 //var tempDiagArr=jsonDataObj[&apos;certDiagList&apos;];
 //var newarr = tempDiagArr.filter(item=&gt;![&quot;&quot;,null,undefined].includes(item));
 //jsonDataObj[&apos;certDiagList&apos;]=newarr;

var jsonDataObj = JSON.parse(jsonData);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4199-2104-02&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4199-2104-02&apos;,&apos;HIS0137&apos;,JSON.stringify(jsonDataObj));
//logger.info(&apos;winex向入院证新增口 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);


 
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
 //logger.error(&apos;生产住院医嘱成功响应====&apos;+resposeInfo);
var tempRespose=JSON.parse(resposeInfo);
 

 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
     	var tempData=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;data&apos;];

     	//    logger.error(&apos;生产住院医嘱成功响应tempData====&apos;+JSON.stringify(tempData));
 
     	     var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;orderId&quot;: [&quot;medicalOrderNumber&quot;, &quot;cisOrderNo&quot;],
      &quot;orderItemIds&quot;: {
        &quot;0&quot;: &quot;cisOrderDetailNo&quot;
      }
    }
  }
];

//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(tempData,spec));
//logger.error(&apos;生产住院医嘱成功响应tempData111====&apos;+jsonData);
//logger.error(&apos;生产住院医嘱成功响应tempData====&apos;+JSON.stringify(jsonData));

     	     
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;住院手术医嘱(日间手术)回写接口[住院网关]成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,jsonData);	
       msg= JsonUtils.toJsonString(output); 
      //  logger.error(&apos;生产住院医嘱成功响应msg====&apos;+msg);
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
        var traceid= tempRespose[&apos;traceid&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode+&quot;,traceid=:&quot;+traceid;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
     //  logger.error(&apos;入院证新增异常====&apos;+AckMessage);
      var traceid= tempRespose[&apos;traceid&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;住院手术医嘱(日间手术)回写接口异常&apos;+AckMessage+&quot;,traceid=&quot;+traceid);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;generateOperationOrders&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;generateOperationOrders&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>73</metaDataId>
      <name>addAdmissionCertificate-60outpatient</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


//logger.info(&apos;winex 入院证新增=&apos;+msg[&apos;surgeryPlanDate&apos;]);

var plannedAdmAt = msg[&apos;surgeryPlanDate&apos;];
if (plannedAdmAt != null) {
    var tempPlannedAdmAt = WinningDateUtils.strToStr(plannedAdmAt, &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyy-MM-dd&apos;);
    msg[&apos;surgeryPlanDate&apos;] = tempPlannedAdmAt;
}

var spec = [{
        &quot;operation&quot;: &quot;shift&quot;,
        &quot;spec&quot;: {
            //参数名称：拟入院科室代码
            &quot;inpatientDeptCode&quot;: &quot;plannedAdmDeptId&quot;,
            //参数名称：预交金
            &quot;outpatientAdvancePayment&quot;: &quot;prepaidAmount&quot;,
            &quot;diagnosisList&quot;: {
                &quot;*&quot;: {
                    &quot;diagnosisTypeDict&quot;: {
                        // 001 门诊诊断 002 术前诊断 003 入院诊断 999 其他诊断
                        &quot;002&quot;: {
                            &quot;@(2,diagnosisId)&quot;: &quot;diagnosisCodes[&amp;3].diagnosisCode&quot;,
                            &quot;@(2,diagnosisCode)&quot;: &quot;diagnosisCodes[&amp;3].diagnosticNo&quot;,
                            &quot;@(2,diagnosisName)&quot;: &quot;diagnosisCodes[&amp;3].diagnosticName&quot;
                        }
                    }
                }
            },
            &quot;patientContactName1&quot;: &quot;contactName&quot;,
            //1男 2 女 0 未知
            //0---&gt;1.2.156.112604.1.2.5.1
            // 1---&gt;1.2.156.112604.1.2.5.2
            // 2---&gt;1.2.156.112604.1.2.5.3
            &quot;patientSexDict&quot;: {
                &quot;0&quot;: {
                    &quot;#1.2.156.112604.1.2.5.1&quot;: &quot;genderCode&quot;
                },
                &quot;1&quot;: {
                    &quot;#1.2.156.112604.1.2.5.2&quot;: &quot;genderCode&quot;
                },
                &quot;2&quot;: {
                    &quot;#1.2.156.112604.1.2.5.3&quot;: &quot;genderCode&quot;
                }
            },
            &quot;patientTel&quot;: [&quot;telephoneNo&quot;, &quot;phone&quot;],
            &quot;inpatientHosAreaCode&quot;: [&quot;hospitalAreaId&quot;, &quot;soid[]&quot;],
            //参数名称：医保类型
            &quot;medicalInsuranceCodeDict&quot;: &quot;medInstiInsurId&quot;,
            //参数名称：拟入院病区代码
            &quot;inpatientWardCode&quot;: &quot;plannedAdmWardId&quot;,
            &quot;encounterId&quot;: &quot;encounterId&quot;,
            &quot;operatorDate&quot;: &quot;fillInAt&quot;,
            //主管医生编码
            &quot;chargeDoctorId&quot;: &quot;admissionDoctorId&quot;,
            //参数名称：是否不同步给his，98175 是，null或98176否
            &quot;#98176&quot;: &quot;ifNotToHisFromFhir&quot;,
            &quot;patientName&quot;: &quot;fullName&quot;,
            //拟手术日期，入院证为拟手术日期
            &quot;surgeryPlanDate&quot;: &quot;plannedAdmAt&quot;,
            //预住院标志,98175 是 ；98176 否
            // &quot;#98176&quot;: &quot;preHospitalizationFlag&quot;,
            &quot;residentialAddress&quot;: {
                &quot;countyLevelCode&quot;: &quot;addrCountyCode&quot;,
                &quot;provincialCode&quot;: &quot;addrProvinceCode&quot;,
                &quot;cityLevelCode&quot;: &quot;addrCityCode&quot;,
                &quot;streetCode&quot;: &quot;addrTownCode&quot;
            },
            &quot;bedCode&quot;: &quot;plannedAdmBedspaceNo&quot;,
            &quot;patientAccountAddress&quot;: &quot;addrDetail&quot;
            //  ,   &quot;daySurgeryId&quot;: &quot;daySurgeryRegExtNo&quot;
        }
    },
    {
        &quot;operation&quot;: &quot;default&quot;,
        &quot;spec&quot;: {
            &quot;daySurgeryFlag&quot;: &quot;1.2.156.112604.1.2.750.1&quot;,
            &quot;genderCode&quot;: &quot;1.2.156.112604.1.2.5.1&quot;
        }
    }
];


var jsonData = WinningJoltUtil.transform(msg, spec);


var jsonDataObj = JSON.parse(jsonData);
var tempDiagArr = jsonDataObj[&apos;diagnosisCodes&apos;];
var newarr = tempDiagArr.filter(item =&gt; ![&quot;&quot;, null, undefined].includes(item));
jsonDataObj[&apos;diagnosisCodes&apos;] = newarr;


//logger.info(&apos;winex向入院证新增口 ===newarr=&apos;+newarr);

var requestRootStr = &apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;1.1&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4194-9006-02&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest = WinexEsbUtils.buildEsbRequest(requestRootStr, &apos;4194-9006-02&apos;, &apos;HIS0137&apos;, JSON.stringify(jsonDataObj));
//logger.info(&apos;winex--4194-9006-02 ===esbRequest=&apos;+esbRequest);
var esbObj = JSON.parse(esbRequest);
var bodystr = esbObj[&apos;Request&apos;][&apos;Body&apos;];

esbObj[&apos;Request&apos;][&apos;Body&apos;] = JSON.parse(bodystr);

//院区编码
var areaCode = msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;] = areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;] = areaCode;

//logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;, JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}


 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
     	var outpCertId=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;outpCertId&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;入院证新增成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,outpCertId);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
        var traceid= tempRespose[&apos;traceid&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode+&quot;,traceid=:&quot;+traceid;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
     //  logger.error(&apos;入院证新增异常====&apos;+AckMessage);
         var traceid= tempRespose[&apos;traceid&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;入院证新增异常&apos;+AckMessage+&quot;,traceid=&quot;+traceid);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;addAdmissionCertificate&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;addAdmissionCertificate&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;winex_outpatient&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;winex_outpatient&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>74</metaDataId>
      <name>cancelAdmissionCertificate-60outpatient</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


//logger.info(&apos;winex 入院证新增=&apos;+msg[&apos;surgeryPlanDate&apos;]);

var plannedAdmAt = msg[&apos;surgeryPlanDate&apos;];
if (plannedAdmAt != null) {
    var tempPlannedAdmAt = WinningDateUtils.strToStr(plannedAdmAt, &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyy-MM-dd&apos;);
    msg[&apos;surgeryPlanDate&apos;] = tempPlannedAdmAt;
}

var spec = [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
       &quot;inpatientHosAreaCode&quot;: [&quot;hospitalAreaId&quot;, &quot;hospitalAreaIds[]&quot;],
      &quot;outpCertId&quot;: &quot;outpCertId&quot;,
      &quot;operatorCode&quot;:&quot;outpCertActionBy&quot;,
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;hospitalAreaId&quot;: &quot;991827&quot;,
      &quot;outpCertActionBy&quot;: &quot;&quot;
    }
  }
];


var jsonData = WinningJoltUtil.transform(msg, spec);


var jsonDataObj = JSON.parse(jsonData);
var tempDiagArr = jsonDataObj[&apos;diagnosisCodes&apos;];
var newarr = tempDiagArr.filter(item =&gt; ![&quot;&quot;, null, undefined].includes(item));
jsonDataObj[&apos;diagnosisCodes&apos;] = newarr;


//logger.info(&apos;winex向入院证新增口 ===newarr=&apos;+newarr);

var requestRootStr = &apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4194-9007-02&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest = WinexEsbUtils.buildEsbRequest(requestRootStr, &apos;4194-9007-02&apos;, &apos;HIS0137&apos;, JSON.stringify(jsonDataObj));
//logger.info(&apos;winex-4194-9007-02 ===esbRequest=&apos;+esbRequest);
var esbObj = JSON.parse(esbRequest);
var bodystr = esbObj[&apos;Request&apos;][&apos;Body&apos;];

esbObj[&apos;Request&apos;][&apos;Body&apos;] = JSON.parse(bodystr);

//院区编码
var areaCode = msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;] = areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;] = areaCode;

//logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;, JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;入院证新增winex接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
//        &quot;Body&quot;: &quot;&quot;
//    }
//}
 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
     if(&apos;100&apos;==ackCode){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;入院证作废成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
    //   logger.info(&apos;入1111o=&apos;+msgCode);
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
           var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+msgInfo);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;cancelAdmissionCertificate&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelAdmissionCertificate&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;winex_outpatient&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;winex_outpatient&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>75</metaDataId>
      <name>getInfectiousDiseaseResult-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.org.apache.commons.lang3);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


try {

    // 获取全局的数据库配置参数，存储过程在日间手术

    var hisApiConfig = configurationMap.get(&apos;winning.his.sqlserver.api.config&apos;);
    //var dbconfig=hisApiConfig[&apos;dbconfig&apos;];
    //请求的参数字符串
    var requestStr = connectorMessage.getRawData();
    //打印日志
    // logger.info(&apos;获取检查检验报告申请单信息调用请求的参数是====&apos;+requestStr);
    // 转换格式，目前不转换，备用
    var spec = [{
            &quot;operation&quot;: &quot;shift&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;patientId&quot;,
                &quot;startTime&quot;: &quot;startTime&quot;,
                &quot;endTime&quot;: &quot;endTime&quot;
            }
        },
        {
            &quot;operation&quot;: &quot;default&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;&quot;,
                &quot;startTime&quot;: &quot;&quot;,
                &quot;endTime&quot;: &quot;&quot;
            }
        }
    ]

    //通过规则转换进行请求参数的处理
    var jsonData = JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr), spec));

    //存储过程名称[usp_asmc_getReportByPatid]
    var procName = &apos;usp_asmc_getInfectiousDiseaseResult&apos;;
    //存储过程的参数拼接
    var inArgInfo = WinningCommonUtil.toMap(JSON.stringify(jsonData));
    var patientId = inArgInfo[&apos;patientId&apos;];
    if (StringUtils.isEmpty(patientId)) {
        var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;患者[patientId]不能为空&apos;);
        var msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    } else {
        var list = WinningSpUtils.callSpsGetList(hisApiConfig, procName, inArgInfo);
        // var retJsonStr=WinningCommonUtil.listToJsonStr(list);
        //若需要把数据库字段转换字段，执行下面代码,
        var repsoneSpec = [{
                &quot;operation&quot;: &quot;shift&quot;,
                &quot;spec&quot;: {
                    &quot;*&quot;: {
                        &quot;xmdm&quot;: &quot;data[&amp;1].projectCode&quot;,
                        &quot;xmjg&quot;: &quot;data[&amp;1].result&quot;,
                        &quot;xmmc&quot;: &quot;data[&amp;1].projectName&quot;
                    }
                }
            },
            {
                &quot;operation&quot;: &quot;default&quot;,
                &quot;spec&quot;: {
                    &quot;data[]&quot;: {
                        &quot;*&quot;: {
                            &quot;statusDict&quot;: &quot;1&quot;
                        }
                    }
                }
            }

        ];
        // 如果需要转换则使用固定格式处理
        var winResponseStr = WinningJoltUtil.transform(list, repsoneSpec);
        responseMap.put(&apos;ACK&apos;, winResponseStr);
    }
} catch (e) {
    var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;查询异常&apos; + e);
    var msg = JsonUtils.toJsonString(output);
    responseMap.put(&apos;ACK&apos;, msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;getInfectiousDiseaseResult&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getInfectiousDiseaseResult&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>77</metaDataId>
      <name>sendOperationApply-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_esb_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
          <entry>
            <string>service_id</string>
            <list>
              <string>ORD0310</string>
            </list>
          </entry>
          <entry>
            <string>domain_id</string>
            <list>
              <string>02</string>
            </list>
          </entry>
          <entry>
            <string>apply_unit_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>exec_unit_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>hospital_id</string>
            <list>
              <string>994035</string>
            </list>
          </entry>
          <entry>
            <string>send_sys_id</string>
            <list>
              <string>HIS0137</string>
            </list>
          </entry>
          <entry>
            <string>order_exec_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
          <entry>
            <string>extend_sub_id</string>
            <list>
              <string>0</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 手术申请单新增=&apos;+JSON.stringify(msg));
msg[&apos;operatorDate&apos;]=WinningDateUtils.getStandardNowStr();

//if(msg[&apos;patientBirthday&apos;]){
 //msg[&apos;patientBirthday&apos;]=msg[&apos;patientBirthday&apos;]+&apos; 00:00:00&apos;;
//}
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
   
      &quot;inpatientHosAreaCode&quot;: &quot;Event.EventFacility.Identifier&quot;,
      &quot;inpatientHosAreaName&quot;: &quot;Event.EventFacility.Text&quot;,
      //人口学信息
      &quot;#PatientID&quot;: &quot;Demography.PatientIdentifierList[0].IDType&quot;,
      &quot;patientId&quot;: &quot;Demography.PatientIdentifierList[0].IDNumber&quot;,
      &quot;outpatientMedicalNo&quot;: &quot;Demography.PatientIdentifierList[1].IDNumber&quot;,
      &quot;#MedicalRecordNo&quot;: &quot;Demography.PatientIdentifierList[1].IDType&quot;,
      //角色ID ，先默认一个，后续根据医院进行修改
      //&quot;#1000009563554&quot;: &quot;Demography.PatientIdentifierList[2].IDNumber&quot;,
    //  &quot;#RoleNo&quot;: &quot;Demography.PatientIdentifierList[2].IDType&quot;,
      &quot;patientIdNo&quot;: &quot;Demography.SSN&quot;,
      &quot;patientName&quot;: &quot;Demography.PatientName&quot;,
      //1男 2 女 0 未知
      //0---&gt;1.2.156.112604.1.2.5.1
      // 1---&gt;M
      // 2---&gt;F
      &quot;patientSexDict&quot;: {
        &quot;1&quot;: {
          &quot;#M&quot;: &quot;Demography.Sex.Identifier&quot;,
          &quot;#男性&quot;: &quot;Demography.Sex.Text&quot;
        },
        &quot;2&quot;: {
          &quot;#F&quot;: &quot;Demography.Sex.Identifier&quot;,
          &quot;#女性&quot;: &quot;Demography.Sex.Text&quot;
        }
      },
      &quot;patientBirthday&quot;: &quot;Demography.Birthday&quot;,
      &quot;patientTel&quot;: &quot;Demography.PhoneList[0].PhoneNumberST&quot;,
      &quot;#CP&quot;: &quot;Demography.PhoneList[0].EquipmentType&quot;,
      //省市取县代码
      &quot;residentialAddress&quot;: {
        &quot;#H&quot;:&quot;Demography.AddressList[0].Type&quot;,
        &quot;#165&quot;:&quot;Demography.AddressList[0].Country.Identifier&quot;,
        &quot;#中国&quot;:&quot;Demography.AddressList[0].Country.Text&quot;,
        &quot;provincialCode&quot;: &quot;Demography.AddressList[0].Province.Identifier&quot;,
        &quot;provincialName&quot;: &quot;Demography.AddressList[0].Province.Text&quot;,
        &quot;addressMeno&quot;: &quot;Demography.AddressList[0].StreetAddress&quot;,
        &quot;cityLevelCode&quot;: &quot;Demography.AddressList[0].City.Identifier&quot;,
        &quot;cityLevelName&quot;: &quot;Demography.AddressList[0].City.Text&quot;,
        &quot;countyLevelCode&quot;: &quot;Demography.AddressList[0].County.Identifier&quot;,
        &quot;countyLevelName&quot;: &quot;Demography.AddressList[0].County.Text&quot;,
        &quot;streetCode&quot;: &quot;Demography.AddressList[0].Town.Identifier&quot;,
        &quot;streetName&quot;: &quot;Demography.AddressList[0].Town.Text&quot;
      },
      //就诊记录
      //首页序号
      &quot;encounterId&quot;: &quot;PatientVisit.VisitNumber&quot;,
     
      &quot;bedCode&quot;: &quot;PatientVisit.PatientLocation.Bed&quot;,
   
      &quot;operatingDeptNo&quot;: &quot;PatientVisit.HandleList[0].HandleBy.Department.Identifier&quot;,
      &quot;surgeryDeptName&quot;: [&quot;PatientVisit.HandleList[0].HandleBy.Department.Text&quot;, &quot;PatientVisit.PatientLocation.Room&quot;],
      //手术申请医生和工号
      &quot;surgerySurgeonCode&quot;: &quot;PatientVisit.HandleList[0].HandleBy.IDNumber&quot;,
      &quot;surgerySurgeonName&quot;: &quot;PatientVisit.HandleList[0].HandleBy.Name&quot;,
      //手术申请单数据
      //手术申请单号
      &quot;daySurgeryId&quot;: [&quot;Surgery.DaySurgeryNo&quot;, &quot;OrderGroupList[0].Surgery.DaySurgeryNo&quot;, &quot;OrderGroupList[0].Surgery.ApplyNo&quot;],
      //申请时间(拟手术时间)
      &quot;surgeryPlanDate&quot;: [&quot;PatientVisit.HandleList[0].HandleTime&quot;,&quot;Surgery.ApplyTime&quot;, &quot;OrderGroupList[0].Surgery.ApplyTime&quot;],
      //隔离标志
      // &quot;&quot;:&quot;Surgery.IsolationIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.IsolationIndicator.Text&quot;,
      //感染标致
      //&quot;&quot;:&quot;Surgery.SpecialInfect.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.SpecialInfect.Text&quot;,
      // //HepatitisAnt 肝炎相关抗原
      //&quot;&quot;:&quot;Surgery.HepatitisAnt.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HepatitisAnt.Text&quot;,
      //HBV 乙肝
      // &quot;&quot;:&quot;Surgery.HBV.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HBV.Text&quot;,
      //Syphilis 梅毒
      // &quot;&quot;:&quot;Surgery.Syphilis.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.Syphilis.Text&quot;,
      //HIV 艾滋
      // &quot;&quot;:&quot;Surgery.HIV.Identifier&quot;,
      // &quot;&quot;:&quot;Surgery.HIV.Text&quot;,
      //ReadyBloodIndicator   备血标致
      //  &quot;&quot;:&quot;Surgery.ReadyBloodIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.ReadyBloodIndicator.Text&quot;,
      //自体血回输
      //  &quot;&quot;:&quot;Surgery.SelfBloodIndicator.Identifier&quot;,
      //  &quot;&quot;:&quot;Surgery.SelfBloodIndicator.Text&quot;
      //操作人工号和名称
	  
	     //事件信息
       &quot;operatorCode&quot;: [&quot;Event.Operator.IDNumber&quot;,&quot;Surgery.HandleList[0].HandleBy.IDNumber&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleBy.IDNumber&quot;],
      &quot;operatorName&quot;: [&quot;Event.Operator.Name&quot;,&quot;Surgery.HandleList[0].HandleBy.Name&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleBy.Name&quot;],
     
 	 &quot;wardNo&quot;: [&quot;PatientVisit.PatientLocation.Ward.Identifier&quot;,&quot;Surgery.HandleList[0].Ward.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Ward.Identifier&quot;],
      &quot;wardName&quot;: [&quot;PatientVisit.PatientLocation.Ward.Text&quot;,&quot;Surgery.HandleList[0].Ward.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Ward.Text&quot;],
      &quot;deptNo&quot;: [&quot;Surgery.HandleList[0].Department.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Department.Identifier&quot;, &quot;PatientVisit.PatientLocation.Department.Identifier&quot;],
      &quot;deptName&quot;: [&quot;Surgery.HandleList[0].Department.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Department.Text&quot;, &quot;PatientVisit.PatientLocation.Department.Text&quot;],
      //操作时间
      &quot;operatorDate&quot;: [&quot;Surgery.HandleList[0].HandleTime&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].HandleTime&quot;,&quot;Event.RecordDatetime&quot;],
      &quot;#Entry&quot;: [&quot;Surgery.HandleList[0].Type.Identifier&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Type.Identifier&quot;],
      &quot;#录入&quot;: [&quot;Surgery.HandleList[0].Type.Text&quot;, &quot;OrderGroupList[0].Surgery.HandleList[0].Type.Text&quot;],
      &quot;anesthesiaDoctorFlag&quot;: [&quot;OrderGroupList[0].Surgery.NeedAnesthetist.Identifier&quot;],
      //申请单明细
      &quot;surgeryEntityList&quot;: {
        &quot;*&quot;: {
          // 浙江省中使用手术ICD编码
          &quot;operationIcdCmCode&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Identifier&quot;],
          &quot;operationIcdCmName&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalInfo.Text&quot;],
          //手术等级
          &quot;surgeryScaleNo&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationScale.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationScale.Identifier&quot;],
          //手术部位

          &quot;surgeryCutLevelDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].CutsRating.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].CutsRating.Identifier&quot;],
          //手术体位
          &quot;surgeryPositionDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].Position.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].Position.Identifier&quot;],
          //手术侧别
          &quot;surgerySideDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationSite.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationSite.Identifier&quot;],
          &quot;#等待中未安排&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Text&quot;],
          &quot;#Waitlist&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalStatus.Identifier&quot;],
          &quot;@(2,surgeryDeptName)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Text&quot;],
          &quot;@(2,operatingDeptNo)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalDepartment.Identifier&quot;],
          //&quot;#&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationType.Text&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Text&quot;],
          //&quot;@(2,surgeryDeptCode)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].OperationType.Identifier&quot;,&quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Identifier&quot;],
          &quot;surgerySiteDict&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].SurgicalSite.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].SurgicalSite.Identifier&quot;],
          //切口等级          //主刀医生
          &quot;@(2,surgerySurgeonCode)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.IDNumber&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.IDNumber&quot;],
          &quot;@(2,surgerySurgeonName)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Name&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Name&quot;],
          &quot;#Surgeon&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Identifier&quot;],
          &quot;#主刀医生&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].ResourceGroup.PersonList[&amp;1].Person.Role.Text&quot;],
           //SGR0205新增
           &quot;#4&quot;: &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Identifier&quot; ,
           &quot;#日间&quot;: &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].OperationType.Text&quot; ,
          &quot;@(2,planAnesthesiaMethodName)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Text&quot;],
          &quot;@(2,planAnesthesiaMethodNo)&quot;: [&quot;Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgicalDetailList[&amp;1].AnesthesiaMethod.Identifier&quot;]
        }
      },
      //预估手术时长
      &quot;estimateSurgeryDuration&quot;: [&quot;Surgery.SurgeryDuration.Identifier&quot;, &quot;OrderGroupList[0].Surgery.SurgeryDuration.Identifier&quot;],
      &quot;#小时&quot;: [&quot;Surgery.SurgeryDuration.Text&quot;, &quot;OrderGroupList[0].Surgery.SurgeryDuration.Text&quot;],
      &quot;#日间手术申请&quot;: [&quot;OrderGroupList[0].Surgery.ApplyName&quot;,&quot;OrderGroupList[0].Surgery.ApplyStudy&quot;,&quot;OrderGroupList[0].Surgery.ApplyReason&quot;],
      &quot;#日间手术&quot;: [&quot;OrderGroupList[0].Surgery.Type.Text&quot;],
      &quot;#Surgical&quot;: [&quot;OrderGroupList[0].Surgery.Type.Identifier&quot;],
     
      &quot;#0&quot;: [&quot;OrderGroupList[0].Surgery.ApplyStatus&quot;,&quot;OrderGroupList[0].Surgery.Priority&quot;],
      //医嘱操作码不能为空；    	——Create-保存或Submit-提交
      &quot;#SC&quot;:&quot;OrderGroupList[0].CommonOrder.OrderControl&quot;,
      &quot;diagnosisList&quot;: {
        &quot;*&quot;: {
          &quot;diagnosisTypeDict&quot;: {
            // 匹配值为002的数据
            &quot;002&quot;: {
              // 将匹配的数据放入DiagnosisList中 DiagnosisApplyNo
              &quot;@(2,diagnosisCode)&quot;: &quot;DiagnosisList[&amp;1].DiagnosisCode.Identifier&quot;,
              &quot;@(2,diagnosisName)&quot;: &quot;DiagnosisList[&amp;1].DiagnosisCode.Text&quot;,
              &quot;#1.2.156.112604.1.2.744.2&quot;: &quot;DiagnosisList[&amp;1].DiagnosisType.Identifier&quot;,
              &quot;#术前诊断&quot;: &quot;DiagnosisList[&amp;1].DiagnosisType.Text&quot;,
              &quot;@(4,daySurgeryId)&quot;: &quot;DiagnosisList[&amp;1].DiagnosisApplyNo&quot;
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;EventCode&quot;: {
          &quot;Identifier&quot;: &quot;SGR0205&quot;,
          &quot;Text&quot;: &quot;住院手术申请单新增服务&quot;
        }
      },
      &quot;PatientVisit&quot;: {
        // 患者类型 O-门诊 E-急诊 I-住院
        &quot;PatientClass&quot;: &quot;I&quot;,
        &quot;BabyVisitNumber&quot;: &quot;&quot;
      },
      &quot;Surgery&quot;: {
        &quot;ApplyName&quot;: &quot;日间手术申请&quot;,
        //申请单类别，固定为手术
        &quot;Type&quot;: {
          &quot;Identifier&quot;: &quot;Surgical&quot;,
          &quot;Text&quot;: &quot;日间手术&quot;
        },
        //申请单目的
        &quot;ApplyStudy&quot;: &quot;日间手术申请&quot;,
        //原因
        &quot;ApplyReason&quot;: &quot;&quot;,
        //医生建议
        &quot;DocAdvice&quot;: &quot;&quot;,
        //申请单状态：0 未确认 1 已确认
        &quot;ApplyStatus&quot;: 0,
        //单个申请单优先级： 0-普通 1-择期 2-加急
        &quot;Priority&quot;: 0,
        //描述
        &quot;ApplyDescription&quot;: &quot;&quot;
      }
    }
  }
];


//logger.info(&apos;999999======&apos;+JSON.stringify(msg));

 var jsonData=WinningJoltUtil.transform(msg,spec);


logger.info(&apos;999999======&apos;+jsonData);
var jsonDataObj= JSON.parse(jsonData);
var tempDiagArr=jsonDataObj[&apos;DiagnosisList&apos;];
var newarr = tempDiagArr.filter(item=&gt;![&quot;&quot;,null,undefined].includes(item));
jsonDataObj[&apos;DiagnosisList&apos;]=newarr;


 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;ORD0310&quot;,&quot;LicId&quot;:&quot;09B8DHhMgpRo1njdKLLQYA==&quot;,&quot;ContentType&quot;:&quot;text/json&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;&quot;,&quot;AppId&quot;:&quot;HIS0137&quot;,&quot;RecOrgId&quot;:&quot;&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;129.10.26.77&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;SGR0205&apos;,&apos;HIS0137&apos;,JSON.stringify(jsonDataObj));
//logger.info(&apos;winex向发送手术申请单请求的 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);

var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);

 //院区编码
var areaCode=msg[&apos;inpatientHosAreaCode&apos;];
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;OrgId&apos;]=areaCode;
esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]=areaCode;
//logger.info(&apos;winex向发送手术申请单请求的 ===RecOrgId=&apos;+esbObj[&apos;Request&apos;][&apos;Head&apos;][&apos;RecOrgId&apos;]);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
//logger.info(&apos;手术申请调用winex接口响应返回resposeInfo=&apos;+resposeInfo);

var tempRespose=JSON.parse(resposeInfo);

//{
//    &quot;Response&quot;: {
//        &quot;Head&quot;: {
//            &quot;Version&quot;: &quot;1.1&quot;,
//            &quot;TransferType&quot;: &quot;Async&quot;,
//            &quot;AckCode&quot;: &quot;100&quot;,
//            &quot;AckMessage&quot;: &quot;调用成功！&quot;,
//            &quot;ContentType&quot;: &quot;text/json;charset=UTF-8&quot;,
//            &quot;ContentEncoding&quot;: &quot;&quot;,
//            &quot;OrgId&quot;: &quot;H0001&quot;,
//            &quot;AppId&quot;: &quot;S003&quot;,
//            &quot;RecOrgId&quot;: &quot;H0001&quot;,
//            &quot;RecAppId&quot;: &quot;&quot;,
//            &quot;MessageId&quot;: &quot;6F9619FF-8B86-D011-B66D-00C04FC96633&quot;,
//            &quot;Timestamp&quot;: &quot;2022-09-01 14:08:25.768&quot;
//        },
    
//        &quot;Body&quot;: &quot;&quot;
//    }
//}
 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
     if(&apos;100&apos;==ackCode||&apos;100.2&apos;==ackCode||&apos;100.1&apos;==ackCode){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;手术申请成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
      //logger.error(&apos;手术申请异常====&apos;+e);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+e);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;sendOperationApply&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;sendOperationApply&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>78</metaDataId>
      <name>addWinexOutPatientDaySurgeryFlag</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 门诊医生站患者日记标记保存  =&apos;+JSON.stringify(msg));
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {     
        &quot;encounterId&quot;: &quot;encounterId&quot;,
        &quot;inpatientHosAreaCode&quot;: [&quot;hospitalSOID&quot;, &quot;soid[]&quot;],
        &quot;daySurgeryId&quot;: &quot;daySurgeryNo&quot;, 
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;hospitalSOID&quot;: &quot;994272&quot;,
      &quot;soid&quot;: [994272],
      &quot;daySurgeryFlag&quot;: &quot;98175&quot;
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4194-7034-02&quot;,&quot;LicId&quot;:&quot;Rn+JQjOd6wN9LtZ5pCoptw==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;S1133&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4194-7034-02&apos;,&apos;S1133&apos;,jsonData);
//logger.info(&apos;winex 日间标记更新 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);


 //logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
  //  logger.error(&apos;日间标记更新异常11111111111 resposeInfo====&apos;+resposeInfo);
var tempRespose=JSON.parse(resposeInfo);


 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
      var outpCertId=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;outpCertId&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;日间标记更新成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,outpCertId);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
       //logger.error(&apos;日间标记更新异常====&apos;+AckMessage);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+AckMessage);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;addWinexOutPatientDaySurgeryFlag&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;addWinexOutPatientDaySurgeryFlag&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; contains &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>79</metaDataId>
      <name>cancelWinexOutPatientDaySurgeryFlag</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 门诊医生站患者日记标记保存  =&apos;+JSON.stringify(msg));
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {     
        &quot;encounterId&quot;: &quot;encounterId&quot;,
        &quot;inpatientHosAreaCode&quot;: [&quot;hospitalSOID&quot;, &quot;soid[]&quot;],
        &quot;daySurgeryId&quot;: &quot;daySurgeryNo&quot;, 
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;hospitalSOID&quot;: &quot;994272&quot;,
      &quot;soid&quot;: [994272],
      &quot;daySurgeryFlag&quot;: &quot;98176&quot;
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4194-7034-02&quot;,&quot;LicId&quot;:&quot;Rn+JQjOd6wN9LtZ5pCoptw==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;S1133&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4194-7034-02&apos;,&apos;S1133&apos;,jsonData);
//logger.info(&apos;winex 日间标记更新 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);


 //logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
  //  logger.error(&apos;日间标记更新异常11111111111 resposeInfo====&apos;+resposeInfo);
var tempRespose=JSON.parse(resposeInfo);


 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
      var outpCertId=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;outpCertId&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;日间标记更新成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,outpCertId);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
       //logger.error(&apos;日间标记更新异常====&apos;+AckMessage);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+AckMessage);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;cancelWinexOutPatientDaySurgeryFlag&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;cancelWinexOutPatientDaySurgeryFlag&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; contains &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>80</metaDataId>
      <name>winexWardLabel</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_gateway_url}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
  	
 
//logger.info(&apos;winex 日间标记更新=&apos;+JSON.stringify(msg));
var spec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {     
        &quot;inHospitalEncounterId&quot;: &quot;encounterIds[]&quot;,
        &quot;inpatientHosAreaCode&quot;: [&quot;hospitalSOID&quot;, &quot;soid[]&quot;]  
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;hospitalSOID&quot;: &quot;994272&quot;,
      &quot;soid&quot;: [994272],
      &quot;tagFlag&quot;: false,
      &quot;tagList&quot;: [
        {
    		&quot;tagData&quot;:&quot;&quot;,
          &quot;tagId&quot;: 4303920463
        }
      ]
    }
  }
];


 var jsonData=WinningJoltUtil.transform(msg,spec);

 
var  requestRootStr=&apos;{&quot;Request&quot;:{&quot;Head&quot;:{&quot;Version&quot;:&quot;2.0&quot;,&quot;TransferType&quot;:&quot;Async&quot;,&quot;ServiceVersion&quot;:&quot;1.1&quot;,&quot;Callback&quot;:&quot;&quot;,&quot;TranCode&quot;:&quot;4199-2087-02&quot;,&quot;LicId&quot;:&quot;Rn+JQjOd6wN9LtZ5pCoptw==&quot;,&quot;ContentType&quot;:&quot;text/json;charset=UTF-8&quot;,&quot;ContentEncoding&quot;:&quot;&quot;,&quot;OrgId&quot;:&quot;H0001&quot;,&quot;AppId&quot;:&quot;S1133&quot;,&quot;RecOrgId&quot;:&quot; H0001&quot;,&quot;RecAppId&quot;:&quot;HIS0509&quot;,&quot;Mac&quot;:&quot;00:16:EA:AE:3C:40&quot;,&quot;IPAddress&quot;:&quot;192.168.11.76&quot;,&quot;MessageId&quot;:&quot;&quot;,&quot;AppType&quot;:&quot;PC&quot;,&quot;SecurityPolicy&quot;:&quot;&quot;,&quot;SecurityContent&quot;:&quot;&quot;,&quot;Timestamp&quot;:&quot;&quot;},&quot;Body&quot;:&quot;&quot;}}&apos;;

var esbRequest=WinexEsbUtils.buildEsbRequest(requestRootStr,&apos;4199-2087-02&apos;,&apos;S1133&apos;,jsonData);
//logger.info(&apos;winex 日间标记更新 ===esbRequest=&apos;+esbRequest);
var esbObj=JSON.parse(esbRequest);
var bodystr=esbObj[&apos;Request&apos;][&apos;Body&apos;];
 
esbObj[&apos;Request&apos;][&apos;Body&apos;]=JSON.parse(bodystr);


 //logger.info(&apos;winex向入院证新增口 ===bodystr=&apos;+bodystr);
//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(esbObj));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()
  //  logger.error(&apos;日间标记更新异常11111111111 resposeInfo====&apos;+resposeInfo);
var tempRespose=JSON.parse(resposeInfo);


 
try{
      var ackCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;]; 
 

     if(&apos;100&apos;==ackCode||ackCode==100){      
     	   
      var outpCertId=tempRespose[&apos;Response&apos;][&apos;Body&apos;][&apos;outpCertId&apos;];
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;日间标记更新成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,outpCertId);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
       var msgCode= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckCode&apos;];
       var msgInfo= tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;];
       var errorMessage=&apos;操作失败:&apos;+msgInfo+&apos;,消息代码:&apos;+msgCode;
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,nul);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
      var AckMessage=tempRespose[&apos;Response&apos;][&apos;Head&apos;][&apos;AckMessage&apos;]; 
       //logger.error(&apos;日间标记更新异常====&apos;+AckMessage);
      var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询异常&apos;+AckMessage);	        
      var msg= JsonUtils.toJsonString(output); 
      responseMap.put(&apos;ACK&apos;,msg);      
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;winexWardLabel&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;winexWardLabel&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; contains &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>81</metaDataId>
      <name>addLisList-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeRisLisTableData</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;患者入区的请求jsonMessage =&apos;+jsonMessage);
// 需要转换的格式要求
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Event&quot;: {
        &quot;RecordDatetime&quot;: &quot;operatorDate&quot;,
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorCodeName&quot;
        }
      },
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: [&quot;inHospitalMedicalNo&quot;]
              },
              // 暂时不用
              &quot;RoleNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;RoleNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识 patientId
              //&quot;PersonID&quot;: {
              // &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              // }
            }
          }
        },
        //年龄
        &quot;Age&quot;: {
          &quot;0&quot;: {
            &quot;Identifier&quot;: &quot;age&quot;
          }
        },
        //身份证号码
        &quot;SSN&quot;: &quot;patientIdNo&quot;
      },
      //就诊记录
      &quot;PatientVisit&quot;: {
        &quot;PatientClass&quot;: {
          &quot;I&quot;: {
            //住院
            &quot;@(2,VisitNumber)&quot;: &quot;inHospitalEncounterId&quot;
          },
          &quot;O&quot;: {
            //门诊
            &quot;@(2,VisitNumber)&quot;: &quot;encounterId&quot;
          }
        }
      },
      &quot;OrderGroupList&quot;: {
        &quot;*&quot;: {
          &quot;Apply&quot;: {
            //申请单号
            //  &quot;ApplyNo&quot;: &quot;reportApplicationNumber&quot;,
            &quot;ApplyDetailList&quot;: {
              &quot;*&quot;: {
                &quot;@(2,ApplyNo)&quot;: &quot;risLisList[&amp;4].reportApplicationNumber&quot;,
                &quot;@(2,ApplyTime)&quot;: &quot;risLisList[&amp;4].surveyingEndTime&quot;,
                //发布状态 未发布
                &quot;#2&quot;: [&quot;risLisList[&amp;4].surveyingTypeCode&quot;,&quot;risLisList[&amp;4].surveyingReportStatusDict&quot;],
                &quot;#检验&quot;: &quot;risLisList[&amp;4].surveyingTypeName&quot;,
            
                &quot;ServiceInfo&quot;: {
                  &quot;ItemInfo&quot;: {
                    &quot;Identifier&quot;: &quot;risLisList[&amp;6].surveyingItemCode&quot;,
                    &quot;Text&quot;: &quot;risLisList[&amp;6].surveyingItemName&quot;
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //检验
      &quot;businessType&quot;: &quot;2&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//logger.info(&apos;患者入区的jsonData =&apos;+JSON.stringify(jsonData));

//调用日间手术管理系统的json字符串
//channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiJ0ZWNoIiwKICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjoidGV4dC9qc29uIiwKICAgICAgICAgICAgIlRyYW5Db2RlIjoiUFZNMDUwMSIsCiAgICAgICAgICAgICJDb250ZW50RW5jb2RpbmciOiIiLAogICAgICAgICAgICAiVHJhbnNmZXJUeXBlIjoiIiwKICAgICAgICAgICAgIlRpbWVzdGFtcCI6IjIwMjMtMTEtMDcgMTY6MDc6MzAuNzA4IiwKICAgICAgICAgICAgIlNlY3VyaXR5Q29udGVudCI6IiIsCiAgICAgICAgICAgICJNYWMiOiIiLAogICAgICAgICAgICAiT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiQ2FsbGJhY2siOiIiLAogICAgICAgICAgICAiQXBwSWQiOiJXSU5FWDYwIiwKICAgICAgICAgICAgIlZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiU2VjdXJpdHlQb2xpY3kiOiIiLAogICAgICAgICAgICAiU2VydmljZVZlcnNpb24iOiIxLjEiLAogICAgICAgICAgICAiUmVjT3JnSWQiOiI5OTM4OTgiLAogICAgICAgICAgICAiSVBBZGRyZXNzIjoiIiwKICAgICAgICAgICAgIkFwcFR5cGUiOiIiLAogICAgICAgICAgICAiTWVzc2FnZUlkIjoiYzg3NTlhOTQtN2M3OS00MWVjLThkMzQtZTM5YjY1MTM3M2IwIgogICAgICAgIH0sCiAgICAgICAgIkJvZHkiOnsKICAgICAgICAgICAgIlBhdGllbnRWaXNpdCI6ewogICAgICAgICAgICAgICAgIlBhdGllbnRMb2NhdGlvbiI6ewogICAgICAgICAgICAgICAgICAgICJCZWQiOiIzMCIsCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5ZG85ZC45LiO5Y2x6YeN55eH5Yy75a2m56eR77yI5ZG85ZC45bq35aSN56eR77yJIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIldhcmQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzazkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IjIwOeeXheWMuiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJSb29tIjoiMjA5LTExIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJIYW5kbGVMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSGFuZGxlQnkiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJSb2xlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIyMzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6LSj5Lu75Yy755SfIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJEZXBhcnRtZW50Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzMzgwOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLlkbzlkLjkuI7ljbHph43nl4fljLvlrabnp5HvvIjlkbzlkLjlurflpI3np5HvvIkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiNTI5MCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IueOi+e7tOebiiIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZVRpbWUiOiIyMDIzLTExLTA3IDE2OjA3OjM3IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjg2MjYzNzc1MjE4NzkwNDEiLAogICAgICAgICAgICAgICAgIlRyZWF0bWVudEdyb3VwIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiR3JvdXAiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzA5MzQzMDA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiUGh5c2ljaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHcm91cERlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjMzODA5QSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmtKrovonljY7nu4QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlBhdGllbnRDbGFzcyI6IkkiLAogICAgICAgICAgICAgICAgIlZpc2l0U3RhdHVzIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueXheWMuuWIhuW6iiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRlbW9ncmFwaHkiOnsKICAgICAgICAgICAgICAgICJTZXgiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6Ik0iLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi55S35oCnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJCaXJ0aGRheSI6IjE5OTktMDgtMTkgMDA6MDA6MDAiLAogICAgICAgICAgICAgICAgIlBhdGllbnROYW1lIjoi5b6Q6K+X5paHIiwKICAgICAgICAgICAgICAgICJQYXRpZW50SWRlbnRpZmllckxpc3QiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGVTY29wZSI6IkkiLAogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUGF0aWVudElEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6Ik1lZGljYWxSZWNvcmRObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjkzNDI1OTM5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI4NTkwNDU2NTYyODUxODQxIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlJvbGVObyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyODU5MDQ1NjU2Mjg1MTg0MCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkFnZSI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjI0LAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuWygSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIlNTTiI6IjM0MjIyMjE5OTkwODE5MTIxNSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIkRpYWdub3Npc0xpc3QiOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGlhZ25vc2lzVHlwZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NvZGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIzOTkzOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi56S+5Yy66I635b6X5oCn6IK654KO77yM6Z2e6YeN55eHIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc0NsYXNzIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi6Zeo6K+K6K+K5patIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkRpYWdub3Npc1R5cGUiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMzk5MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuekvuWMuuiOt+W+l+aAp+iCuueCju+8jOmdnumHjeeXhyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJEaWFnbm9zaXNDbGFzcyI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IjEiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IumXqOiviuiviuaWrSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxNjowNzozNyIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjYyNDUiLAogICAgICAgICAgICAgICAgICAgICJOYW1lIjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudEZhY2lsaXR5Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiI5OTE4MjciLAogICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJFdmVudENvZGUiOnsKICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IlBWTTA1MDEiLAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5oKj6ICF5YWl5Yy6IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>if (msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;])) {
    return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]&quot; equals &apos;ORD0304&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;ORD0304&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>82</metaDataId>
      <name>updateAcisMedicalOrder-5xhis</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${acis_url}/hlht/updateAsmcPatientInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);



// 需要转换的格式要求,把日间手术的字段转换成存储过程的字段
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
    	//手术医嘱序号临时存储到这个字段 用于后台存储更新usp_rjjk_sssq
	  &quot;medicalOrderNumber&quot;:&quot;qxssyy&quot;,
      &quot;asmcNumber&quot;: &quot;rjxh&quot;,
      &quot;operatorCode&quot;: &quot;czyh&quot;,
      &quot;inpatientNo&quot;: &quot;syxh&quot;,
      &quot;inHospitalPatientId&quot;: &quot;patid&quot;,
      &quot;inHospitalMedicalNo&quot;: &quot;blh&quot;,
      &quot;patientName&quot;: &quot;hzxm&quot;,
      &quot;patientSexDict&quot;: &quot;sex&quot;,
      &quot;age&quot;: &quot;age&quot;,
      &quot;wardCode&quot;: &quot;bqdm&quot;,
      &quot;deptCode&quot;: &quot;ksdm&quot;,
      &quot;bedCode&quot;: &quot;cwdm&quot;,
      &quot;planAnesthesiaMethodCode&quot;: &quot;mzdm&quot;,
      &quot;applyDate&quot;: &quot;sqrq&quot;,
      &quot;surgeryArrangeDate&quot;: &quot;aprq&quot;,
      &quot;surgeryStartTime&quot;: &quot;kssj&quot;,
      &quot;surgeryEndTime&quot;: &quot;jssj&quot;,
      &quot;surgeryDeptCode&quot;: &quot;ssksdm&quot;,
      &quot;operatingRoomCode&quot;: &quot;roomno&quot;,
      &quot;surgicalProceduresNumber&quot;: &quot;sstc&quot;,
      &quot;diseaseDescribe&quot;: &quot;bqsm&quot;,
      &quot;specialInfection&quot;: &quot;tsgr&quot;,
      &quot;hbvDict&quot;: &quot;ygbz&quot;,
      &quot;hcvDict&quot;: &quot;bgbz&quot;,
      &quot;syphilisDict&quot;: &quot;mdbz&quot;,
      &quot;hivDict&quot;: &quot;hivbz&quot;,
     // &quot;highValueConsumables&quot;:&quot;ssbzsm&quot;,
      &quot;surgeryAssistantCode1&quot;: &quot;sszsdm1&quot;,
      &quot;surgeryAssistantName1&quot;: &quot;sszsmc1&quot;,
      &quot;surgeryAssistantCode2&quot;: &quot;sszsdm2&quot;,
      &quot;surgeryAssistantName2&quot;: &quot;sszsmc2&quot;,
      &quot;surgeryAssistantCode3&quot;: &quot;sszsdm3&quot;,
      &quot;surgeryAssistantName3&quot;: &quot;sszsmc3&quot;,
      &quot;surgerySurgeonCode&quot;: &quot;zdysdm&quot;,
      &quot;diagnosisList&quot;: {
        &quot;0&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd&quot;
        },
        &quot;1&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd1&quot;
        },
        &quot;2&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd2&quot;
        },
        &quot;3&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd3&quot;
        }
      },
      &quot;surgeryEntityList&quot;: {
        &quot;0&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm&quot;,
          &quot;surgeryName&quot;: &quot;ssmc&quot;,
          //切口
          &quot;surgeryCutLevelDict&quot;: &quot;qkid&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid&quot;,
          //手术部位
          &quot;surgerySiteDict&quot;: &quot;bwid&quot;,
          //手术等级
          &quot;surgeryScaleDict&quot;: &quot;ssdj&quot;,
          //手术体位
          &quot;surgeryPositionDictStr&quot;: &quot;twmc&quot;
        },
        &quot;1&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm2&quot;,
          &quot;surgeryName&quot;: &quot;ssmc2&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkid2&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid2&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid2&quot;
        },
        &quot;2&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm3&quot;,
          &quot;surgeryName&quot;: &quot;ssmc3&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkid3&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid3&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid3&quot;
        },
        &quot;3&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm4&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid4&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid4&quot;
        },
        &quot;4&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm5&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid5&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid5&quot;
        },
        &quot;5&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm6&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid6&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid6&quot;
        }
      }
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;czbz&quot;: 3,
      &quot;rjxh&quot;: &quot;&quot;,
      &quot;czyh&quot;: &quot;&quot;,
      &quot;qxssyy&quot;: &quot;&quot;,
      &quot;syxh&quot;: 0,
      &quot;patid&quot;: &quot;&quot;,
      &quot;blh&quot;: &quot;&quot;,
      &quot;hzxm&quot;: &quot;&quot;,
      &quot;bqdm&quot;: &quot;&quot;,
      &quot;ksdm&quot;: &quot;&quot;,
      &quot;cwdm&quot;: &quot;&quot;,
      &quot;ssdm&quot;: &quot;&quot;,
      &quot;ssmc&quot;: &quot;&quot;,
      &quot;mzdm&quot;: &quot;&quot;,
      &quot;sqrq&quot;: null,
      &quot;aprq&quot;: null,
      &quot;kssj&quot;: null,
      &quot;jssj&quot;: null,
      &quot;ssksdm&quot;: &quot;&quot;,
      &quot;roomno&quot;: &quot;&quot;,
      &quot;sstc&quot;: &quot;&quot;,
      &quot;bqsm&quot;: &quot;&quot;,
      &quot;sqzd&quot;: &quot;&quot;,
      &quot;sqzd1&quot;: &quot;&quot;,
      &quot;sqzd2&quot;: &quot;&quot;,
      &quot;sqzd3&quot;: &quot;&quot;,
      &quot;ssdm2&quot;: &quot;&quot;,
      &quot;ssmc2&quot;: &quot;&quot;,
      &quot;ssdm3&quot;: &quot;&quot;,
      &quot;ssmc3&quot;: &quot;&quot;,
      &quot;qkid&quot;: &quot;&quot;,
      &quot;qkdj&quot;: &quot;&quot;,
      &quot;qkid2&quot;: &quot;&quot;,
      &quot;qkdj2&quot;: &quot;&quot;,
      &quot;qkid3&quot;: &quot;&quot;,
      &quot;qkdj3&quot;: &quot;&quot;,
      &quot;sscbid&quot;: &quot;&quot;,
      &quot;sscbid2&quot;: &quot;&quot;,
      &quot;sscbid3&quot;: &quot;&quot;,
      &quot;bwid&quot;: &quot;&quot;,
      &quot;twmc&quot;: &quot;&quot;,
      &quot;memo&quot;: &quot;&quot;,
      &quot;tsqx&quot;: &quot;&quot;,
      &quot;zdysdm&quot;: &quot;&quot;,
      &quot;sex&quot;: &quot;&quot;,
      &quot;age&quot;: &quot;&quot;,
      &quot;tsgr&quot;: &quot;&quot;,
      &quot;ssbw&quot;: &quot;&quot;,
      &quot;ygbz&quot;: &quot;&quot;,
      &quot;bgbz&quot;: &quot;&quot;,
      &quot;hivbz&quot;: &quot;&quot;,
      &quot;mdbz&quot;: &quot;&quot;,
      &quot;bwid2&quot;: &quot;&quot;,
      &quot;sszsdm1&quot;: &quot;&quot;,
      &quot;sszsmc1&quot;: &quot;&quot;,
      &quot;sszsdm2&quot;: &quot;&quot;,
      &quot;sszsmc2&quot;: &quot;&quot;,
      &quot;sszsdm3&quot;: &quot;&quot;,
      &quot;sszsmc3&quot;: &quot;&quot;,
      &quot;ssdm4&quot;: &quot;&quot;,
      &quot;ssdm5&quot;: &quot;&quot;,
      &quot;ssdm6&quot;: &quot;&quot;,
      &quot;bwid3&quot;: &quot;&quot;,
      &quot;bwid4&quot;: &quot;&quot;,
      &quot;bwid5&quot;: &quot;&quot;,
      &quot;bwid6&quot;: &quot;&quot;,
      &quot;sscbid4&quot;: &quot;&quot;,
      &quot;sscbid5&quot;: &quot;&quot;,
      &quot;sscbid6&quot;: &quot;&quot;,
      &quot;ssdj&quot;: &quot;&quot;
    //  ,     &quot;ssbzsm&quot;:&quot;&quot;
    }
}
]


  
var dbConn;
var result;

try {

      //通过规则转换进行请求参数的处理
     var jsonData=JSON.parse(WinningJoltUtil.transform(msg,spec));
	 // 获取全局的数据库配置参数
    var hisApiConfig=configurationMap.get(&apos;winning.his.sqlserver.api.config&apos;);
    
	//存储过程名称
    var procName=&apos;usp_rjjk_sssq&apos;; 
     
     var outArgInfo=new HashMap();
     outArgInfo[&apos;result&apos;]=&apos;VARCHAR&apos;;
     outArgInfo[&apos;msg&apos;]=&apos;VARCHAR&apos;;

    var inArgInfo= WinningCommonUtil.toMap(JSON.stringify(jsonData));
	var sqrq=inArgInfo[&apos;sqrq&apos;];	
	var syxh=inArgInfo[&apos;syxh&apos;];

	if(syxh==null||syxh==&apos;&apos;){
		inArgInfo[&apos;syxh&apos;]=0;
		
	}
 

    if(sqrq!=null&amp;&amp;sqrq!=&apos;null&apos;){  
      var format2 =sqrq.replace(&apos;-&apos;,&apos;&apos;);
      inArgInfo[&apos;sqrq&apos;]=format2.replace(&apos; &apos;,&apos;&apos;);
      	}

     WinningSpUtils.callSpsHasOutParameter(hisApiConfig, procName, outArgInfo, inArgInfo) ;
     var result= outArgInfo[&apos;result&apos;];
     if(&apos;T&apos;==result){
     	
        logger.info(&apos;==== czbz=3,call usp_rjjk_sssq success====&apos;);
     }else{
     	      
             var errMsg= outArgInfo[&apos;msg&apos;];
             logger.error(&apos;调用存储过程usp_rjjk_sssq错误====&apos;+errMsg);
           
    }
}catch(e){
      logger.error(&apos;调用存储过程usp_rjjk_sssq czbz=3异常====&apos;+e);
   }
   
   
   
   
   //logger.info(&apos;调用网关生成4199-2104-02=&apos;+JSON.stringify(msg));
var tempspec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      //  日间序号短码
      &quot;asmcNumber&quot;: &quot;daySurgeryNo&quot;,
      //医嘱号
      &quot;medicalOrderNumber&quot;: &quot;orderNo&quot; ,
      &quot;cisOrderNo&quot;:&quot;cisOrderNo&quot;,
      &quot;cisOrderDetailNo&quot;:&quot;cisOrderDetailNo&quot; ,
      //住院号
      &quot;inpatientNo&quot;: &quot;inPatientNo&quot;  
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
     
      //医嘱出处系统代码OID-日间手术系统
      &quot;businessType&quot;: &quot;2&quot;
    }
  } 
];


 var jsonData=WinningJoltUtil.transform(msg,tempspec);


//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

var tempRespose=JSON.parse(resposeInfo);
 

 
try{
      var ackCode= tempRespose[&apos;Code&apos;]; 
 

     if(&apos;0&apos;==ackCode||ackCode==0){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;调用成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
    
          
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);  
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;updateAcisMedicalOrder&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;updateAcisMedicalOrder&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>84</metaDataId>
      <name>updateOperationPatientInHospitalInfo-5xhis</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${acis_url}/hlht/updateAsmcPatientInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleRequest</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);

// 需要转换的格式要求,把日间手术的字段转换成存储过程的字段
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;asmcNumber&quot;: &quot;rjxh&quot;,
      &quot;operatorCode&quot;: &quot;czyh&quot;,
      &quot;inpatientNo&quot;: &quot;syxh&quot;,
      &quot;inHospitalPatientId&quot;: &quot;patid&quot;,
      &quot;inHospitalMedicalNo&quot;: &quot;blh&quot;,
      &quot;patientName&quot;: &quot;hzxm&quot;,
      &quot;patientSexDict&quot;: &quot;sex&quot;,
      &quot;age&quot;: &quot;age&quot;,
      &quot;wardCode&quot;: &quot;bqdm&quot;,
      &quot;deptCode&quot;: &quot;ksdm&quot;,
      &quot;bedCode&quot;: &quot;cwdm&quot;,
      &quot;planAnesthesiaMethodCode&quot;: &quot;mzdm&quot;,
      &quot;applyDate&quot;: &quot;sqrq&quot;,
     // &quot;surgeryArrangeDate&quot;: &quot;aprq&quot;,
      &quot;surgeryStartTime&quot;: &quot;kssj&quot;,
      &quot;surgeryEndTime&quot;: &quot;jssj&quot;,
      &quot;surgeryDeptCode&quot;: &quot;ssksdm&quot;,
      &quot;operatingRoomCode&quot;: &quot;roomno&quot;,
      &quot;surgicalProceduresNumber&quot;: &quot;sstc&quot;,
      &quot;diseaseDescribe&quot;: &quot;bqsm&quot;,
      &quot;specialInfection&quot;: &quot;tsgr&quot;,
      &quot;hbvDict&quot;: &quot;ygbz&quot;,
      &quot;hcvDict&quot;: &quot;bgbz&quot;,
      &quot;syphilisDict&quot;: &quot;mdbz&quot;,
      &quot;hivDict&quot;: &quot;hivbz&quot;,
      &quot;surgeryAssistantCode1&quot;: &quot;sszsdm1&quot;,
      &quot;surgeryAssistantName1&quot;: &quot;sszsmc1&quot;,
      &quot;surgeryAssistantCode2&quot;: &quot;sszsdm2&quot;,
      &quot;surgeryAssistantName2&quot;: &quot;sszsmc2&quot;,
      &quot;surgeryAssistantCode3&quot;: &quot;sszsdm3&quot;,
      &quot;surgeryAssistantName3&quot;: &quot;sszsmc3&quot;,
      &quot;surgerySurgeonCode&quot;: &quot;zdysdm&quot;,
      &quot;diagnosisList&quot;: {
        &quot;0&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd&quot;
        },
        &quot;1&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd1&quot;
        },
        &quot;2&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd2&quot;
        },
        &quot;3&quot;: {
          &quot;diagnosisCode&quot;: &quot;sqzd3&quot;
        }
      },
      &quot;surgeryEntityList&quot;: {
        &quot;0&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm&quot;,
          &quot;surgeryName&quot;: &quot;ssmc&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid&quot;,
          &quot;surgerySiteDict&quot;: &quot;ssbw&quot;,
          &quot;surgeryScaleDict&quot;: &quot;ssdj&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid&quot;
        },
        &quot;1&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm2&quot;,
          &quot;surgeryName&quot;: &quot;ssmc2&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj2&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid2&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid2&quot;
        },
        &quot;2&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm3&quot;,
          &quot;surgeryName&quot;: &quot;ssmc3&quot;,
          &quot;surgeryCutLevelDict&quot;: &quot;qkdj3&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid3&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid3&quot;
        },
        &quot;3&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm4&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid4&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid4&quot;
        },
        &quot;4&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm5&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid5&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid5&quot;
        },
        &quot;5&quot;: {
          &quot;surgeryCode&quot;: &quot;ssdm6&quot;,
          &quot;surgerySideDict&quot;: &quot;sscbid6&quot;,
          &quot;surgeryPositionDict&quot;: &quot;bwid6&quot;
        }
      }
    }
    },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      &quot;czbz&quot;: 2,
      &quot;rjxh&quot;: &quot;&quot;,
      &quot;czyh&quot;: &quot;&quot;,
      &quot;qxssyy&quot;: &quot;&quot;,
      &quot;syxh&quot;: 0,
      &quot;patid&quot;: &quot;&quot;,
      &quot;blh&quot;: &quot;&quot;,
      &quot;hzxm&quot;: &quot;&quot;,
      &quot;bqdm&quot;: &quot;&quot;,
      &quot;ksdm&quot;: &quot;&quot;,
      &quot;cwdm&quot;: &quot;&quot;,
      &quot;ssdm&quot;: &quot;&quot;,
      &quot;ssmc&quot;: &quot;&quot;,
      &quot;mzdm&quot;: &quot;&quot;,
      &quot;sqrq&quot;: &quot;&quot;,
      &quot;aprq&quot;: &quot;&quot;,
      &quot;kssj&quot;: &quot;&quot;,
      &quot;jssj&quot;: &quot;&quot;,
      &quot;ssksdm&quot;: &quot;&quot;,
      &quot;roomno&quot;: &quot;&quot;,
      &quot;sstc&quot;: &quot;&quot;,
      &quot;bqsm&quot;: &quot;&quot;,
      &quot;sqzd&quot;: &quot;&quot;,
      &quot;sqzd1&quot;: &quot;&quot;,
      &quot;sqzd2&quot;: &quot;&quot;,
      &quot;sqzd3&quot;: &quot;&quot;,
      &quot;ssdm2&quot;: &quot;&quot;,
      &quot;ssmc2&quot;: &quot;&quot;,
      &quot;ssdm3&quot;: &quot;&quot;,
      &quot;ssmc3&quot;: &quot;&quot;,
      &quot;qkid&quot;: &quot;&quot;,
      &quot;qkdj&quot;: &quot;&quot;,
      &quot;qkid2&quot;: &quot;&quot;,
      &quot;qkdj2&quot;: &quot;&quot;,
      &quot;qkid3&quot;: &quot;&quot;,
      &quot;qkdj3&quot;: &quot;&quot;,
      &quot;sscbid&quot;: &quot;&quot;,
      &quot;sscbid2&quot;: &quot;&quot;,
      &quot;sscbid3&quot;: &quot;&quot;,
      &quot;bwid&quot;: &quot;&quot;,
      &quot;twmc&quot;: &quot;&quot;,
      &quot;memo&quot;: &quot;&quot;,
      &quot;tsqx&quot;: &quot;&quot;,
      &quot;zdysdm&quot;: &quot;&quot;,
      &quot;sex&quot;: &quot;&quot;,
      &quot;age&quot;: &quot;&quot;,
      &quot;tsgr&quot;: &quot;&quot;,
      &quot;ssbw&quot;: &quot;&quot;,
      &quot;ygbz&quot;: &quot;&quot;,
      &quot;bgbz&quot;: &quot;&quot;,
      &quot;hivbz&quot;: &quot;&quot;,
      &quot;mdbz&quot;: &quot;&quot;,
      &quot;bwid2&quot;: &quot;&quot;,
      &quot;sszsdm1&quot;: &quot;&quot;,
      &quot;sszsmc1&quot;: &quot;&quot;,
      &quot;sszsdm2&quot;: &quot;&quot;,
      &quot;sszsmc2&quot;: &quot;&quot;,
      &quot;sszsdm3&quot;: &quot;&quot;,
      &quot;sszsmc3&quot;: &quot;&quot;,
      &quot;ssdm4&quot;: &quot;&quot;,
      &quot;ssdm5&quot;: &quot;&quot;,
      &quot;ssdm6&quot;: &quot;&quot;,
      &quot;bwid3&quot;: &quot;&quot;,
      &quot;bwid4&quot;: &quot;&quot;,
      &quot;bwid5&quot;: &quot;&quot;,
      &quot;bwid6&quot;: &quot;&quot;,
      &quot;sscbid4&quot;: &quot;&quot;,
      &quot;sscbid5&quot;: &quot;&quot;,
      &quot;sscbid6&quot;: &quot;&quot;,
      &quot;ssdj&quot;: &quot;&quot;
    }
}
];


try {

      //通过规则转换进行请求参数的处理
    var jsonData=JSON.parse(WinningJoltUtil.transform(msg,spec));
	 // 获取全局的数据库配置参数
    var hisApiConfig=configurationMap.get(&apos;winning.his.sqlserver.api.config&apos;);
    
	//存储过程名称
    var procName=&apos;usp_rjjk_sssq&apos;; 
     
     var outArgInfo=new HashMap();
     outArgInfo[&apos;result&apos;]=&apos;VARCHAR&apos;;
     outArgInfo[&apos;msg&apos;]=&apos;VARCHAR&apos;;


    
     var inArgInfo= WinningCommonUtil.toMap(JSON.stringify(jsonData));

    //logger.info(&apos;1111111====&apos;+inArgInfo);
     
     WinningSpUtils.callSpsHasOutParameter(hisApiConfig, procName, outArgInfo, inArgInfo) 
     var result= outArgInfo[&apos;result&apos;];
 
     if(&apos;T&apos;==result){
     	
        logger.info(&apos;==== czbz=2,call usp_rjjk_sssq success====&apos;);
     }else{
     	      
             var errMsg= outArgInfo[&apos;msg&apos;];
             logger.error(&apos;调用存储过程usp_rjjk_sssq错误====&apos;+errMsg);
           
    }
   

}catch(e){

      logger.error(&apos;调用存储过程usp_rjjk_sssq异常====&apos;+e);
    
}


 
 
var tempspec=[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      //  日间序号短码
      &quot;asmcNumber&quot;: &quot;daySurgeryNo&quot;,
      //住院号
      &quot;inpatientNo&quot;: &quot;inPatientNo&quot;  
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
     
      //医嘱出处系统代码OID-日间手术系统
      &quot;businessType&quot;: &quot;1&quot;
    }
  } 
];


 var jsonData=WinningJoltUtil.transform(msg,tempspec);


//调用esb系统的json字符串
channelMap.put(&apos;jsonData&apos;,jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);


 //调用接口响应返回 
var resposeInfo=connectorMessage.getResponseTransformedData()

var tempRespose=JSON.parse(resposeInfo);
 

 
try{
      var ackCode= tempRespose[&apos;Code&apos;]; 
 

     if(&apos;0&apos;==ackCode||ackCode==0){      
       var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;调用成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
     }else{     	      
    
          
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
    }
	      
}catch(e){
    
       var errorMessage=tempRespose[&apos;Message&apos;];
       var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,errorMessage).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);  
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;updateOperationPatientInHospitalInfo&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;updateOperationPatientInHospitalInfo&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>85</metaDataId>
      <name>SGR0102</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/writeBackOperatingRoomInfo</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.mapper.MapperStep version="4.4.0">
            <name>reqJsonMessage</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <variable>reqJsonMessage</variable>
            <mapping>msg[&apos;Request&apos;][&apos;Body&apos;]</mapping>
            <defaultValue>null</defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>handleJsonData</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 
//调用方传入的xmlMessage参数
var jsonMessage=JSON.stringify($(&apos;reqJsonMessage&apos;));
  
//var  jsonMessage=WinningCommonUtil.convertDataCharset(xmlMessage,&apos;ISO-8859-1&apos;);

  
//logger.info(&apos;手术安排接口的请求jsonMessage =&apos;+jsonMessage);
 
var spec= [
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;Demography&quot;: {
        &quot;PatientName&quot;: &quot;patientName&quot;,
        &quot;PatientIdentifierList&quot;: {
          &quot;*&quot;: {
            &quot;IDType&quot;: {
              // 患者ID
              &quot;PatientID&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;patientId&quot;
              },
              // 病历号
              &quot;MedicalRecordNo&quot;: {
                &quot;@(2,IDNumber)&quot;: &quot;inHospitalMedicalNo&quot;
              }
              //,
              // 病人标识，是否是60的患者标识？
              /// &quot;PersonID&quot;: {
              //   &quot;@(2,IDNumber)&quot;: &quot;encounterId&quot;
              //  }
            }
          }
        }
      },
      &quot;Event&quot;: {
        &quot;Operator&quot;: {
          &quot;IDNumber&quot;: &quot;operatorCode&quot;,
          &quot;Name&quot;: &quot;operatorName&quot;
        }
      },
      //就诊记录
      // &quot;PatientVisit&quot;: {
      //就诊流水号,---首页序号
      //卫宁系统:门诊挂号序号、住院病人首页序号
      //  &quot;VisitNumber&quot;: &quot;inpatientNo&quot;
      //   },
      &quot;OrderGroupList&quot;: {
        &quot;0&quot;: {
          &quot;Surgery&quot;: {
            &quot;DaySurgeryNo&quot;: &quot;daySurgeryId&quot;,
            &quot;ApplyNo&quot;: &quot;surgicalNerialNumber&quot;,
            &quot;SurgicalDetailList&quot;: {
              &quot;*&quot;: {
                &quot;SurgicalDateRangeList&quot;: {
                  &quot;*&quot;: {
                    &quot;Type&quot;: {
                      //手术安排时间
                      &quot;BookDT&quot;: {
                        &quot;@(2,RangeStartDT)&quot;: &quot;surgeryArrangeDate[]&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;default&quot;,
    &quot;spec&quot;: {
      //标记是winex 60的接口对接
      &quot;companyIdentifier&quot;: &quot;winex&quot;,
      &quot;writeBackType&quot;: &quot;3&quot;,
      //需要添加日间序号进行定位判断
      &quot;daySurgeryId&quot;: &quot;&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;cardinality&quot;,
    &quot;spec&quot;: {
      &quot;surgeryArrangeDate&quot;: &quot;ONE&quot;
    }
  }
];



//通过规则转换进行请求参数的处理
var jsonData=JSON.parse(WinningJoltUtil.transform(JSON.parse(jsonMessage),spec));
//把winex60的时间格式进行转换成标准格式给日间
//var convertedStr =WinningCommonUtil.handleJsonTimeFormat(JSON.stringify(jsonData), &apos;inpatientInDate,inpatientWardInDate&apos;, &apos;yyyyMMddHHmmss&apos;, &apos;yyyy-MM-dd HH:mm:ss&apos;);

//调用日间手术管理系统的json字符串
channelMap.put(&apos;jsonData&apos;,JSON.stringify(jsonData));
//channelMap.put(&apos;jsonData&apos;,convertedStr);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">ewogICAgIlJlcXVlc3QiOnsKICAgICAgICAiSGVhZCI6ewogICAgICAgICAgICAiTGljSWQiOiIiLAogICAgICAgICAgICAiUmVjQXBwSWQiOiIiLAogICAgICAgICAgICAiQ29udGVudFR5cGUiOiJ0ZXh0L2pzb24iLAogICAgICAgICAgICAiVHJhbkNvZGUiOiJQVk0wMjAxIiwKICAgICAgICAgICAgIkNvbnRlbnRFbmNvZGluZyI6IiIsCiAgICAgICAgICAgICJUcmFuc2ZlclR5cGUiOiIiLAogICAgICAgICAgICAiVGltZXN0YW1wIjoiMjAyMy0xMS0wNyAxMzo0NDozNy4wMjEiLAogICAgICAgICAgICAiU2VjdXJpdHlDb250ZW50IjoiIiwKICAgICAgICAgICAgIk1hYyI6IiIsCiAgICAgICAgICAgICJPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJDYWxsYmFjayI6IiIsCiAgICAgICAgICAgICJBcHBJZCI6IldJTkVYNjAiLAogICAgICAgICAgICAiVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJTZWN1cml0eVBvbGljeSI6IiIsCiAgICAgICAgICAgICJTZXJ2aWNlVmVyc2lvbiI6IjEuMSIsCiAgICAgICAgICAgICJSZWNPcmdJZCI6Ijk5Mzg5OCIsCiAgICAgICAgICAgICJJUEFkZHJlc3MiOiIiLAogICAgICAgICAgICAiQXBwVHlwZSI6IiIsCiAgICAgICAgICAgICJNZXNzYWdlSWQiOiJlZTUxODk3ZS1hNDk0LTRkNmMtYjNhMy03NDVjZjAxMjdkMDAiCiAgICAgICAgfSwKICAgICAgICAiQm9keSI6ewogICAgICAgICAgICAiUGF0aWVudFZpc2l0Ijp7CiAgICAgICAgICAgICAgICAiSGFuZGxlTGlzdCI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkhhbmRsZUJ5Ijp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuS9j+mZouWwseiviuWPguS4juiAheinkuiJsuexu+Wei+S7o+eggSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRGVwYXJ0bWVudCI6ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiIzEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjUzNjYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiLmr5vlvLoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJIYW5kbGVUaW1lIjoiMjAyMy0xMC0zMCAxNzo0NToyNCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIkluSG9zcGl0YWxEYXlzIjoiMSIsCiAgICAgICAgICAgICAgICAiVmlzaXROdW1iZXIiOiIzMjcwODYyNzA5NjkwMTAxNzYiLAogICAgICAgICAgICAgICAgIlZpc2l0Q291bnQiOiIxIiwKICAgICAgICAgICAgICAgICJQYXRpZW50Q2xhc3MiOiJJIiwKICAgICAgICAgICAgICAgICJWaXNpdFN0YXR1cyI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiMyIsCiAgICAgICAgICAgICAgICAgICAgIlRleHQiOiLmgqPogIXlh7rpmaIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJEZW1vZ3JhcGh5Ijp7CiAgICAgICAgICAgICAgICAiU2V4Ijp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJNIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IueUt+aApyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiQmlydGhkYXkiOiIxOTg1LTA5LTA4IDAwOjAwOjAwIiwKICAgICAgICAgICAgICAgICJQYXRpZW50TmFtZSI6IuadqOW/l+aciyIsCiAgICAgICAgICAgICAgICAiUGF0aWVudElkZW50aWZpZXJMaXN0IjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlIjoiUm9sZU5vIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiSURUeXBlU2NvcGUiOiJJIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBhdGllbnRJRCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6IjMyNzA4NDgzMDAwNzM0NTE1MiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZVNjb3BlIjoiSSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJJRFR5cGUiOiJNZWRpY2FsUmVjb3JkTm8iLAogICAgICAgICAgICAgICAgICAgICAgICAiSUROdW1iZXIiOiI5MzQwMjI3NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIklEVHlwZSI6IlBlcnNvbklEIiwKICAgICAgICAgICAgICAgICAgICAgICAgIklETnVtYmVyIjoiMzI3MDg0ODMwMDA3MzQ1MTUyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiQWdlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOjM4LAogICAgICAgICAgICAgICAgICAgICJUZXh0Ijoi5bKBIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJTU04iOiIzNjAxMjExOTg1MDkwODUyMTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJFdmVudCI6ewogICAgICAgICAgICAgICAgIlJlY29yZERhdGV0aW1lIjoiMjAyMy0xMS0wNyAxMzo0NDo1MiIsCiAgICAgICAgICAgICAgICAiT3BlcmF0b3IiOnsKICAgICAgICAgICAgICAgICAgICAiUm9sZSI6ewogICAgICAgICAgICAgICAgICAgICAgICAiSWRlbnRpZmllciI6IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJUZXh0IjoiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgIkRlcGFydG1lbnQiOnsKICAgICAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiIiLAogICAgICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJJRE51bWJlciI6bnVsbCwKICAgICAgICAgICAgICAgICAgICAiTmFtZSI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRGYWNpbGl0eSI6ewogICAgICAgICAgICAgICAgICAgICJJZGVudGlmaWVyIjoiOTkzODk4IiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiRXZlbnRDb2RlIjp7CiAgICAgICAgICAgICAgICAgICAgIklkZW50aWZpZXIiOiJQVk0wMjAxIiwKICAgICAgICAgICAgICAgICAgICAiVGV4dCI6IuaCo+iAheWHuumZoiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewoia2V5IjoidmFsdWUiCn0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取ESB推送的原始数据，进行返回结果拼装准备 originalRequestStr


var originalRequestStr=connectorMessage.getRawData();

var originalJsonObj=JSON.parse(originalRequestStr);
 
//去除body，保留head数据
delete originalJsonObj.Request.Body;
delete originalJsonObj.Request.Head.LicUserId;
delete originalJsonObj.Request.Head[&apos;X-LOGGER&apos;];
delete originalJsonObj.Request.Head[&apos;X-LOGGER-EVENT&apos;];
 
var requestRootStr=JSON.stringify(originalJsonObj)

         //日间返回的json数据
        var resp=response.getMessage(); 
      //   logger.info(&apos;respose writeAppointmentAdmission=&apos;+resp);

  
    try{

        // 转换日间系统返回的json对象
        var repJson=JSON.parse(resp);
	  //获取日间系统返回的状态码 0为成功  其他是失败
        var retCode=repJson[&apos;code&apos;];
          //成功的处理逻辑
	   if(retCode==0||retCode==&apos;0&apos;){		
    


		//根据规则转换成日间.NET版本需要的json对象
    //  var jsonData=JSON.parse(WinningJoltUtil.transform(repJson,spec));

	  //json字符串转xml字符串
      //var retXmlStr=  WinningJoltUtil.toXml(JSON.stringify(jsonData));
       
      //logger.info(&apos;respose retXmlStr=&apos;+retXmlStr);

     //拼装最后的xml返回参数
    //  var respXML=   WinningCommonUtil.handleRetXmlData(&apos;&apos;,true);
	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;100&apos;,&apos;成功&apos;)      
      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else  if(retCode==101||retCode==&apos;101&apos;){	
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;]	
	    	 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;101&apos;,errMsg)      
	      responseMap.put(&apos;ACK&apos;,esbResponseStr);
 
	}else {
			//日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+errMsg)      
          responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
		}
        
        }catch(e){
	      //日间处理报错
	      var errMsg=repJson[&apos;message&apos;];
    		 var esbResponseStr=WinexEsbUtils.buildSurgeryResponse(requestRootStr,&apos;200&apos;,&apos;失败：&apos;+e)      
           responseMap.put(&apos;ACK&apos;,esbResponseStr);
		
               
        }</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule version="4.4.0">
            <name>one</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var tranCode =msg&amp;&amp;(msg[&apos;Request&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;])&amp;&amp;(msg[&apos;Request&apos;][&apos;Head&apos;][&apos;TranCode&apos;]);

if(tranCode == &apos;SGR0102&apos;){

   return true;
    
}

return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>86</metaDataId>
      <name>viewPatient360-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>&apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <name>hanleResponse</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

//获取日间请求的参数，用于后面的参数拼接
var originalRequestStr = connectorMessage.getRawData();

var requestObj = JSON.parse(originalRequestStr);

try {
    // 获取全局的配置参数，存储过程在日间手术
    var url360 = configurationMap.get(&apos;patient.360.url&apos;);
    if (requestObj) {
        requestObj[&apos;userCode&apos;] = requestObj[&apos;operatorCode&apos;];
        var tempUrl = url360 + &quot;/winsso/c/${userCode}/${patientIdNo}/1/${patientId}/${outpatientId}/0/0/${outpatientMedicalNo}/-1/42505626100/0/${outpatientDeptName}/mzysclient&quot;;
        var jump360url = WinningCommonUtil.replace(requestObj, tempUrl);
        var output = Maps.map().add(&apos;status&apos;, true).add(&apos;msg&apos;, &apos;操作成功&apos;).add(&apos;count&apos;, 1).add(&apos;data&apos;, jump360url);
        msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    }

} catch (e) {
    logger.error(&apos;获取360token异常====&apos; + e);
    var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;查询异常&apos; + e);
    var msg = JsonUtils.toJsonString(output);
    responseMap.put(&apos;ACK&apos;, msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;viewPatient360&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;viewPatient360&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>87</metaDataId>
      <name>getReportByPatid-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.org.apache.commons.lang3);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


try {

    // 获取全局的数据库配置参数，存储过程在日间手术
    var hisApiConfig = configurationMap.get(&apos;winning.asmc.sqlserver.api.config&apos;);


    //var dbconfig=hisApiConfig[&apos;dbconfig&apos;];

    //请求的参数字符串
    var requestStr = connectorMessage.getRawData();
    //打印日志
    // logger.info(&apos;获取检查检验报告申请单信息调用请求的参数是====&apos;+requestStr);
    // 转换格式，目前不转换，备用
    var spec = [{
            &quot;operation&quot;: &quot;shift&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;patientId&quot;,
                &quot;outpatientId&quot;: &quot;outpatientId&quot;,
                &quot;outpatientMedicalNo&quot;: &quot;outpatientMedicalNo&quot;,
                &quot;inHospitalMedicalNo&quot;: &quot;inHospitalMedicalNo&quot;,
                &quot;startTime&quot;: &quot;startTime&quot;,
                &quot;endTime&quot;: &quot;endTime&quot;
            }
        },
        {
            &quot;operation&quot;: &quot;default&quot;,
            &quot;spec&quot;: {
                &quot;patientId&quot;: &quot;&quot;,
                &quot;outpatientId&quot;: &quot;&quot;,
                &quot;outpatientMedicalNo&quot;: &quot;&quot;,
                &quot;inHospitalMedicalNo&quot;: &quot;&quot;,
                &quot;startTime&quot;: &quot;&quot;,
                &quot;endTime&quot;: &quot;&quot;
            }
        }
    ]

    //通过规则转换进行请求参数的处理
    var jsonData = JSON.parse(WinningJoltUtil.transform(JSON.parse(requestStr), spec));

    //存储过程名称[usp_asmc_getReportByPatid]
    var procName = &apos;usp_asmc_getReportByPatid&apos;;
    //存储过程的参数拼接
    var inArgInfo = WinningCommonUtil.toMap(JSON.stringify(jsonData));


    var patientId = inArgInfo[&apos;patientId&apos;];

    if (StringUtils.isEmpty(patientId)) {

        var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;患者[patientId]不能为空&apos;);
        var msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    } else {

        //    logger.info(&apos;获取检查检验报告申请单信息调用请求的参数是 inArgInfo====&apos;+inArgInfo);
        var list = WinningSpUtils.callSpsGetList(hisApiConfig, procName, inArgInfo);

        //list json字符串
        var retJsonStr = WinningCommonUtil.listToJsonStr(list);
        //logger.info(&apos;获取检查检验报告申请单存储过程usp_asmc_getReportByPatid信息返回数据是retJsonStr====&apos;+retJsonStr);     
        var output = Maps.map().add(&apos;status&apos;, true).add(&apos;data&apos;, JSON.parse(retJsonStr));

        //若需要把数据库字段转换字段，执行下面代码,
        var repsoneSpec = [{
                &quot;operation&quot;: &quot;shift&quot;,
                &quot;spec&quot;: {
                    &quot;data&quot;: {
                        &quot;*&quot;: {
                            &quot;patientId&quot;: &quot;data[&amp;1].patientId&quot;,
                            &quot;surveyingItemCode&quot;: &quot;data[&amp;1].surveyingItemCode&quot;,
                            &quot;surveyingItemName&quot;: &quot;data[&amp;1].surveyingItemName&quot;,
                            &quot;surveyingTypeCode&quot;: &quot;data[&amp;1].surveyingTypeCode&quot;,
                            &quot;surveyingReportStatusDict&quot;: &quot;data[&amp;1].surveyingReportStatusDict&quot;,
                            &quot;surveyingReportTime&quot;: &quot;data[&amp;1].surveyingReportTime&quot;,
                            &quot;surveyingEndTime&quot;: &quot;data[&amp;1].surveyingEndTime&quot;,
                            &quot;reportApplicationNumber&quot;: &quot;data[&amp;1].reportApplicationNumber&quot;,
                            &quot;patientName&quot;: &quot;data[&amp;1].patientName&quot;,
                            &quot;applyOpeningTime&quot;: &quot;data[&amp;1].applyOpeningTime&quot;,
                            &quot;reportUrl&quot;: &quot;data[&amp;1].reportUrl&quot;
                        }
                    }
                }
            },
            {
                &quot;operation&quot;: &quot;default&quot;,
                &quot;spec&quot;: {
                    &quot;data[]&quot;: {
                        &quot;*&quot;: {
                            &quot;patientId&quot;: &quot;&quot;,
                            &quot;surveyingItemCode&quot;: &quot;&quot;,
                            &quot;surveyingItemName&quot;: &quot;&quot;,
                            &quot;surveyingTypeCode&quot;: &quot;&quot;,
                            &quot;surveyingReportStatusDict&quot;: &quot;&quot;,
                            &quot;surveyingReportTime&quot;: &quot;&quot;,
                            &quot;surveyingEndTime&quot;: &quot;&quot;,
                            &quot;reportApplicationNumber&quot;: &quot;&quot;,
                            &quot;patientName&quot;: &quot;&quot;,
                            &quot;applyOpeningTime&quot;: &quot;&quot;,
                            &quot;reportUrl&quot;: &quot;&quot;,
                            &quot;statusDict&quot;: &quot;1&quot;
                        }
                    }
                }
            }
        ];

        // 如果需要转换则使用固定格式处理
        var retOutput = JSON.parse(WinningJoltUtil.transform(output, repsoneSpec));
        //logger.info(&apos;获取检查检验报告申请单信息返回数据是retOutput====&apos;+retOutput);  
        retOutput.count = retOutput.data.length;
        retOutput.status = true;
        retOutput.msg = &apos;数据获取成功&apos;;

        msg = JsonUtils.toJsonString(retOutput);
        responseMap.put(&apos;ACK&apos;, msg);
    }

} catch (e) {

    // logger.error(&apos;调用存储过程usp_asmc_getReportByPatid异常====&apos;+e);
    var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;查询异常&apos; + e);
    var msg = JsonUtils.toJsonString(output);
    responseMap.put(&apos;ACK&apos;, msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;getReportByPatid&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getReportByPatid&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>88</metaDataId>
      <name>updateHisBrsykFzStatus-5xhis</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &apos;{}&apos;</script>
      </properties>
      <transformer version="4.4.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.text);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.com.mirth.connect.userutil);


//请求的参数字符串
var requestStr = connectorMessage.getRawData();
// logger.error(&apos;发送 usp_asmc_updateHisBrsykFzStatus requestStr====&apos;+requestStr);
var dbConn;
var result;

try {

    //通过规则转换进行请求参数的处理
    var jsonData = JSON.parse(requestStr);
    // 获取全局的数据库配置参数
    var hisApiConfig = configurationMap.get(&apos;winning.asmc.sqlserver.api.config&apos;);

    //存储过程名称
    var procName = &apos;usp_asmc_updateHisBrsykFzStatus&apos;;

    var outArgInfo = new HashMap();
    outArgInfo[&apos;result&apos;] = &apos;VARCHAR&apos;;
    outArgInfo[&apos;msg&apos;] = &apos;VARCHAR&apos;;

    var inArgInfo = new HashMap();

    //首页序号
    inArgInfo[&apos;syxh&apos;] = jsonData[&apos;inpatientNo&apos;];
    //日间手术短码
    inArgInfo[&apos;rjxh&apos;] = jsonData[&apos;asmcNumber&apos;];
    //操作标志
    inArgInfo[&apos;czbz&apos;] = jsonData[&apos;hisAsmcNumberStatus&apos;];
    //logger.error(&apos;发送 usp_asmc_updateHisBrsykFzStatus inArgInfo====&apos;+inArgInfo);

    WinningSpUtils.callSpsHasOutParameter(hisApiConfig, procName, outArgInfo, inArgInfo)
    var result = outArgInfo[&apos;result&apos;];
    //logger.error(&apos;发送 usp_asmc_updateHisBrsykFzStatus outArgInfo====&apos;+outArgInfo);
    if (&apos;T&apos; == result) {

        var output = Maps.map().add(&apos;status&apos;, true).add(&apos;msg&apos;, &apos;操作成功&apos;).add(&apos;count&apos;, 1).add(&apos;data&apos;, true);
        msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    } else {

        var errMsg = outArgInfo[&apos;msg&apos;];
        var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;操作失败&apos; + errMsg).add(&apos;count&apos;, 1).add(&apos;data&apos;, false);
        msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
    }

} catch (e) {

    //   logger.error(&apos;调用存储过程usp_asmc_updateHisBrsykFzStatus====&apos;+e);
    var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;查询异常&apos; + e).add(&apos;data&apos;, false);
    var msg = JsonUtils.toJsonString(output);
    responseMap.put(&apos;ACK&apos;, msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap.get(&apos;url&apos;)&quot; contains &apos;updateHisBrsykFzStatus&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap.get(&apos;url&apos;)</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;updateHisBrsykFzStatus&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning_5xhis&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning_5xhis&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>89</metaDataId>
      <name>getAnesthesiaAssessmentList-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://his.apps.ocpcluat.cmm-pumch.gov.mo/outpat-biz-gateway/api/v1/biz_gateway/record_emr/history_emr/query/by_example</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
 

//{
//&quot;encounterId&quot;:&quot;384238762915540993&quot;,
//&quot;endDate&quot;: &quot;2024-09-02 17:22:22&quot;,
//&quot;startDate&quot;: &quot;2024-09-01 00:00:00&quot;,
//&quot;soid&quot;:[994272]
//}

// 获取当前时间
var now = WinningDateUtils.getStandardNowStr();
// 获取当前时间前一个月
var oneMonthAgo =  new Packages.cn.hutool.core.date.DateUtil.lastMonth().toString();
 
msg[&apos;nowTime&apos;] = now;
msg[&apos;oneMonthAgo&apos;] = oneMonthAgo;

var spec = [{
        &quot;operation&quot;: &quot;shift&quot;,
        &quot;spec&quot;: {
            &quot;encounterId&quot;: &quot;encounterId&quot;,
            &quot;inpatientHosAreaCode&quot;: &quot;soid[]&quot;,
            &quot;oneMonthAgo&quot;: &quot;startDate&quot;,
            &quot;nowTime&quot;: &quot;endDate&quot;
        }
    }
];

var jsonData = WinningJoltUtil.transform(msg, spec);
 
channelMap.put(&apos;jsonData&apos;, jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

try {
  
    var resp = response.getMessage();
   
    var repJson = JSON.parse(resp);
    var successFlag = repJson[&apos;success&apos;];

   
    //成功的处理逻辑
    if (successFlag == &apos;true&apos;||successFlag == true) {
        var spec = [{
            &quot;operation&quot;: &quot;shift&quot;,
            &quot;spec&quot;: {
                &quot;data&quot;: {
                    &quot;*&quot;: {
                        &quot;mrtId&quot;: {
                            // 患者ID
                            &quot;1828691497508143104&quot;: {
                                &quot;@(2,emrSetId)&quot;: &quot;emrSetId&quot;
                            }
                        }
                    }
                }
            }
        }];

        var jsonData = WinningJoltUtil.transform(repJson, spec);
	   if (jsonData != null &amp;&amp; jsonData !== undefined) {
		    var jsonDataObj = JSON.parse(jsonData);
		    
		    if (jsonDataObj != null &amp;&amp; jsonDataObj !== undefined) {
		        var emrSetId = jsonDataObj[&apos;emrSetId&apos;];
		       
		        if (emrSetId != null &amp;&amp; emrSetId !== undefined) {
		              channelMap.put(&quot;emrSetId&quot;, emrSetId);
		        }
		    } else {
				var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询数据为空&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
		        msg= JsonUtils.toJsonString(output); 
		        responseMap.put(&apos;ACK&apos;,msg);
		    }
		} else {
		   
			  var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;查询数据为空&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
		       msg= JsonUtils.toJsonString(output); 
		       responseMap.put(&apos;ACK&apos;,msg);
		}




         
    }

} catch (e) {

	logger.info(&apos;查询麻醉评估单异常&apos;+e);

}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;getAnesthesiaAssessmentInfo&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getAnesthesiaAssessmentInfo&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>false</waitForPrevious>
    </connector>
    <connector version="4.4.0">
      <metaDataId>90</metaDataId>
      <name>getAnesthesiaAssessmentDetail-winex</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.4.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.4.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${winning_asms_url}/externalApi/winning/emrDetail</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Content-Type</string>
            <list>
              <string></string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${jsonData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);
importPackage(Packages.org.apache.commons.lang3); 

//{
//    &quot;emrSetId&quot;: 384244352824004609,
//    &quot;hospitalSOID&quot;: &quot;994272&quot;,
//   &quot;soid&quot;: [
//    994272
//  ]
// }channelMap.get(&apos;key&apos;)



 
var emrSetId=channelMap.get(&apos;emrSetId&apos;);


  if (StringUtils.isEmpty(emrSetId)) {
        var output = Maps.map().add(&apos;status&apos;, false).add(&apos;msg&apos;, &apos;emrSetId不能为空&apos;);
        var msg = JsonUtils.toJsonString(output);
        responseMap.put(&apos;ACK&apos;, msg);
  }


var emrObj=JSON.parse(connectorMessage.getRawData());
emrObj[&apos;emrSetId&apos;]=emrSetId;

var spec = [{
        &quot;operation&quot;: &quot;shift&quot;,
        &quot;spec&quot;: {
            &quot;emrSetId&quot;: &quot;emrSetId&quot;,
            &quot;inpatientHosAreaCode&quot;: [&quot;soid[]&quot;,&quot;hospitalSOID&quot;] 
        }
    }
];

var jsonData = WinningJoltUtil.transform(emrObj, spec);
 
channelMap.put(&apos;jsonData&apos;, jsonData);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.4.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>importPackage(Packages.java.util);
importPackage(Packages.java.lang);
importPackage(Packages.com.winning.mirth);
importPackage(Packages.com.bazaarvoice.jolt);

try {
	var resp = response.getMessage();
	var repJson = JSON.parse(resp);
	var successFlag = repJson[&apos;success&apos;];
	//成功的处理逻辑
	if (successFlag == &apos;true&apos;||successFlag == true) {
		var spec = [{
				&quot;operation&quot;: &quot;shift&quot;,
				&quot;spec&quot;: {
					&quot;data&quot;: {
						&quot;submitBy&quot;: &quot;operatorId&quot;,
						&quot;submitByName&quot;: &quot;operatorName&quot;,
						&quot;submitByNo&quot;: &quot;operatorCode&quot;,
						&quot;submitAt&quot;: &quot;operatorDate&quot;,
						&quot;contents&quot;: {
							&quot;*&quot;: {
								&quot;conceptId&quot;: {
									// 98175  符合
									&quot;399443159&quot;: {
										&quot;@(2,valueId)&quot;: &quot;valueId&quot;
									}
								}
							}
						}
					}
				}
			},

			{
				&quot;operation&quot;: &quot;shift&quot;,
				&quot;spec&quot;: {
					&quot;valueId&quot;: {
						&quot;98175&quot;: {
							//麻醉评估结果为通过
							&quot;#1&quot;: &quot;anestheticEvaluationResultDict&quot;
						}
					},
					&quot;*&quot;: &quot;&amp;&quot;
				}
			},

			{
				&quot;operation&quot;: &quot;default&quot;,
				&quot;spec&quot;: {
					//默认评估不通过
					&quot;anestheticEvaluationResultDict&quot;: 2
				}
			}
		];

		var jsonData = WinningJoltUtil.transform(repJson, spec);
		var output=Maps.map().add(&apos;status&apos;,true).add(&apos;msg&apos;,&apos;操作成功&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,JSON.parse(jsonData));	
          msg= JsonUtils.toJsonString(output); 
          responseMap.put(&apos;ACK&apos;,msg);
		 
	}

} catch (e) {
	  logger.error(&apos;查询麻醉评估单明细异常&apos; + e);
	  var output=Maps.map().add(&apos;status&apos;,false).add(&apos;msg&apos;,&apos;操作失败&apos;).add(&apos;count&apos;,1).add(&apos;data&apos;,null);	
       msg= JsonUtils.toJsonString(output); 
       responseMap.put(&apos;ACK&apos;,msg);
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.4.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.4.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.4.0">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;sourceMap[&apos;url&apos;]&quot; contains &apos;getAnesthesiaAssessmentInfo&apos;</name>
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <field>sourceMap[&apos;url&apos;]</field>
            <condition>CONTAINS</condition>
            <values>
              <string>&apos;getAnesthesiaAssessmentInfo&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule version="4.4.0">
            <name>Accept message if &quot;msg[&apos;apiInterfaceProviderCode&apos;]&quot; equals &apos;Winning&apos;</name>
            <sequenceNumber>1</sequenceNumber>
            <enabled>true</enabled>
            <operator>AND</operator>
            <field>msg[&apos;apiInterfaceProviderCode&apos;]</field>
            <condition>EQUALS</condition>
            <values>
              <string>&apos;Winning&apos;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        </elements>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="4.4.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <encryptAttachments>true</encryptAttachments>
    <encryptCustomMetaData>false</encryptCustomMetaData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="4.4.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>false</enabled>
      <lastModified>
        <time>1725718016391</time>
        <timezone>Asia/Shanghai</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>2</pruneMetaDataDays>
        <pruneContentDays>2</pruneContentDays>
        <archiveEnabled>false</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
      <userId>1</userId>
    </metadata>
    <channelTags/>
  </exportData>
</channel>